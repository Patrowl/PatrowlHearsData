{"publishedDate": "2025-10-22T14:15Z", "lastModifiedDate": "2025-10-22T21:12Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2023-53694", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nriscv: ftrace: Fixup panic by disabling preemption\n\nIn RISCV, we must use an AUIPC + JALR pair to encode an immediate,\nforming a jump that jumps to an address over 4K. This may cause errors\nif we want to enable kernel preemption and remove dependency from\npatching code with stop_machine(). For example, if a task was switched\nout on auipc. And, if we changed the ftrace function before it was\nswitched back, then it would jump to an address that has updated 11:0\nbits mixing with previous XLEN:12 part.\n\np: patched area performed by dynamic ftrace\nftrace_prologue:\np|      REG_S   ra, -SZREG(sp)\np|      auipc   ra, 0x? ------------> preempted\n\t\t\t\t\t...\n\t\t\t\tchange ftrace function\n\t\t\t\t\t...\np|      jalr    -?(ra) <------------- switched back\np|      REG_L   ra, -SZREG(sp)\nfunc:\n\txxx\n\tret"}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/20a7510e781084364691b4962de31de758194cc9", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/84cfcf240f4a577733b1d98fcd2611a611612b03", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/8547649981e6631328cd64f583667501ae385531", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {}, "configurations": {"CVE_data_version": "4.0", "nodes": []}}