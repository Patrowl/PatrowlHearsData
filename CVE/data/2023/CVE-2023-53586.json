{"publishedDate": "2025-10-04T16:15Z", "lastModifiedDate": "2025-10-06T14:56Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2023-53586", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: target: Fix multiple LUN_RESET handling\n\nThis fixes a bug where an initiator thinks a LUN_RESET has cleaned up\nrunning commands when it hasn't. The bug was added in commit 51ec502a3266\n(\"target: Delete tmr from list before processing\").\n\nThe problem occurs when:\n\n 1. We have N I/O cmds running in the target layer spread over 2 sessions.\n\n 2. The initiator sends a LUN_RESET for each session.\n\n 3. session1's LUN_RESET loops over all the running commands from both\n    sessions and moves them to its local drain_task_list.\n\n 4. session2's LUN_RESET does not see the LUN_RESET from session1 because\n    the commit above has it remove itself. session2 also does not see any\n    commands since the other reset moved them off the state lists.\n\n 5. sessions2's LUN_RESET will then complete with a successful response.\n\n 6. sessions2's inititor believes the running commands on its session are\n    now cleaned up due to the successful response and cleans up the running\n    commands from its side. It then restarts them.\n\n 7. The commands do eventually complete on the backend and the target\n    starts to return aborted task statuses for them. The initiator will\n    either throw a invalid ITT error or might accidentally lookup a new\n    task if the ITT has been reallocated already.\n\nFix the bug by reverting the patch, and serialize the execution of\nLUN_RESETs and Preempt and Aborts.\n\nAlso prevent us from waiting on LUN_RESETs in core_tmr_drain_tmr_list,\nbecause it turns out the original patch fixed a bug that was not\nmentioned. For LUN_RESET1 core_tmr_drain_tmr_list can see a second\nLUN_RESET and wait on it. Then the second reset will run\ncore_tmr_drain_tmr_list and see the first reset and wait on it resulting in\na deadlock."}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/2c43de56f9220dca3e28c774d1c5e2cab574223a", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/673db054d7a2b5a470d7a25baf65956d005ad729", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/9158c86fd3237acaea8f0181c7836d90fd6eea10", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/e1f59cd18a10969d08a082264b557876ca38766e", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/eacfe32c3650bfd0e54224d160c431013d7f6998", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/ed18526289b5603bf2253dee50f1d7ec245cf397", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {}, "configurations": {"CVE_data_version": "4.0", "nodes": []}}