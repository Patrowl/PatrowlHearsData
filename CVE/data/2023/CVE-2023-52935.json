{"publishedDate": "2025-03-27T17:15Z", "lastModifiedDate": "2025-09-09T17:15Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2023-52935", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/khugepaged: fix ->anon_vma race\n\nIf an ->anon_vma is attached to the VMA, collapse_and_free_pmd() requires\nit to be locked.\n\nPage table traversal is allowed under any one of the mmap lock, the\nanon_vma lock (if the VMA is associated with an anon_vma), and the\nmapping lock (if the VMA is associated with a mapping); and so to be\nable to remove page tables, we must hold all three of them. \nretract_page_tables() bails out if an ->anon_vma is attached, but does\nthis check before holding the mmap lock (as the comment above the check\nexplains).\n\nIf we racily merged an existing ->anon_vma (shared with a child\nprocess) from a neighboring VMA, subsequent rmap traversals on pages\nbelonging to the child will be able to see the page tables that we are\nconcurrently removing while assuming that nothing else can access them.\n\nRepeat the ->anon_vma check once we hold the mmap lock to ensure that\nthere really is no concurrent page table access.\n\nHitting this bug causes a lockdep warning in collapse_and_free_pmd(),\nin the line \"lockdep_assert_held_write(&vma->anon_vma->root->rwsem)\". \nIt can also lead to use-after-free access."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: mm/khugepaged: correcci\u00f3n de la ejecuci\u00f3n-&gt;anon_vma. Si se adjunta un -&gt;anon_vma al VMA, la funci\u00f3n collapse_and_free_pmd() requiere que est\u00e9 bloqueada. Se permite el recorrido de la tabla de p\u00e1ginas bajo cualquiera de los bloqueos mmap, anon_vma (si el VMA est\u00e1 asociado a un anon_vma) y mapeo (si el VMA est\u00e1 asociado a un mapeo). Por lo tanto, para poder eliminar tablas de p\u00e1ginas, debemos mantener las tres. La funci\u00f3n retract_page_tables() se activa si se adjunta un -&gt;anon_vma, pero realiza esta comprobaci\u00f3n antes de mantener el bloqueo mmap (como explica el comentario sobre la comprobaci\u00f3n). Si fusionamos r\u00e1pidamente un -&gt;anon_vma existente (compartido con un proceso hijo) de un VMA vecino, los recorridos posteriores de rmap en p\u00e1ginas pertenecientes al hijo podr\u00e1n ver las tablas de p\u00e1ginas que estamos eliminando simult\u00e1neamente, asumiendo que nadie m\u00e1s puede acceder a ellas. Repetir la comprobaci\u00f3n de -&gt;anon_vma una vez que mantengamos el bloqueo mmap para garantizar que no haya accesos simult\u00e1neos a la tabla de p\u00e1ginas. Este error genera una advertencia de lockdep en el comando breakdown_and_free_pmd(), en la l\u00ednea \"lockdep_assert_held_write(&amp;vma-&gt;anon_vma-&gt;root-&gt;rwsem)\". Tambi\u00e9n puede provocar accesos de use-after-free."}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/023f47a8250c6bdb4aebe744db4bf7f73414028b", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/352fbf61ce776fef18dca6a68680a6cd943dac95", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/abdf3c33918185c3e8ffeb09ed3e334b3d7df47c", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/acb08187b5a83cdb9ac4112fae9e18cf983b0128", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/cee956ab1efbd858b4ca61c8b474af5aa24b29a6", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-416"}]}]}}, "impact": {"baseMetricV3": {"exploitabilityScore": 1.8, "impactScore": 5.9, "cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "baseScore": 7.8, "baseSeverity": "HIGH", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH"}}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "negate": false, "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "matchCriteriaId": "DF175329-E41D-4B45-8701-7C854D2F3684", "cpe_name": [], "versionStartIncluding": "4.8", "versionEndExcluding": "6.1.11"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:6.2:rc1:*:*:*:*:*:*", "matchCriteriaId": "FF501633-2F44-4913-A8EE-B021929F49F6", "cpe_name": []}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:6.2:rc2:*:*:*:*:*:*", "matchCriteriaId": "2BDA597B-CAC1-4DF0-86F0-42E142C654E9", "cpe_name": []}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:6.2:rc3:*:*:*:*:*:*", "matchCriteriaId": "725C78C9-12CE-406F-ABE8-0813A01D66E8", "cpe_name": []}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:6.2:rc4:*:*:*:*:*:*", "matchCriteriaId": "A127C155-689C-4F67-B146-44A57F4BFD85", "cpe_name": []}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:6.2:rc5:*:*:*:*:*:*", "matchCriteriaId": "D34127CC-68F5-4703-A5F6-5006F803E4AE", "cpe_name": []}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:6.2:rc6:*:*:*:*:*:*", "matchCriteriaId": "4AB8D555-648E-4F2F-98BD-3E7F45BD12A8", "cpe_name": []}]}]}}