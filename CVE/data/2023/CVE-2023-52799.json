{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2023-52799", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/20f9310a18e3e99fc031e036fcbed67105ae1859", "name": "https://git.kernel.org/stable/c/20f9310a18e3e99fc031e036fcbed67105ae1859", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/20f9310a18e3e99fc031e036fcbed67105ae1859", "name": "https://git.kernel.org/stable/c/20f9310a18e3e99fc031e036fcbed67105ae1859", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/22cad8bc1d36547cdae0eef316c47d917ce3147c", "name": "https://git.kernel.org/stable/c/22cad8bc1d36547cdae0eef316c47d917ce3147c", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/22cad8bc1d36547cdae0eef316c47d917ce3147c", "name": "https://git.kernel.org/stable/c/22cad8bc1d36547cdae0eef316c47d917ce3147c", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/81aa58cd8495b8c3b527f58ccbe19478d8087f61", "name": "https://git.kernel.org/stable/c/81aa58cd8495b8c3b527f58ccbe19478d8087f61", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/81aa58cd8495b8c3b527f58ccbe19478d8087f61", "name": "https://git.kernel.org/stable/c/81aa58cd8495b8c3b527f58ccbe19478d8087f61", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/86df90f3fea7c5591f05c8a0010871d435e83046", "name": "https://git.kernel.org/stable/c/86df90f3fea7c5591f05c8a0010871d435e83046", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/86df90f3fea7c5591f05c8a0010871d435e83046", "name": "https://git.kernel.org/stable/c/86df90f3fea7c5591f05c8a0010871d435e83046", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/87c681ab49e99039ff2dd3e71852417381b13878", "name": "https://git.kernel.org/stable/c/87c681ab49e99039ff2dd3e71852417381b13878", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/87c681ab49e99039ff2dd3e71852417381b13878", "name": "https://git.kernel.org/stable/c/87c681ab49e99039ff2dd3e71852417381b13878", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/88b7894a8f8705bf4e7ea90b10229376abf14514", "name": "https://git.kernel.org/stable/c/88b7894a8f8705bf4e7ea90b10229376abf14514", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/88b7894a8f8705bf4e7ea90b10229376abf14514", "name": "https://git.kernel.org/stable/c/88b7894a8f8705bf4e7ea90b10229376abf14514", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/a50b796d36719757526ee094c703378895ab5e67", "name": "https://git.kernel.org/stable/c/a50b796d36719757526ee094c703378895ab5e67", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/a50b796d36719757526ee094c703378895ab5e67", "name": "https://git.kernel.org/stable/c/a50b796d36719757526ee094c703378895ab5e67", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/da3da5e1e6f71c21d8e6149d7076d936ef5d4cb9", "name": "https://git.kernel.org/stable/c/da3da5e1e6f71c21d8e6149d7076d936ef5d4cb9", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/da3da5e1e6f71c21d8e6149d7076d936ef5d4cb9", "name": "https://git.kernel.org/stable/c/da3da5e1e6f71c21d8e6149d7076d936ef5d4cb9", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/ecfb47f13b08b02cf28b7b50d4941eefa21954d2", "name": "https://git.kernel.org/stable/c/ecfb47f13b08b02cf28b7b50d4941eefa21954d2", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/ecfb47f13b08b02cf28b7b50d4941eefa21954d2", "name": "https://git.kernel.org/stable/c/ecfb47f13b08b02cf28b7b50d4941eefa21954d2", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\njfs: fix array-index-out-of-bounds in dbFindLeaf\n\nCurrently while searching for dmtree_t for sufficient free blocks there\nis an array out of bounds while getting element in tp->dm_stree. To add\nthe required check for out of bound we first need to determine the type\nof dmtree. Thus added an extra parameter to dbFindLeaf so that the type\nof tree can be determined and the required check can be applied."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-05-21T16:15Z", "lastModifiedDate": "2024-11-21T08:40Z"}