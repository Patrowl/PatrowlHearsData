{"publishedDate": "2023-09-27T15:18Z", "lastModifiedDate": "2024-11-21T08:15Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2023-39347", "ASSIGNER": "security-advisories@github.com"}, "description": {"description_data": [{"lang": "en", "value": "Cilium is a networking, observability, and security solution with an eBPF-based dataplane. An attacker with the ability to update pod labels can cause Cilium to apply incorrect network policies. This issue arises due to the fact that on pod update, Cilium incorrectly uses user-provided pod labels to select the policies which apply to the workload in question. This can affect Cilium network policies that use the namespace, service account or cluster constructs to restrict traffic, Cilium clusterwide network policies that use Cilium namespace labels to select the Pod and Kubernetes network policies. Non-existent construct names can be provided, which bypass all network policies applicable to the construct. For example, providing a pod with a non-existent namespace as the value of the `io.kubernetes.pod.namespace` label results in none of the namespaced CiliumNetworkPolicies applying to the pod in question. This attack requires the attacker to have Kubernetes API Server access, as described in the Cilium Threat Model. This issue has been resolved in: Cilium versions 1.14.2, 1.13.7, and 1.12.14. Users are advised to upgrade. As a workaround an admission webhook can be used to prevent pod label updates to the `k8s:io.kubernetes.pod.namespace` and `io.cilium.k8s.policy.*` keys."}, {"lang": "es", "value": "Cilium es una soluci\u00f3n de redes, observabilidad y seguridad con un plano de datos basado en eBPF. Un atacante con la capacidad de actualizar las etiquetas de los pods puede hacer que Cilium aplique pol\u00edticas de red incorrectas. Este problema surge debido al hecho de que en la actualizaci\u00f3n del pod, Cilium utiliza incorrectamente etiquetas de pod proporcionadas por el usuario para seleccionar las pol\u00edticas que se aplican a la carga de trabajo en cuesti\u00f3n. Esto puede afectar las pol\u00edticas de red de Cilium que usan el espacio de nombres, la cuenta de servicio o las construcciones de cl\u00faster para restringir el tr\u00e1fico, las pol\u00edticas de red de todo el cl\u00faster de Cilium que usan etiquetas de espacio de nombres de Cilium para seleccionar las pol\u00edticas de red de Pod y Kubernetes. Se pueden proporcionar nombres de construcciones inexistentes, que omiten todas las pol\u00edticas de red aplicables a la construcci\u00f3n. Por ejemplo, proporcionar un pod con un espacio de nombres inexistente como valor de la etiqueta `io.kubernetes.pod.namespace` da como resultado que ninguna de las CiliumNetworkPolicies con espacios de nombres se aplique al pod en cuesti\u00f3n. Este ataque requiere que el atacante tenga acceso al servidor API de Kubernetes, como se describe en el modelo de amenazas de Cilium. Este problema se resolvi\u00f3 en: Cilium versiones 1.14.2, 1.13.7 y 1.12.14. Se recomienda a los usuarios que actualicen. Como workaround, se puede utilizar un webhook de admisi\u00f3n para evitar actualizaciones de etiquetas de pod en las claves `k8s:io.kubernetes.pod.namespace` y `io.cilium.k8s.policy.*`."}]}, "references": {"reference_data": [{"url": "https://docs.cilium.io/en/latest/security/threat-model/#kubernetes-api-server-attacker", "name": "", "refsource": "", "tags": ["Exploit", "Technical Description", "Vendor Advisory"]}, {"url": "https://github.com/cilium/cilium/security/advisories/GHSA-gj2r-phwg-6rww", "name": "", "refsource": "", "tags": ["Vendor Advisory"]}, {"url": "https://docs.cilium.io/en/latest/security/threat-model/#kubernetes-api-server-attacker", "name": "", "refsource": "", "tags": ["Exploit", "Technical Description", "Vendor Advisory"]}, {"url": "https://github.com/cilium/cilium/security/advisories/GHSA-gj2r-phwg-6rww", "name": "", "refsource": "", "tags": ["Vendor Advisory"]}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-345"}]}]}}, "impact": {"baseMetricV3": {"exploitabilityScore": 2.3, "impactScore": 6.0, "cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H", "baseScore": 9.0, "baseSeverity": "CRITICAL", "attackVector": "ADJACENT_NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH"}}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "negate": false, "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:a:cilium:cilium:*:*:*:*:*:*:*:*", "matchCriteriaId": "35ABDE15-4D2F-4F82-BA90-6529DBA75C4F", "cpe_name": [], "versionEndExcluding": "1.12.14"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:a:cilium:cilium:*:*:*:*:*:*:*:*", "matchCriteriaId": "FAD54EC5-459F-43CF-8C36-BB84717CD640", "cpe_name": [], "versionStartIncluding": "1.13.0", "versionEndExcluding": "1.13.7"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:a:cilium:cilium:*:*:*:*:*:*:*:*", "matchCriteriaId": "F8854A94-3A9D-4BCD-AC5C-2D8AEF70AA40", "cpe_name": [], "versionStartIncluding": "1.14.0", "versionEndExcluding": "1.14.2"}]}]}}