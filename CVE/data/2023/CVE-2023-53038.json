{"publishedDate": "2025-05-02T16:15Z", "lastModifiedDate": "2025-05-05T20:54Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2023-53038", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Check kzalloc() in lpfc_sli4_cgn_params_read()\n\nIf kzalloc() fails in lpfc_sli4_cgn_params_read(), then we rely on\nlpfc_read_object()'s routine to NULL check pdata.\n\nCurrently, an early return error is thrown from lpfc_read_object() to\nprotect us from NULL ptr dereference, but the errno code is -ENODEV.\n\nChange the errno code to a more appropriate -ENOMEM."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: scsi: lpfc: Comprobaci\u00f3n de kzalloc() en lpfc_sli4_cgn_params_read(). Si kzalloc() falla en lpfc_sli4_cgn_params_read(), dependemos de la rutina de lpfc_read_object() para comprobar si pdata es nulo. Actualmente, lpfc_read_object() genera un error de retorno anticipado para protegernos de la desreferencia de ptr nulo, pero el c\u00f3digo de error es -ENODEV. Cambie el c\u00f3digo de error a -ENOMEM, que es m\u00e1s apropiado."}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/312320b0e0ec21249a17645683fe5304d796aec1", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/4829a1e1171536978b240a1438789c2e4d5c9715", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/67b8343998b84418bc5b5206aa01fe9b461a80ef", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/908dd9a0853a88155a5a36018c7e2b32ccf20379", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {}, "configurations": {"CVE_data_version": "4.0", "nodes": []}}