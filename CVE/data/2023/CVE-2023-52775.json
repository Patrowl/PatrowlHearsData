{"publishedDate": "2024-05-21T16:15Z", "lastModifiedDate": "2024-11-21T08:40Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2023-52775", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/smc: avoid data corruption caused by decline\n\nWe found a data corruption issue during testing of SMC-R on Redis\napplications.\n\nThe benchmark has a low probability of reporting a strange error as\nshown below.\n\n\"Error: Protocol error, got \"\\xe2\" as reply type byte\"\n\nFinally, we found that the retrieved error data was as follows:\n\n0xE2 0xD4 0xC3 0xD9 0x04 0x00 0x2C 0x20 0xA6 0x56 0x00 0x16 0x3E 0x0C\n0xCB 0x04 0x02 0x01 0x00 0x00 0x20 0x00 0x00 0x00 0x00 0x00 0x00 0x00\n0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0xE2\n\nIt is quite obvious that this is a SMC DECLINE message, which means that\nthe applications received SMC protocol message.\nWe found that this was caused by the following situations:\n\nclient                  server\n        \u00a6  clc proposal\n        ------------->\n        \u00a6  clc accept\n        <-------------\n        \u00a6  clc confirm\n        ------------->\nwait llc confirm\n\t\t\tsend llc confirm\n        \u00a6failed llc confirm\n        \u00a6   x------\n(after 2s)timeout\n                        wait llc confirm rsp\n\nwait decline\n\n(after 1s) timeout\n                        (after 2s) timeout\n        \u00a6   decline\n        -------------->\n        \u00a6   decline\n        <--------------\n\nAs a result, a decline message was sent in the implementation, and this\nmessage was read from TCP by the already-fallback connection.\n\nThis patch double the client timeout as 2x of the server value,\nWith this simple change, the Decline messages should never cross or\ncollide (during Confirm link timeout).\n\nThis issue requires an immediate solution, since the protocol updates\ninvolve a more long-term solution."}, {"lang": "es", "value": "En el kernel de Linux, se resolvi\u00f3 la siguiente vulnerabilidad: net/smc: evita la corrupci\u00f3n de datos causada por el rechazo. Encontramos un problema de corrupci\u00f3n de datos durante las pruebas de SMC-R en aplicaciones Redis. El punto de referencia tiene una baja probabilidad de informar un error extra\u00f1o, como se muestra a continuaci\u00f3n. \"Error: Error de protocolo, obtuve \"\\xe2\" como byte de tipo de respuesta\" Finalmente, encontramos que los datos de error recuperados eran los siguientes: 0xE2 0xD4 0xC3 0xD9 0x04 0x00 0x2C 0x20 0xA6 0x56 0x00 0x16 0x3E 0x0C 0xCB 0x04 0x02 1 0x00 0x00 0x20 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0xE2 Es bastante obvio que este es un mensaje SMC DECLINE, lo que significa que las aplicaciones recibieron un mensaje de protocolo SMC. Descubrimos que esto se deb\u00eda a las siguientes situaciones: cliente servidor \u00a6 propuesta clc -------------&gt; \u00a6 clc aceptar &lt;------------- \u00a6 clc confirmar -------------&gt; esperar confirmaci\u00f3n de llc enviar confirmaci\u00f3n de llc \u00a6 confirmaci\u00f3n de llc fallida \u00a6 x------ (despu\u00e9s de 2 s) tiempo de espera de espera llc confirmar rsp esperar declinar (despu\u00e9s de 1 s) tiempo de espera (despu\u00e9s de 2s) tiempo de espera \u00a6 rechazo --------------&gt; \u00a6 rechazo &lt;-------------- Como resultado, se envi\u00f3 un mensaje de rechazo en la implementaci\u00f3n, y este mensaje fue le\u00eddo desde TCP por la conexi\u00f3n que ya estaba en reserva. Este parche duplica el tiempo de espera del cliente al doble del valor del servidor. Con este simple cambio, los mensajes de rechazo nunca deber\u00edan cruzarse ni colisionar (durante el tiempo de espera de confirmaci\u00f3n del enlace). Este problema requiere una soluci\u00f3n inmediata, ya que las actualizaciones del protocolo implican una soluci\u00f3n a m\u00e1s largo plazo."}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/5ada292b5c504720a0acef8cae9acc62a694d19c", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/7234d2b5dffa5af77fd4e0deaebab509e130c6b1", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/90072af9efe8c7bd7d086709014ddd44cebd5e7c", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/94a0ae698b4d5d5bb598e23228002a1491c50add", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/e6d71b437abc2f249e3b6a1ae1a7228e09c6e563", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/5ada292b5c504720a0acef8cae9acc62a694d19c", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/7234d2b5dffa5af77fd4e0deaebab509e130c6b1", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/90072af9efe8c7bd7d086709014ddd44cebd5e7c", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/94a0ae698b4d5d5bb598e23228002a1491c50add", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/e6d71b437abc2f249e3b6a1ae1a7228e09c6e563", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {}, "configurations": {"CVE_data_version": "4.0", "nodes": []}}