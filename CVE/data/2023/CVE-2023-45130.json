{"publishedDate": "2023-10-13T13:15Z", "lastModifiedDate": "2024-11-21T08:26Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2023-45130", "ASSIGNER": "security-advisories@github.com"}, "description": {"description_data": [{"lang": "en", "value": "Frontier is Substrate's Ethereum compatibility layer. Prior to commit aea528198b3b226e0d20cce878551fd4c0e3d5d0, at the end of a contract execution, when opcode SUICIDE marks a contract to be deleted, the software uses `storage::remove_prefix` (now renamed to `storage::clear_prefix`) to remove all storages associated with it. This is a single IO primitive call passing the WebAssembly boundary. For large contracts, the call (without providing a `limit` parameter) can be slow. In addition, for parachains, all storages to be deleted will be part of the PoV, which easily exceed relay chain PoV size limit. On the other hand, Frontier's maintainers only charge a fixed cost for opcode SUICIDE. The maintainers consider the severity of this issue high, because an attacker can craft a contract with a lot of storage values on a parachain, and then call opcode SUICIDE on the contract. If the transaction makes into a parachain block, the parachain will then stall because the PoV size will exceed relay chain's limit. This is especially an issue for XCM transactions, because they can't be skipped. Commit aea528198b3b226e0d20cce878551fd4c0e3d5d0 contains a patch for this issue. For parachains, it's recommended to issue an emergency runtime upgrade as soon as possible. For standalone chains, the impact is less severe because the issue mainly affects PoV sizes. It's recommended to issue a normal runtime upgrade as soon as possible. There are no known workarounds."}, {"lang": "es", "value": "Frontier es la capa de compatibilidad con Ethereum de Substrate. Antes del commit aea528198b3b226e0d20cce878551fd4c0e3d5d0, al final de la ejecuci\u00f3n de un contrato, cuando el c\u00f3digo de operaci\u00f3n SUICIDE marca un contrato para ser eliminado, el software utiliza `storage::remove_prefix` (ahora renombrado a `storage::clear_prefix`) para eliminar todos los almacenamientos asociados con \u00e9l. Esta es una \u00fanica llamada primitiva de IO que pasa el l\u00edmite de WebAssembly. Para contratos grandes, la llamada (sin proporcionar un par\u00e1metro de \"limit\") puede ser lenta. Adem\u00e1s, para las parachains, todos los almacenamientos que se eliminar\u00e1n formar\u00e1n parte del PoV, que excede f\u00e1cilmente el l\u00edmite de tama\u00f1o de PoV de la cadena de retransmisi\u00f3n. Por otro lado, los mantenedores de Frontier solo cobran un costo fijo por el c\u00f3digo de operaci\u00f3n SUICIDE. Los mantenedores consideran que la gravedad de este problema es alta, porque un atacante puede crear un contrato con muchos valores de almacenamiento en una parachain y luego llamar al c\u00f3digo de operaci\u00f3n SUICIDE en el contrato. Si la transacci\u00f3n se convierte en un bloque de parachain, la parachain se detendr\u00e1 porque el tama\u00f1o del PoV exceder\u00e1 el l\u00edmite de la cadena de retransmisi\u00f3n. Esto es especialmente un problema para las transacciones XCM, porque no se pueden omitir. El commit aea528198b3b226e0d20cce878551fd4c0e3d5d0 contiene un parche para este problema. Para las parachains, se recomienda publicar una actualizaci\u00f3n de emergencia del tiempo de ejecuci\u00f3n lo antes posible. Para las cadenas independientes, el impacto es menos grave porque el problema afecta principalmente a los tama\u00f1os de PoV. Se recomienda publicar una actualizaci\u00f3n del tiempo de ejecuci\u00f3n normal lo antes posible. No se conocen workarounds."}]}, "references": {"reference_data": [{"url": "https://github.com/paritytech/frontier/commit/aea528198b3b226e0d20cce878551fd4c0e3d5d0", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://github.com/paritytech/frontier/pull/1212", "name": "", "refsource": "", "tags": ["Patch", "Vendor Advisory"]}, {"url": "https://github.com/paritytech/frontier/security/advisories/GHSA-gc88-2gvv-gp3v", "name": "", "refsource": "", "tags": ["Patch", "Vendor Advisory"]}, {"url": "https://github.com/paritytech/frontier/commit/aea528198b3b226e0d20cce878551fd4c0e3d5d0", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://github.com/paritytech/frontier/pull/1212", "name": "", "refsource": "", "tags": ["Patch", "Vendor Advisory"]}, {"url": "https://github.com/paritytech/frontier/security/advisories/GHSA-gc88-2gvv-gp3v", "name": "", "refsource": "", "tags": ["Patch", "Vendor Advisory"]}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-770"}]}]}}, "impact": {"baseMetricV3": {"exploitabilityScore": 3.9, "impactScore": 3.6, "cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "baseScore": 7.5, "baseSeverity": "HIGH", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH"}}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "negate": false, "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:a:parity:frontier:*:*:*:*:*:rust:*:*", "matchCriteriaId": "20043267-E766-4C8E-B0BD-3F91289C2F4C", "cpe_name": [], "versionEndIncluding": "0.1.0"}]}]}}