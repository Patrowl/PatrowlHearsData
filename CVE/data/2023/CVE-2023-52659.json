{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2023-52659", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/325956b0173f11e98f90462be4829a8b8b0682ce", "name": "https://git.kernel.org/stable/c/325956b0173f11e98f90462be4829a8b8b0682ce", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/325956b0173f11e98f90462be4829a8b8b0682ce", "name": "https://git.kernel.org/stable/c/325956b0173f11e98f90462be4829a8b8b0682ce", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/7e1471888a5e6e846e9b4d306e5327db2b58e64e", "name": "https://git.kernel.org/stable/c/7e1471888a5e6e846e9b4d306e5327db2b58e64e", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/7e1471888a5e6e846e9b4d306e5327db2b58e64e", "name": "https://git.kernel.org/stable/c/7e1471888a5e6e846e9b4d306e5327db2b58e64e", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/814305b5c23cb815ada68d43019f39050472b25f", "name": "https://git.kernel.org/stable/c/814305b5c23cb815ada68d43019f39050472b25f", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/814305b5c23cb815ada68d43019f39050472b25f", "name": "https://git.kernel.org/stable/c/814305b5c23cb815ada68d43019f39050472b25f", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/8e5647a723c49d73b9f108a8bb38e8c29d3948ea", "name": "https://git.kernel.org/stable/c/8e5647a723c49d73b9f108a8bb38e8c29d3948ea", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/8e5647a723c49d73b9f108a8bb38e8c29d3948ea", "name": "https://git.kernel.org/stable/c/8e5647a723c49d73b9f108a8bb38e8c29d3948ea", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/mm: Ensure input to pfn_to_kaddr() is treated as a 64-bit type\n\nOn 64-bit platforms, the pfn_to_kaddr() macro requires that the input\nvalue is 64 bits in order to ensure that valid address bits don't get\nlost when shifting that input by PAGE_SHIFT to calculate the physical\naddress to provide a virtual address for.\n\nOne such example is in pvalidate_pages() (used by SEV-SNP guests), where\nthe GFN in the struct used for page-state change requests is a 40-bit\nbit-field, so attempts to pass this GFN field directly into\npfn_to_kaddr() ends up causing guest crashes when dealing with addresses\nabove the 1TB range due to the above.\n\nFix this issue with SEV-SNP guests, as well as any similar cases that\nmight cause issues in current/future code, by using an inline function,\ninstead of a macro, so that the input is implicitly cast to the\nexpected 64-bit input type prior to performing the shift operation.\n\nWhile it might be argued that the issue is on the caller side, other\narchs/macros have taken similar approaches to deal with instances like\nthis, such as ARM explicitly casting the input to phys_addr_t:\n\n  e48866647b48 (\"ARM: 8396/1: use phys_addr_t in pfn_to_kaddr()\")\n\nA C inline function is even better though.\n\n[ mingo: Refined the changelog some more & added __always_inline. ]"}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-05-17T13:15Z", "lastModifiedDate": "2024-11-21T08:40Z"}