{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2023-26145", "ASSIGNER": "report@snyk.io"}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-94"}, {"lang": "en", "value": "CWE-77"}]}]}, "references": {"reference_data": [{"url": "https://gist.github.com/CalumHutton/45d33e9ea55bf4953b3b31c84703dfca", "name": "https://gist.github.com/CalumHutton/45d33e9ea55bf4953b3b31c84703dfca", "refsource": "", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://gist.github.com/CalumHutton/45d33e9ea55bf4953b3b31c84703dfca", "name": "https://gist.github.com/CalumHutton/45d33e9ea55bf4953b3b31c84703dfca", "refsource": "", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://github.com/dgilland/pydash/commit/6ff0831ad285fff937cafd2a853f20cc9ae92021", "name": "https://github.com/dgilland/pydash/commit/6ff0831ad285fff937cafd2a853f20cc9ae92021", "refsource": "", "tags": ["Patch"]}, {"url": "https://github.com/dgilland/pydash/commit/6ff0831ad285fff937cafd2a853f20cc9ae92021", "name": "https://github.com/dgilland/pydash/commit/6ff0831ad285fff937cafd2a853f20cc9ae92021", "refsource": "", "tags": ["Patch"]}, {"url": "https://security.snyk.io/vuln/SNYK-PYTHON-PYDASH-5916518", "name": "https://security.snyk.io/vuln/SNYK-PYTHON-PYDASH-5916518", "refsource": "", "tags": ["Third Party Advisory"]}, {"url": "https://security.snyk.io/vuln/SNYK-PYTHON-PYDASH-5916518", "name": "https://security.snyk.io/vuln/SNYK-PYTHON-PYDASH-5916518", "refsource": "", "tags": ["Third Party Advisory"]}]}, "description": {"description_data": [{"lang": "en", "value": "This affects versions of the package pydash before 6.0.0. A number of pydash methods such as pydash.objects.invoke() and pydash.collections.invoke_map() accept dotted paths (Deep Path Strings) to target a nested Python object, relative to the original source object. These paths can be used to target internal class attributes and dict items, to retrieve, modify or invoke nested Python objects.\r\r**Note:**\r\rThe pydash.objects.invoke() method is vulnerable to Command Injection when the following prerequisites are satisfied:\r\r1) The source object (argument 1) is not a built-in object such as list/dict (otherwise, the __init__.__globals__ path is not accessible)\r\r2) The attacker has control over argument 2 (the path string) and argument 3 (the argument to pass to the invoked method)\r\r\rThe pydash.collections.invoke_map() method is also vulnerable, but is harder to exploit as the attacker does not have direct control over the argument to be passed to the invoked function."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:a:derrickgilland:pydash:*:*:*:*:*:*:*:*", "versionEndExcluding": "6.0.0", "cpe_name": []}]}]}, "impact": {"baseMetricV3": {"cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.1, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.2, "impactScore": 5.9}}, "publishedDate": "2023-09-28T05:15Z", "lastModifiedDate": "2024-11-21T07:50Z"}