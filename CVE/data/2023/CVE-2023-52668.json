{"publishedDate": "2024-05-17T14:15Z", "lastModifiedDate": "2024-11-21T08:40Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2023-52668", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: zoned: fix lock ordering in btrfs_zone_activate()\n\nThe btrfs CI reported a lockdep warning as follows by running generic\ngeneric/129.\n\n   WARNING: possible circular locking dependency detected\n   6.7.0-rc5+ #1 Not tainted\n   ------------------------------------------------------\n   kworker/u5:5/793427 is trying to acquire lock:\n   ffff88813256d028 (&cache->lock){+.+.}-{2:2}, at: btrfs_zone_finish_one_bg+0x5e/0x130\n   but task is already holding lock:\n   ffff88810a23a318 (&fs_info->zone_active_bgs_lock){+.+.}-{2:2}, at: btrfs_zone_finish_one_bg+0x34/0x130\n   which lock already depends on the new lock.\n\n   the existing dependency chain (in reverse order) is:\n   -> #1 (&fs_info->zone_active_bgs_lock){+.+.}-{2:2}:\n   ...\n   -> #0 (&cache->lock){+.+.}-{2:2}:\n   ...\n\nThis is because we take fs_info->zone_active_bgs_lock after a block_group's\nlock in btrfs_zone_activate() while doing the opposite in other places.\n\nFix the issue by expanding the fs_info->zone_active_bgs_lock's critical\nsection and taking it before a block_group's lock."}, {"lang": "es", "value": "En el kernel de Linux, se resolvi\u00f3 la siguiente vulnerabilidad: btrfs:zoned: corrige el orden de bloqueo en btrfs_zone_activate() El CI de btrfs inform\u00f3 una advertencia de bloqueo de la siguiente manera al ejecutar generic generic/129. ADVERTENCIA: se detect\u00f3 posible dependencia de bloqueo circular 6.7.0-rc5+ #1 No contaminado ---------------------------------- -------------------- kworker/u5:5/793427 est\u00e1 intentando adquirir el bloqueo: ffff88813256d028 (&amp;cache-&gt;lock){+.+.}-{2: 2}, en: btrfs_zone_finish_one_bg+0x5e/0x130 pero la tarea ya mantiene el bloqueo: ffff88810a23a318 (&amp;fs_info-&gt;zone_active_bgs_lock){+.+.}-{2:2}, en: btrfs_zone_finish_one_bg+0x34/0x130 cuyo bloqueo ya depende del cerradura nueva. la cadena de dependencia existente (en orden inverso) es: -&gt; #1 (&amp;fs_info-&gt;zone_active_bgs_lock){+.+.}-{2:2}: ... -&gt; #0 (&amp;cache-&gt;lock){+. +.}-{2:2}: ... Esto se debe a que tomamos fs_info-&gt;zone_active_bgs_lock despu\u00e9s del bloqueo de un block_group en btrfs_zone_activate() mientras hacemos lo contrario en otros lugares. Solucione el problema expandiendo la secci\u00f3n cr\u00edtica de fs_info-&gt;zone_active_bgs_lock y llev\u00e1ndola antes del bloqueo de block_group."}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/1908e9d01e5395adff68d9d308a0fb15337e6272", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/6f74989f5909cdec9b1274641f0fa306b15bb476", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b18f3b60b35a8c01c9a2a0f0d6424c6d73971dc3", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/1908e9d01e5395adff68d9d308a0fb15337e6272", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/6f74989f5909cdec9b1274641f0fa306b15bb476", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b18f3b60b35a8c01c9a2a0f0d6424c6d73971dc3", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {}, "configurations": {"CVE_data_version": "4.0", "nodes": []}}