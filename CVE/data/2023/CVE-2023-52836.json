{"publishedDate": "2024-05-21T16:15Z", "lastModifiedDate": "2024-11-21T08:40Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2023-52836", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nlocking/ww_mutex/test: Fix potential workqueue corruption\n\nIn some cases running with the test-ww_mutex code, I was seeing\nodd behavior where sometimes it seemed flush_workqueue was\nreturning before all the work threads were finished.\n\nOften this would cause strange crashes as the mutexes would be\nfreed while they were being used.\n\nLooking at the code, there is a lifetime problem as the\ncontrolling thread that spawns the work allocates the\n\"struct stress\" structures that are passed to the workqueue\nthreads. Then when the workqueue threads are finished,\nthey free the stress struct that was passed to them.\n\nUnfortunately the workqueue work_struct node is in the stress\nstruct. Which means the work_struct is freed before the work\nthread returns and while flush_workqueue is waiting.\n\nIt seems like a better idea to have the controlling thread\nboth allocate and free the stress structures, so that we can\nbe sure we don't corrupt the workqueue by freeing the structure\nprematurely.\n\nSo this patch reworks the test to do so, and with this change\nI no longer see the early flush_workqueue returns."}, {"lang": "es", "value": "En el kernel de Linux, se resolvi\u00f3 la siguiente vulnerabilidad: lock/ww_mutex/test: soluciona una posible corrupci\u00f3n de la cola de trabajo. En algunos casos, al ejecutar el c\u00f3digo test-ww_mutex, ve\u00eda un comportamiento extra\u00f1o en el que a veces parec\u00eda que flush_workqueue regresaba antes que todos los subprocesos de trabajo. hemos terminado. A menudo, esto causar\u00eda fallas extra\u00f1as ya que los mutex se liberar\u00edan mientras se estaban usando. Al observar el c\u00f3digo, hay un problema de duraci\u00f3n, ya que el subproceso de control que genera el trabajo asigna las estructuras de \"estr\u00e9s de estructura\" que se pasan a los subprocesos de la cola de trabajo. Luego, cuando los subprocesos de la cola de trabajo finalizan, liberan la estructura de tensi\u00f3n que se les pas\u00f3. Desafortunadamente, el nodo work_struct de la cola de trabajo est\u00e1 en la estructura de estr\u00e9s. Lo que significa que work_struct se libera antes de que regrese el hilo de trabajo y mientras descarga_workqueue est\u00e1 esperando. Parece una mejor idea que el subproceso de control asigne y libere las estructuras de tensi\u00f3n, de modo que podamos estar seguros de no corromper la cola de trabajo al liberar la estructura prematuramente. Entonces, este parche reelabora la prueba para hacerlo, y con este cambio ya no veo los primeros retornos de Flush_workqueue."}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/304a2c4aad0fff887ce493e4197bf9cbaf394479", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/9ed2d68b3925145f5f51c46559484881d6082f75", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/bccdd808902f8c677317cec47c306e42b93b849e", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/c56df79d68677cf062da1b6e3b33e74299a92dfc", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/d4d37c9e6a4dbcca958dabd99216550525c7e389", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/d8267cabbe1bed15ccf8b0e684c528bf8eeef715", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/dcd85e3c929368076a7592b27f541e0da8b427f5", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/e36407713163363e65566e7af0abe207d5f59a0c", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/e89d0ed45a419c485bae999426ecf92697cbdda3", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/304a2c4aad0fff887ce493e4197bf9cbaf394479", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/9ed2d68b3925145f5f51c46559484881d6082f75", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/bccdd808902f8c677317cec47c306e42b93b849e", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/c56df79d68677cf062da1b6e3b33e74299a92dfc", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/d4d37c9e6a4dbcca958dabd99216550525c7e389", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/d8267cabbe1bed15ccf8b0e684c528bf8eeef715", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/dcd85e3c929368076a7592b27f541e0da8b427f5", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/e36407713163363e65566e7af0abe207d5f59a0c", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/e89d0ed45a419c485bae999426ecf92697cbdda3", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {}, "configurations": {"CVE_data_version": "4.0", "nodes": []}}