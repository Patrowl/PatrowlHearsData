{"publishedDate": "2023-09-06T18:15Z", "lastModifiedDate": "2024-11-21T08:21Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2023-41330", "ASSIGNER": "security-advisories@github.com"}, "description": {"description_data": [{"lang": "en", "value": "knplabs/knp-snappy is a PHP library allowing thumbnail, snapshot or PDF generation from a url or a html page.\n## Issue\n\nOn March 17th the vulnerability CVE-2023-28115 was disclosed, allowing an attacker to gain remote code execution through PHAR deserialization. Version 1.4.2 added a check `if (\\strpos($filename, 'phar://') === 0)` in the `prepareOutput` function to resolve this CVE, however if the user is able to control the second parameter of the `generateFromHtml()` function of Snappy, it will then be passed as the `$filename` parameter in the `prepareOutput()` function. In the original vulnerability, a file name with a `phar://` wrapper could be sent to the `fileExists()` function, equivalent to the `file_exists()` PHP function. This allowed users to trigger a deserialization on arbitrary PHAR files. To fix this issue, the string is now passed to the `strpos()` function and if it starts with `phar://`, an exception is raised. However, PHP wrappers being case insensitive, this patch can be bypassed using `PHAR://` instead of `phar://`. A successful exploitation of this vulnerability allows executing arbitrary code and accessing the underlying filesystem. The attacker must be able to upload a file and the server must be running a PHP version prior to 8. This issue has been addressed in commit `d3b742d61a` which has been included in version 1.4.3. Users are advised to upgrade. Users unable to upgrade should ensure that only trusted users may submit data to the `AbstractGenerator->generate(...)` function.\n"}, {"lang": "es", "value": "knplabs/knp-snappy es una librer\u00eda PHP que permite la generaci\u00f3n de thumbnail, snapshots o PDFs desde una URL o una p\u00e1gina HTML. ## El problema que revel\u00f3 la vulnerabilidad CVE-2023-28115 el 17 de marzo, permite a un atacante obtener la ejecuci\u00f3n remota de c\u00f3digo mediante la deserializaci\u00f3n PHAR. La versi\u00f3n 1.4.2 agreg\u00f3 una verificaci\u00f3n `if (\\strpos($filename, 'phar://') === 0)` en la funci\u00f3n `prepareOutput` para resolver este CVE, sin embargo, si el usuario puede controlar el segundo par\u00e1metro de la funci\u00f3n `generateFromHtml()` de Snappy, luego se pasar\u00e1 como el par\u00e1metro `$filename` en la funci\u00f3n `prepareOutput()`. En la vulnerabilidad original, un nombre de archivo con un contenedor `phar://` podr\u00eda enviarse a la funci\u00f3n `fileExists()`, equivalente a la funci\u00f3n PHP `file_exists()`. Esto permiti\u00f3 a los usuarios activar una deserializaci\u00f3n en archivos PHAR arbitrarios. Para solucionar este problema, la cadena ahora se pasa a la funci\u00f3n `strpos()` y si comienza con `phar://`, se genera una excepci\u00f3n. Sin embargo, como los contenedores de PHP no distinguen entre may\u00fasculas y min\u00fasculas, este parche se puede omitir usando `PHAR://` en lugar de `phar://`. Una explotaci\u00f3n exitosa de esta vulnerabilidad permite ejecutar c\u00f3digo arbitrario y acceder al sistema de archivos subyacente. El atacante debe poder cargar un archivo y el servidor debe ejecutar una versi\u00f3n de PHP anterior a la 8. Este problema se solucion\u00f3 en el commit `d3b742d61a` que se incluy\u00f3 en la versi\u00f3n 1.4.3. Se recomienda a los usuarios que actualicen. Los usuarios que no puedan actualizar deben asegurarse de que solo los usuarios confiables puedan enviar datos a la funci\u00f3n `AbstractGenerator-&gt;generate(...)`."}]}, "references": {"reference_data": [{"url": "https://github.com/KnpLabs/snappy/commit/d3b742d61a68bf93866032c2c0a7f1486128b67e", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://github.com/KnpLabs/snappy/security/advisories/GHSA-92rv-4j2h-8mjj", "name": "", "refsource": "", "tags": ["Exploit", "Mitigation", "Vendor Advisory"]}, {"url": "https://github.com/KnpLabs/snappy/security/advisories/GHSA-gq6w-q6wh-jggc", "name": "", "refsource": "", "tags": ["Exploit", "Vendor Advisory"]}, {"url": "https://github.com/KnpLabs/snappy/commit/d3b742d61a68bf93866032c2c0a7f1486128b67e", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://github.com/KnpLabs/snappy/security/advisories/GHSA-92rv-4j2h-8mjj", "name": "", "refsource": "", "tags": ["Exploit", "Mitigation", "Vendor Advisory"]}, {"url": "https://github.com/KnpLabs/snappy/security/advisories/GHSA-gq6w-q6wh-jggc", "name": "", "refsource": "", "tags": ["Exploit", "Vendor Advisory"]}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-502"}]}]}}, "impact": {"baseMetricV3": {"exploitabilityScore": 3.9, "impactScore": 5.9, "cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "baseScore": 9.8, "baseSeverity": "CRITICAL", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH"}}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "negate": false, "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:a:knplabs:snappy:*:*:*:*:*:*:*:*", "matchCriteriaId": "C2412BC7-4738-4E4B-9382-9C967F55BEC0", "cpe_name": [], "versionEndExcluding": "1.4.3"}]}]}}