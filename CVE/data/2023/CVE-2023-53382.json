{"publishedDate": "2025-09-18T14:15Z", "lastModifiedDate": "2025-09-18T14:15Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2023-53382", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/smc: Reset connection when trying to use SMCRv2 fails.\n\nWe found a crash when using SMCRv2 with 2 Mellanox ConnectX-4. It\ncan be reproduced by:\n\n- smc_run nginx\n- smc_run wrk -t 32 -c 500 -d 30 http://<ip>:<port>\n\n BUG: kernel NULL pointer dereference, address: 0000000000000014\n #PF: supervisor read access in kernel mode\n #PF: error_code(0x0000) - not-present page\n PGD 8000000108713067 P4D 8000000108713067 PUD 151127067 PMD 0\n Oops: 0000 [#1] PREEMPT SMP PTI\n CPU: 4 PID: 2441 Comm: kworker/4:249 Kdump: loaded Tainted: G        W   E      6.4.0-rc1+ #42\n Workqueue: smc_hs_wq smc_listen_work [smc]\n RIP: 0010:smc_clc_send_confirm_accept+0x284/0x580 [smc]\n RSP: 0018:ffffb8294b2d7c78 EFLAGS: 00010a06\n RAX: ffff8f1873238880 RBX: ffffb8294b2d7dc8 RCX: 0000000000000000\n RDX: 00000000000000b4 RSI: 0000000000000001 RDI: 0000000000b40c00\n RBP: ffffb8294b2d7db8 R08: ffff8f1815c5860c R09: 0000000000000000\n R10: 0000000000000400 R11: 0000000000000000 R12: ffff8f1846f56180\n R13: ffff8f1815c5860c R14: 0000000000000001 R15: 0000000000000001\n FS:  0000000000000000(0000) GS:ffff8f1aefd00000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 0000000000000014 CR3: 00000001027a0001 CR4: 00000000003706e0\n DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n Call Trace:\n  <TASK>\n  ? mlx5_ib_map_mr_sg+0xa1/0xd0 [mlx5_ib]\n  ? smcr_buf_map_link+0x24b/0x290 [smc]\n  ? __smc_buf_create+0x4ee/0x9b0 [smc]\n  smc_clc_send_accept+0x4c/0xb0 [smc]\n  smc_listen_work+0x346/0x650 [smc]\n  ? __schedule+0x279/0x820\n  process_one_work+0x1e5/0x3f0\n  worker_thread+0x4d/0x2f0\n  ? __pfx_worker_thread+0x10/0x10\n  kthread+0xe5/0x120\n  ? __pfx_kthread+0x10/0x10\n  ret_from_fork+0x2c/0x50\n  </TASK>\n\nDuring the CLC handshake, server sequentially tries available SMCRv2\nand SMCRv1 devices in smc_listen_work().\n\nIf an SMCRv2 device is found. SMCv2 based link group and link will be\nassigned to the connection. Then assumed that some buffer assignment\nerrors happen later in the CLC handshake, such as RMB registration\nfailure, server will give up SMCRv2 and try SMCRv1 device instead. But\nthe resources assigned to the connection won't be reset.\n\nWhen server tries SMCRv1 device, the connection creation process will\nbe executed again. Since conn->lnk has been assigned when trying SMCRv2,\nit will not be set to the correct SMCRv1 link in\nsmcr_lgr_conn_assign_link(). So in such situation, conn->lgr points to\ncorrect SMCRv1 link group but conn->lnk points to the SMCRv2 link\nmistakenly.\n\nThen in smc_clc_send_confirm_accept(), conn->rmb_desc->mr[link->link_idx]\nwill be accessed. Since the link->link_idx is not correct, the related\nMR may not have been initialized, so crash happens.\n\n | Try SMCRv2 device first\n |     |-> conn->lgr:\tassign existed SMCRv2 link group;\n |     |-> conn->link:\tassign existed SMCRv2 link (link_idx may be 1 in SMC_LGR_SYMMETRIC);\n |     |-> sndbuf & RMB creation fails, quit;\n |\n | Try SMCRv1 device then\n |     |-> conn->lgr:\tcreate SMCRv1 link group and assign;\n |     |-> conn->link:\tkeep SMCRv2 link mistakenly;\n |     |-> sndbuf & RMB creation succeed, only RMB->mr[link_idx = 0]\n |         initialized.\n |\n | Then smc_clc_send_confirm_accept() accesses\n | conn->rmb_desc->mr[conn->link->link_idx, which is 1], then crash.\n v\n\nThis patch tries to fix this by cleaning conn->lnk before assigning\nlink. In addition, it is better to reset the connection and clean the\nresources assigned if trying SMCRv2 failed in buffer creation or\nregistration."}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/35112271672ae98f45df7875244a4e33aa215e31", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/9540765d1882d15497d880096de99fafabcfa08c", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/d33be18917ffe69865dfed18b0a67b0dee0b47d7", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {}, "configurations": {"CVE_data_version": "4.0", "nodes": []}}