{"publishedDate": "2023-10-04T19:15Z", "lastModifiedDate": "2024-11-21T08:14Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2023-38701", "ASSIGNER": "security-advisories@github.com"}, "description": {"description_data": [{"lang": "en", "value": "Hydra is the layer-two scalability solution for Cardano. Users of the Hydra head protocol send the UTxOs they wish to commit into the Hydra head first to the `commit` validator, where they remain until they are either collected into the `head` validator or the protocol initialisation is aborted and the value in the committed UTxOs is returned to the users who committed them. Prior to version 0.12.0, the `commit` validator contains a flawed check when the `ViaAbort` redeemer is used, which allows any user to spend any UTxO which is at the validator arbitrarily, meaning an attacker can steal the funds that users are trying to commit into the head validator. The intended behavior is that the funds must be returned to the user which committed the funds and can only be performed by a participant of the head. The `initial` validator also is similarly affected as the same flawed check is performed for the `ViaAbort` redeemer. Due to this issue, an attacker can steal any funds that user's try to commit into a Hydra head. Also, an attacker can prevent any Hydra head from being successfully opened. It does not allow an attacker to take funds which have been successfully collected into and currently reside in the `head` validator. Version 0.12.0 contains a fix for this issue."}, {"lang": "es", "value": "Hydra es la soluci\u00f3n de escalabilidad de capa dos para Cardano. Los usuarios del protocolo \"head\" de Hydra env\u00edan los UTxOs que desean hacer \"commit\" al \"head\" de Hydra, primero al validador \"commit\", donde permanecen hasta que se recopilan en el validador de \"head\" o se cancela la inicializaci\u00f3n del protocolo y el valor de los committed UTxOs se devuelven a los usuarios que hicieron \"commit\". Antes de la versi\u00f3n 0.12.0, el validador del \"commit\" contiene una verificaci\u00f3n defectuosa cuando se usa el redeemer \"ViaAbort\", lo que permite a cualquier usuario gastar cualquier UTxO que est\u00e9 en el validador de forma arbitraria, lo que significa que un atacante puede robar los fondos que los usuarios est\u00e1n tratando de hacer \"commit\" con el validador \"head\". El comportamiento previsto es que los fondos deben devolverse al usuario que comprometi\u00f3 los fondos y solo puede ser realizado por un participante del \"head\". El validador \"initial\" tambi\u00e9n se ve afectado de manera similar, ya que realiza la misma verificaci\u00f3n defectuosa para el redeemer \"ViaAbort\". Debido a este problema, un atacante puede robar cualquier fondo que el usuario intente depositar en el \"head\" de Hydra. Adem\u00e1s, un atacante puede impedir que cualquier \"head\" de Hydra se abra con \u00e9xito. No permite que un atacante obtenga fondos que se hayan recaudado exitosamente y que actualmente residen en el validador \"head\". La versi\u00f3n 0.12.0 contiene una soluci\u00f3n para este problema."}]}, "references": {"reference_data": [{"url": "https://github.com/input-output-hk/hydra/blob/master/CHANGELOG.md#0120---2023-08-18", "name": "", "refsource": "", "tags": ["Release Notes"]}, {"url": "https://github.com/input-output-hk/hydra/blob/master/hydra-plutus/src/Hydra/Contract/Commit.hs#L94-L97", "name": "", "refsource": "", "tags": ["Product"]}, {"url": "https://github.com/input-output-hk/hydra/blob/master/hydra-plutus/src/Hydra/Contract/Util.hs#L32-L42", "name": "", "refsource": "", "tags": ["Product"]}, {"url": "https://github.com/input-output-hk/hydra/security/advisories/GHSA-6x9v-7x5r-w8w6", "name": "", "refsource": "", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://github.com/input-output-hk/hydra/blob/master/CHANGELOG.md#0120---2023-08-18", "name": "", "refsource": "", "tags": ["Release Notes"]}, {"url": "https://github.com/input-output-hk/hydra/blob/master/hydra-plutus/src/Hydra/Contract/Commit.hs#L94-L97", "name": "", "refsource": "", "tags": ["Product"]}, {"url": "https://github.com/input-output-hk/hydra/blob/master/hydra-plutus/src/Hydra/Contract/Util.hs#L32-L42", "name": "", "refsource": "", "tags": ["Product"]}, {"url": "https://github.com/input-output-hk/hydra/security/advisories/GHSA-6x9v-7x5r-w8w6", "name": "", "refsource": "", "tags": ["Exploit", "Third Party Advisory"]}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-20"}, {"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {"baseMetricV3": {"exploitabilityScore": 3.9, "impactScore": 5.2, "cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H", "baseScore": 9.1, "baseSeverity": "CRITICAL", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "HIGH"}}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "negate": false, "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:a:iohk:hydra:*:*:*:*:*:*:*:*", "matchCriteriaId": "8AF262DB-3B2B-4A60-BF71-10808E4B461F", "cpe_name": [], "versionEndExcluding": "0.12.0"}]}]}}