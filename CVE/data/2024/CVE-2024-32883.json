{"publishedDate": "2024-04-26T21:15Z", "lastModifiedDate": "2024-11-21T09:15Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2024-32883", "ASSIGNER": "security-advisories@github.com"}, "description": {"description_data": [{"lang": "en", "value": "MCUboot is a secure bootloader for 32-bits microcontrollers. MCUboot uses a TLV (tag-length-value) structure to represent the meta data associated with an image.  The TLVs themselves are divided into two sections, a protected and an unprotected section. The protected TLV entries are included as part of the image signature to avoid tampering. However, the code does not distinguish which TLV entries should be protected or not, so it is possible for an attacker to add unprotected TLV entries that should be protected. Currently, the primary protected TLV entries should be the dependency indication, and the boot record. An injected dependency value would primarily result in an otherwise acceptable image being rejected. A boot record injection could allow fields in a later attestation record to include data not intended, which could cause an image to appear to have properties that it should not have. As a workaround, disable the boot record functionality. "}, {"lang": "es", "value": "MCUboot es un gestor de arranque seguro para microcontroladores de 32 bits. MCUboot utiliza una estructura TLV (etiqueta-longitud-valor) para representar los metadatos asociados con una imagen. Los propios TLV se dividen en dos secciones, una secci\u00f3n protegida y otra desprotegida. Las entradas TLV protegidas se incluyen como parte de la firma de la imagen para evitar manipulaciones. Sin embargo, el c\u00f3digo no distingue qu\u00e9 entradas TLV deben protegerse o no, por lo que es posible que un atacante agregue entradas TLV desprotegidas que deber\u00edan protegerse. Actualmente, las entradas TLV protegidas principales deben ser la indicaci\u00f3n de dependencia y el registro de inicio. Un valor de dependencia inyectado dar\u00eda como resultado principalmente el rechazo de una imagen que de otro modo ser\u00eda aceptable. Una inyecci\u00f3n de registro de inicio podr\u00eda permitir que los campos de un registro de atestaci\u00f3n posterior incluyan datos no deseados, lo que podr\u00eda hacer que una imagen parezca tener propiedades que no deber\u00eda tener. Como workaround, desactive la funci\u00f3n de registro de inicio."}]}, "references": {"reference_data": [{"url": "https://github.com/mcu-tools/mcuboot/security/advisories/GHSA-m59c-q9gq-rh2j", "name": "", "refsource": "", "tags": []}, {"url": "https://github.com/mcu-tools/mcuboot/security/advisories/GHSA-m59c-q9gq-rh2j", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-354"}]}]}}, "impact": {"baseMetricV3": {"exploitabilityScore": 1.1, "impactScore": 6.0, "cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:C/C:L/I:H/A:H", "baseScore": 7.7, "baseSeverity": "HIGH", "attackVector": "LOCAL", "attackComplexity": "HIGH", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "HIGH", "availabilityImpact": "HIGH"}}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}}