{"publishedDate": "2024-04-19T15:15Z", "lastModifiedDate": "2025-03-06T15:49Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2024-32644", "ASSIGNER": "security-advisories@github.com"}, "description": {"description_data": [{"lang": "en", "value": "Evmos is a scalable, high-throughput Proof-of-Stake EVM blockchain that is fully compatible and interoperable with Ethereum. Prior to 17.0.0, there is a way to mint arbitrary tokens due to the possibility to have two different states not in sync during the execution of a transaction. The exploit is based on the fact that to sync the Cosmos SDK state and the EVM one, we rely on the `stateDB.Commit()` method. When we call this method, we iterate though all the `dirtyStorage` and, **if and only if** it is different than the `originStorage`, we set the new state. Setting the new state means we update the Cosmos SDK KVStore.  If a contract storage state that is the same before and after a transaction, but is changed during the transaction and can call an external contract after the change, it can be exploited to make the transaction similar to non-atomic. The vulnerability is **critical** since this could lead to drain of funds through creative SC interactions.  The issue has been patched in versions >=V17.0.0."}, {"lang": "es", "value": "Evmos es una cadena de bloques EVM de prueba de participaci\u00f3n escalable y de alto rendimiento que es totalmente compatible e interoperable con Ethereum. Antes de 17.0.0, hab\u00eda una manera de acu\u00f1ar tokens arbitrarios debido a la posibilidad de tener dos estados diferentes no sincronizados durante la ejecuci\u00f3n de una transacci\u00f3n. El exploit se basa en el hecho de que para sincronizar el estado del SDK de Cosmos y el de EVM, confiamos en el m\u00e9todo `stateDB.Commit()`. Cuando llamamos a este m\u00e9todo, iteramos por todo el `dirtyStorage` y, **si y solo si** es diferente del `originStorage`, configuramos el nuevo estado. Establecer el nuevo estado significa que actualizamos Cosmos SDK KVStore. Si el estado de almacenamiento de un contrato es el mismo antes y despu\u00e9s de una transacci\u00f3n, pero se cambia durante la transacci\u00f3n y puede llamar a un contrato externo despu\u00e9s del cambio, se puede explotar para hacer que la transacci\u00f3n sea similar a no at\u00f3mica. La vulnerabilidad es **cr\u00edtica** ya que podr\u00eda provocar una fuga de fondos a trav\u00e9s de interacciones creativas del SC. El problema se solucion\u00f3 en las versiones &gt;=V17.0.0."}]}, "references": {"reference_data": [{"url": "https://github.com/evmos/evmos/blob/b196a522ba4951890b40992e9f97aa610f8b5f9c/x/evm/statedb/statedb.go#L460-L465", "name": "", "refsource": "", "tags": ["Product"]}, {"url": "https://github.com/evmos/evmos/commit/08982b5ee726b97bc50eaf58d1914829648b6a5f", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://github.com/evmos/evmos/security/advisories/GHSA-3fp5-2xwh-fxm6", "name": "", "refsource": "", "tags": ["Vendor Advisory"]}, {"url": "https://github.com/evmos/evmos/blob/b196a522ba4951890b40992e9f97aa610f8b5f9c/x/evm/statedb/statedb.go#L460-L465", "name": "", "refsource": "", "tags": ["Product"]}, {"url": "https://github.com/evmos/evmos/commit/08982b5ee726b97bc50eaf58d1914829648b6a5f", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://github.com/evmos/evmos/security/advisories/GHSA-3fp5-2xwh-fxm6", "name": "", "refsource": "", "tags": ["Vendor Advisory"]}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-662"}, {"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {"baseMetricV3": {"exploitabilityScore": 3.9, "impactScore": 5.2, "cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H", "baseScore": 9.1, "baseSeverity": "CRITICAL", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "HIGH"}}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "negate": false, "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:a:evmos:evmos:*:*:*:*:*:*:*:*", "matchCriteriaId": "96100BA4-DC9E-4DD0-8D11-B249349B1184", "cpe_name": [], "versionEndExcluding": "17.0.0"}]}]}}