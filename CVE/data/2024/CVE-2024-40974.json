{"publishedDate": "2024-07-12T13:15Z", "lastModifiedDate": "2024-11-21T09:31Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2024-40974", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/pseries: Enforce hcall result buffer validity and size\n\nplpar_hcall(), plpar_hcall9(), and related functions expect callers to\nprovide valid result buffers of certain minimum size. Currently this\nis communicated only through comments in the code and the compiler has\nno idea.\n\nFor example, if I write a bug like this:\n\n  long retbuf[PLPAR_HCALL_BUFSIZE]; // should be PLPAR_HCALL9_BUFSIZE\n  plpar_hcall9(H_ALLOCATE_VAS_WINDOW, retbuf, ...);\n\nThis compiles with no diagnostics emitted, but likely results in stack\ncorruption at runtime when plpar_hcall9() stores results past the end\nof the array. (To be clear this is a contrived example and I have not\nfound a real instance yet.)\n\nTo make this class of error less likely, we can use explicitly-sized\narray parameters instead of pointers in the declarations for the hcall\nAPIs. When compiled with -Warray-bounds[1], the code above now\nprovokes a diagnostic like this:\n\nerror: array argument is too small;\nis of size 32, callee requires at least 72 [-Werror,-Warray-bounds]\n   60 |                 plpar_hcall9(H_ALLOCATE_VAS_WINDOW, retbuf,\n      |                 ^                                   ~~~~~~\n\n[1] Enabled for LLVM builds but not GCC for now. See commit\n    0da6e5fd6c37 (\"gcc: disable '-Warray-bounds' for gcc-13 too\") and\n    related changes."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: powerpc/pseries: aplica la validez y el tama\u00f1o del b\u00fafer de resultados de hcall plpar_hcall(), plpar_hcall9() y las funciones relacionadas esperan que los llamadores proporcionen b\u00faferes de resultados v\u00e1lidos de cierto tama\u00f1o m\u00ednimo. Actualmente esto se comunica s\u00f3lo a trav\u00e9s de comentarios en el c\u00f3digo y el compilador no tiene idea. Por ejemplo, si escribo un error como este: long retbuf[PLPAR_HCALL_BUFSIZE]; // deber\u00eda ser PLPAR_HCALL9_BUFSIZE plpar_hcall9(H_ALLOCATE_VAS_WINDOW, retbuf, ...); Esto se compila sin emitir diagn\u00f3sticos, pero probablemente da como resultado da\u00f1os en la pila en tiempo de ejecuci\u00f3n cuando plpar_hcall9() almacena los resultados m\u00e1s all\u00e1 del final de la matriz. (Para ser claros, este es un ejemplo artificial y todav\u00eda no he encontrado una instancia real). Para hacer que esta clase de error sea menos probable, podemos usar par\u00e1metros de matriz de tama\u00f1o expl\u00edcito en lugar de punteros en las declaraciones de las API hcall. Cuando se compila con -Warray-bounds[1], el c\u00f3digo anterior ahora provoca un diagn\u00f3stico como este: error: el argumento de la matriz es demasiado peque\u00f1o; es de tama\u00f1o 32, el destinatario requiere al menos 72 [-Werror,-Warray-bounds] 60 | plpar_hcall9(H_ALLOCATE_VAS_WINDOW, retbuf, | ^ ~~~~~~ [1] Habilitado para compilaciones LLVM pero no para GCC por ahora. Consulte El commit 0da6e5fd6c37 (\"gcc: deshabilite '-Warray-bounds' para gcc-13 tambi\u00e9n\") y relacionados cambios."}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/19c166ee42cf16d8b156a6cb4544122d9a65d3ca", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/262e942ff5a839b9e4f3302a8987928b0c8b8a2d", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/3ad0034910a57aa88ed9976b1431b7b8c84e0048", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/8aa11aa001576bf3b00dcb8559564ad7a3113588", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/a8c988d752b3d98d5cc1e3929c519a55ef55426c", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/aa6107dcc4ce9a3451f2d729204713783b657257", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/acf2b80c31c37acab040baa3cf5f19fbd5140b18", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/ff2e185cf73df480ec69675936c4ee75a445c3e4", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/19c166ee42cf16d8b156a6cb4544122d9a65d3ca", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/262e942ff5a839b9e4f3302a8987928b0c8b8a2d", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/3ad0034910a57aa88ed9976b1431b7b8c84e0048", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/8aa11aa001576bf3b00dcb8559564ad7a3113588", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/a8c988d752b3d98d5cc1e3929c519a55ef55426c", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/aa6107dcc4ce9a3451f2d729204713783b657257", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/acf2b80c31c37acab040baa3cf5f19fbd5140b18", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/ff2e185cf73df480ec69675936c4ee75a445c3e4", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {}, "configurations": {"CVE_data_version": "4.0", "nodes": []}}