{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2024-26951", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/13d107794304306164481d31ce33f8fdb25a9c04", "name": "https://git.kernel.org/stable/c/13d107794304306164481d31ce33f8fdb25a9c04", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/13d107794304306164481d31ce33f8fdb25a9c04", "name": "https://git.kernel.org/stable/c/13d107794304306164481d31ce33f8fdb25a9c04", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/302b2dfc013baca3dea7ceda383930d9297d231d", "name": "https://git.kernel.org/stable/c/302b2dfc013baca3dea7ceda383930d9297d231d", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/302b2dfc013baca3dea7ceda383930d9297d231d", "name": "https://git.kernel.org/stable/c/302b2dfc013baca3dea7ceda383930d9297d231d", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/55b6c738673871c9b0edae05d0c97995c1ff08c4", "name": "https://git.kernel.org/stable/c/55b6c738673871c9b0edae05d0c97995c1ff08c4", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/55b6c738673871c9b0edae05d0c97995c1ff08c4", "name": "https://git.kernel.org/stable/c/55b6c738673871c9b0edae05d0c97995c1ff08c4", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/710a177f347282eea162aec8712beb1f42d5ad87", "name": "https://git.kernel.org/stable/c/710a177f347282eea162aec8712beb1f42d5ad87", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/710a177f347282eea162aec8712beb1f42d5ad87", "name": "https://git.kernel.org/stable/c/710a177f347282eea162aec8712beb1f42d5ad87", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/7bedfe4cfa38771840a355970e4437cd52d4046b", "name": "https://git.kernel.org/stable/c/7bedfe4cfa38771840a355970e4437cd52d4046b", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/7bedfe4cfa38771840a355970e4437cd52d4046b", "name": "https://git.kernel.org/stable/c/7bedfe4cfa38771840a355970e4437cd52d4046b", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b7cea3a9af0853fdbb1b16633a458f991dde6aac", "name": "https://git.kernel.org/stable/c/b7cea3a9af0853fdbb1b16633a458f991dde6aac", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b7cea3a9af0853fdbb1b16633a458f991dde6aac", "name": "https://git.kernel.org/stable/c/b7cea3a9af0853fdbb1b16633a458f991dde6aac", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/f52be46e3e6ecefc2539119784324f0cbc09620a", "name": "https://git.kernel.org/stable/c/f52be46e3e6ecefc2539119784324f0cbc09620a", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/f52be46e3e6ecefc2539119784324f0cbc09620a", "name": "https://git.kernel.org/stable/c/f52be46e3e6ecefc2539119784324f0cbc09620a", "refsource": "", "tags": []}, {"url": "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html", "name": "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nwireguard: netlink: check for dangling peer via is_dead instead of empty list\n\nIf all peers are removed via wg_peer_remove_all(), rather than setting\npeer_list to empty, the peer is added to a temporary list with a head on\nthe stack of wg_peer_remove_all(). If a netlink dump is resumed and the\ncursored peer is one that has been removed via wg_peer_remove_all(), it\nwill iterate from that peer and then attempt to dump freed peers.\n\nFix this by instead checking peer->is_dead, which was explictly created\nfor this purpose. Also move up the device_update_lock lockdep assertion,\nsince reading is_dead relies on that.\n\nIt can be reproduced by a small script like:\n\n    echo \"Setting config...\"\n    ip link add dev wg0 type wireguard\n    wg setconf wg0 /big-config\n    (\n            while true; do\n                    echo \"Showing config...\"\n                    wg showconf wg0 > /dev/null\n            done\n    ) &\n    sleep 4\n    wg setconf wg0 <(printf \"[Peer]\\nPublicKey=$(wg genkey)\\n\")\n\nResulting in:\n\n    BUG: KASAN: slab-use-after-free in __lock_acquire+0x182a/0x1b20\n    Read of size 8 at addr ffff88811956ec70 by task wg/59\n    CPU: 2 PID: 59 Comm: wg Not tainted 6.8.0-rc2-debug+ #5\n    Call Trace:\n     <TASK>\n     dump_stack_lvl+0x47/0x70\n     print_address_description.constprop.0+0x2c/0x380\n     print_report+0xab/0x250\n     kasan_report+0xba/0xf0\n     __lock_acquire+0x182a/0x1b20\n     lock_acquire+0x191/0x4b0\n     down_read+0x80/0x440\n     get_peer+0x140/0xcb0\n     wg_get_device_dump+0x471/0x1130"}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-05-01T06:15Z", "lastModifiedDate": "2024-11-21T09:03Z"}