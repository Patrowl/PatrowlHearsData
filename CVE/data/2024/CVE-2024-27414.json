{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2024-27414", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/167d8642daa6a44b51de17f8ff0f584e1e762db7", "name": "https://git.kernel.org/stable/c/167d8642daa6a44b51de17f8ff0f584e1e762db7", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/167d8642daa6a44b51de17f8ff0f584e1e762db7", "name": "https://git.kernel.org/stable/c/167d8642daa6a44b51de17f8ff0f584e1e762db7", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/743ad091fb46e622f1b690385bb15e3cd3daf874", "name": "https://git.kernel.org/stable/c/743ad091fb46e622f1b690385bb15e3cd3daf874", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/743ad091fb46e622f1b690385bb15e3cd3daf874", "name": "https://git.kernel.org/stable/c/743ad091fb46e622f1b690385bb15e3cd3daf874", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/831bc2728fb48a8957a824cba8c264b30dca1425", "name": "https://git.kernel.org/stable/c/831bc2728fb48a8957a824cba8c264b30dca1425", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/831bc2728fb48a8957a824cba8c264b30dca1425", "name": "https://git.kernel.org/stable/c/831bc2728fb48a8957a824cba8c264b30dca1425", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/882a51a10ecf24ce135d573afa0872aef02c5125", "name": "https://git.kernel.org/stable/c/882a51a10ecf24ce135d573afa0872aef02c5125", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/882a51a10ecf24ce135d573afa0872aef02c5125", "name": "https://git.kernel.org/stable/c/882a51a10ecf24ce135d573afa0872aef02c5125", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/a1227b27fcccc99dc44f912b479e01a17e2d7d31", "name": "https://git.kernel.org/stable/c/a1227b27fcccc99dc44f912b479e01a17e2d7d31", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/a1227b27fcccc99dc44f912b479e01a17e2d7d31", "name": "https://git.kernel.org/stable/c/a1227b27fcccc99dc44f912b479e01a17e2d7d31", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b9fbc44159dfc3e9a7073032752d9e03f5194a6f", "name": "https://git.kernel.org/stable/c/b9fbc44159dfc3e9a7073032752d9e03f5194a6f", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b9fbc44159dfc3e9a7073032752d9e03f5194a6f", "name": "https://git.kernel.org/stable/c/b9fbc44159dfc3e9a7073032752d9e03f5194a6f", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/f2261eb994aa5757c1da046b78e3229a3ece0ad9", "name": "https://git.kernel.org/stable/c/f2261eb994aa5757c1da046b78e3229a3ece0ad9", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/f2261eb994aa5757c1da046b78e3229a3ece0ad9", "name": "https://git.kernel.org/stable/c/f2261eb994aa5757c1da046b78e3229a3ece0ad9", "refsource": "", "tags": []}, {"url": "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html", "name": "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nrtnetlink: fix error logic of IFLA_BRIDGE_FLAGS writing back\n\nIn the commit d73ef2d69c0d (\"rtnetlink: let rtnl_bridge_setlink checks\nIFLA_BRIDGE_MODE length\"), an adjustment was made to the old loop logic\nin the function `rtnl_bridge_setlink` to enable the loop to also check\nthe length of the IFLA_BRIDGE_MODE attribute. However, this adjustment\nremoved the `break` statement and led to an error logic of the flags\nwriting back at the end of this function.\n\nif (have_flags)\n    memcpy(nla_data(attr), &flags, sizeof(flags));\n    // attr should point to IFLA_BRIDGE_FLAGS NLA !!!\n\nBefore the mentioned commit, the `attr` is granted to be IFLA_BRIDGE_FLAGS.\nHowever, this is not necessarily true fow now as the updated loop will let\nthe attr point to the last NLA, even an invalid NLA which could cause\noverflow writes.\n\nThis patch introduces a new variable `br_flag` to save the NLA pointer\nthat points to IFLA_BRIDGE_FLAGS and uses it to resolve the mentioned\nerror logic."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-05-17T12:15Z", "lastModifiedDate": "2024-11-21T09:04Z"}