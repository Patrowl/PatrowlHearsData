{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2024-27437", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/139dfcc4d723ab13469881200c7d80f49d776060", "name": "https://git.kernel.org/stable/c/139dfcc4d723ab13469881200c7d80f49d776060", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/139dfcc4d723ab13469881200c7d80f49d776060", "name": "https://git.kernel.org/stable/c/139dfcc4d723ab13469881200c7d80f49d776060", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/26389925d6c2126fb777821a0a983adca7ee6351", "name": "https://git.kernel.org/stable/c/26389925d6c2126fb777821a0a983adca7ee6351", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/26389925d6c2126fb777821a0a983adca7ee6351", "name": "https://git.kernel.org/stable/c/26389925d6c2126fb777821a0a983adca7ee6351", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/2a4a666c45107206605b7b5bc20545f8aabc4fa2", "name": "https://git.kernel.org/stable/c/2a4a666c45107206605b7b5bc20545f8aabc4fa2", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/2a4a666c45107206605b7b5bc20545f8aabc4fa2", "name": "https://git.kernel.org/stable/c/2a4a666c45107206605b7b5bc20545f8aabc4fa2", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/3b3491ad0f80d913e7d255941d4470f4a4d9bfda", "name": "https://git.kernel.org/stable/c/3b3491ad0f80d913e7d255941d4470f4a4d9bfda", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/3b3491ad0f80d913e7d255941d4470f4a4d9bfda", "name": "https://git.kernel.org/stable/c/3b3491ad0f80d913e7d255941d4470f4a4d9bfda", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/561d5e1998d58b54ce2bbbb3e843b669aa0b3db5", "name": "https://git.kernel.org/stable/c/561d5e1998d58b54ce2bbbb3e843b669aa0b3db5", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/561d5e1998d58b54ce2bbbb3e843b669aa0b3db5", "name": "https://git.kernel.org/stable/c/561d5e1998d58b54ce2bbbb3e843b669aa0b3db5", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b7a2f0955ffceffadfe098b40b50307431f45438", "name": "https://git.kernel.org/stable/c/b7a2f0955ffceffadfe098b40b50307431f45438", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b7a2f0955ffceffadfe098b40b50307431f45438", "name": "https://git.kernel.org/stable/c/b7a2f0955ffceffadfe098b40b50307431f45438", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/bf0bc84a20e6109ab07d5dc072067bd01eb931ec", "name": "https://git.kernel.org/stable/c/bf0bc84a20e6109ab07d5dc072067bd01eb931ec", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/bf0bc84a20e6109ab07d5dc072067bd01eb931ec", "name": "https://git.kernel.org/stable/c/bf0bc84a20e6109ab07d5dc072067bd01eb931ec", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/fe9a7082684eb059b925c535682e68c34d487d43", "name": "https://git.kernel.org/stable/c/fe9a7082684eb059b925c535682e68c34d487d43", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/fe9a7082684eb059b925c535682e68c34d487d43", "name": "https://git.kernel.org/stable/c/fe9a7082684eb059b925c535682e68c34d487d43", "refsource": "", "tags": []}, {"url": "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html", "name": "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nvfio/pci: Disable auto-enable of exclusive INTx IRQ\n\nCurrently for devices requiring masking at the irqchip for INTx, ie.\ndevices without DisINTx support, the IRQ is enabled in request_irq()\nand subsequently disabled as necessary to align with the masked status\nflag.  This presents a window where the interrupt could fire between\nthese events, resulting in the IRQ incrementing the disable depth twice.\nThis would be unrecoverable for a user since the masked flag prevents\nnested enables through vfio.\n\nInstead, invert the logic using IRQF_NO_AUTOEN such that exclusive INTx\nis never auto-enabled, then unmask as required."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-04-05T09:15Z", "lastModifiedDate": "2024-11-21T09:04Z"}