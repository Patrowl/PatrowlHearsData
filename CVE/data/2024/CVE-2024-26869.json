{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2024-26869", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/04226d8e3c4028dc451e9d8777356ec0f7919253", "name": "https://git.kernel.org/stable/c/04226d8e3c4028dc451e9d8777356ec0f7919253", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/04226d8e3c4028dc451e9d8777356ec0f7919253", "name": "https://git.kernel.org/stable/c/04226d8e3c4028dc451e9d8777356ec0f7919253", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/77bfdb89cc222fc7bfe198eda77bdc427d5ac189", "name": "https://git.kernel.org/stable/c/77bfdb89cc222fc7bfe198eda77bdc427d5ac189", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/77bfdb89cc222fc7bfe198eda77bdc427d5ac189", "name": "https://git.kernel.org/stable/c/77bfdb89cc222fc7bfe198eda77bdc427d5ac189", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/9f0c4a46be1fe9b97dbe66d49204c1371e3ece65", "name": "https://git.kernel.org/stable/c/9f0c4a46be1fe9b97dbe66d49204c1371e3ece65", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/9f0c4a46be1fe9b97dbe66d49204c1371e3ece65", "name": "https://git.kernel.org/stable/c/9f0c4a46be1fe9b97dbe66d49204c1371e3ece65", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/c92f2927df860a60ba815d3ee610a944b92a8694", "name": "https://git.kernel.org/stable/c/c92f2927df860a60ba815d3ee610a944b92a8694", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/c92f2927df860a60ba815d3ee610a944b92a8694", "name": "https://git.kernel.org/stable/c/c92f2927df860a60ba815d3ee610a944b92a8694", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: fix to truncate meta inode pages forcely\n\nBelow race case can cause data corruption:\n\nThread A\t\t\t\tGC thread\n\t\t\t\t\t- gc_data_segment\n\t\t\t\t\t - ra_data_block\n\t\t\t\t\t  - locked meta_inode page\n- f2fs_inplace_write_data\n - invalidate_mapping_pages\n : fail to invalidate meta_inode page\n   due to lock failure or dirty|writeback\n   status\n - f2fs_submit_page_bio\n : write last dirty data to old blkaddr\n\t\t\t\t\t - move_data_block\n\t\t\t\t\t  - load old data from meta_inode page\n\t\t\t\t\t  - f2fs_submit_page_write\n\t\t\t\t\t  : write old data to new blkaddr\n\nBecause invalidate_mapping_pages() will skip invalidating page which\nhas unclear status including locked, dirty, writeback and so on, so\nwe need to use truncate_inode_pages_range() instead of\ninvalidate_mapping_pages() to make sure meta_inode page will be dropped."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-04-17T11:15Z", "lastModifiedDate": "2024-11-21T09:03Z"}