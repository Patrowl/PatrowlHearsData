{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2024-26828", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/7190353835b4a219abb70f90b06cdcae97f11512", "name": "https://git.kernel.org/stable/c/7190353835b4a219abb70f90b06cdcae97f11512", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/7190353835b4a219abb70f90b06cdcae97f11512", "name": "https://git.kernel.org/stable/c/7190353835b4a219abb70f90b06cdcae97f11512", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/cffe487026be13eaf37ea28b783d9638ab147204", "name": "https://git.kernel.org/stable/c/cffe487026be13eaf37ea28b783d9638ab147204", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/cffe487026be13eaf37ea28b783d9638ab147204", "name": "https://git.kernel.org/stable/c/cffe487026be13eaf37ea28b783d9638ab147204", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/df2af9fdbc4ddde18a3371c4ca1a86596e8be301", "name": "https://git.kernel.org/stable/c/df2af9fdbc4ddde18a3371c4ca1a86596e8be301", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/df2af9fdbc4ddde18a3371c4ca1a86596e8be301", "name": "https://git.kernel.org/stable/c/df2af9fdbc4ddde18a3371c4ca1a86596e8be301", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/f7ff1c89fb6e9610d2b01c1821727729e6609308", "name": "https://git.kernel.org/stable/c/f7ff1c89fb6e9610d2b01c1821727729e6609308", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/f7ff1c89fb6e9610d2b01c1821727729e6609308", "name": "https://git.kernel.org/stable/c/f7ff1c89fb6e9610d2b01c1821727729e6609308", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: fix underflow in parse_server_interfaces()\n\nIn this loop, we step through the buffer and after each item we check\nif the size_left is greater than the minimum size we need.  However,\nthe problem is that \"bytes_left\" is type ssize_t while sizeof() is type\nsize_t.  That means that because of type promotion, the comparison is\ndone as an unsigned and if we have negative bytes left the loop\ncontinues instead of ending."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-04-17T10:15Z", "lastModifiedDate": "2024-11-21T09:03Z"}