{"publishedDate": "2024-05-01T13:15Z", "lastModifiedDate": "2024-11-21T09:03Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2024-27063", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nleds: trigger: netdev: Fix kernel panic on interface rename trig notify\n\nCommit d5e01266e7f5 (\"leds: trigger: netdev: add additional specific link\nspeed mode\") in the various changes, reworked the way to set the LINKUP\nmode in commit cee4bd16c319 (\"leds: trigger: netdev: Recheck\nNETDEV_LED_MODE_LINKUP on dev rename\") and moved it to a generic function.\n\nThis changed the logic where, in the previous implementation the dev\nfrom the trigger event was used to check if the carrier was ok, but in\nthe new implementation with the generic function, the dev in\ntrigger_data is used instead.\n\nThis is problematic and cause a possible kernel panic due to the fact\nthat the dev in the trigger_data still reference the old one as the\nnew one (passed from the trigger event) still has to be hold and saved\nin the trigger_data struct (done in the NETDEV_REGISTER case).\n\nOn calling of get_device_state(), an invalid net_dev is used and this\ncause a kernel panic.\n\nTo handle this correctly, move the call to get_device_state() after the\nnew net_dev is correctly set in trigger_data (in the NETDEV_REGISTER\ncase) and correctly parse the new dev."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: leds: trigger: netdev: corrige el p\u00e1nico del kernel al cambiar el nombre de la interfaz, notifica el trigono. Commit d5e01266e7f5 (\"leds: trigger: netdev: agrega un modo de velocidad de enlace espec\u00edfico adicional\") en los diversos cambios, reelaborados la forma de configurar el modo LINKUP en el commit cee4bd16c319 (\"leds: trigger: netdev: Recheck NETDEV_LED_MODE_LINKUP on dev rename\") y lo mov\u00ed a una funci\u00f3n gen\u00e9rica. Esto cambi\u00f3 la l\u00f3gica donde, en la implementaci\u00f3n anterior, se usaba el desarrollo del evento desencadenante para verificar si el operador estaba bien, pero en la nueva implementaci\u00f3n con la funci\u00f3n gen\u00e9rica, se usa el desarrollo en trigger_data. Esto es problem\u00e1tico y causa un posible p\u00e1nico en el kernel debido al hecho de que el desarrollador en trigger_data a\u00fan hace referencia al anterior, ya que el nuevo (pasado desde el evento desencadenante) a\u00fan debe retenerse y guardarse en la estructura trigger_data (hecho en el caso NETDEV_REGISTER). Al llamar a get_device_state(), se utiliza un net_dev no v\u00e1lido y esto provoca un p\u00e1nico en el kernel. Para manejar esto correctamente, mueva la llamada a get_device_state() despu\u00e9s de que el nuevo net_dev est\u00e9 configurado correctamente en trigger_data (en el caso NETDEV_REGISTER) y analice correctamente el nuevo dev."}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/10f2af1af8ab8a7064f193446abd5579d3def7e3", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/3f360227cb46edb2cd2494128e1e06ed5768a62e", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/415798bc07dd1c1ae3a656aa026580816e0b9fe8", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/acd025c7a7d151261533016a6ca2d38f2de04e87", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/10f2af1af8ab8a7064f193446abd5579d3def7e3", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/3f360227cb46edb2cd2494128e1e06ed5768a62e", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/415798bc07dd1c1ae3a656aa026580816e0b9fe8", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/acd025c7a7d151261533016a6ca2d38f2de04e87", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {}, "configurations": {"CVE_data_version": "4.0", "nodes": []}}