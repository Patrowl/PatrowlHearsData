{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2024-36013", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "http://www.openwall.com/lists/oss-security/2024/05/30/1", "name": "http://www.openwall.com/lists/oss-security/2024/05/30/1", "refsource": "", "tags": []}, {"url": "http://www.openwall.com/lists/oss-security/2024/05/30/2", "name": "http://www.openwall.com/lists/oss-security/2024/05/30/2", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/4d7b41c0e43995b0e992b9f8903109275744b658", "name": "https://git.kernel.org/stable/c/4d7b41c0e43995b0e992b9f8903109275744b658", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/4d7b41c0e43995b0e992b9f8903109275744b658", "name": "https://git.kernel.org/stable/c/4d7b41c0e43995b0e992b9f8903109275744b658", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/826af9d2f69567c646ff46d10393d47e30ad23c6", "name": "https://git.kernel.org/stable/c/826af9d2f69567c646ff46d10393d47e30ad23c6", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/826af9d2f69567c646ff46d10393d47e30ad23c6", "name": "https://git.kernel.org/stable/c/826af9d2f69567c646ff46d10393d47e30ad23c6", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/cfe560c7050bfb37b0d2491bbe7cd8b59e77fdc5", "name": "https://git.kernel.org/stable/c/cfe560c7050bfb37b0d2491bbe7cd8b59e77fdc5", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/cfe560c7050bfb37b0d2491bbe7cd8b59e77fdc5", "name": "https://git.kernel.org/stable/c/cfe560c7050bfb37b0d2491bbe7cd8b59e77fdc5", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: L2CAP: Fix slab-use-after-free in l2cap_connect()\n\nExtend a critical section to prevent chan from early freeing.\nAlso make the l2cap_connect() return type void. Nothing is using the\nreturned value but it is ugly to return a potentially freed pointer.\nMaking it void will help with backports because earlier kernels did use\nthe return value. Now the compile will break for kernels where this\npatch is not a complete fix.\n\nCall stack summary:\n\n[use]\nl2cap_bredr_sig_cmd\n  l2cap_connect\n  + mutex_lock(&conn->chan_lock);\n  \u00a6 chan = pchan->ops->new_connection(pchan); <- alloc chan\n  \u00a6 __l2cap_chan_add(conn, chan);\n  \u00a6   l2cap_chan_hold(chan);\n  \u00a6   list_add(&chan->list, &conn->chan_l);   ... (1)\n  + mutex_unlock(&conn->chan_lock);\n    chan->conf_state              ... (4) <- use after free\n\n[free]\nl2cap_conn_del\n+ mutex_lock(&conn->chan_lock);\n\u00a6 foreach chan in conn->chan_l:            ... (2)\n\u00a6   l2cap_chan_put(chan);\n\u00a6     l2cap_chan_destroy\n\u00a6       kfree(chan)               ... (3) <- chan freed\n+ mutex_unlock(&conn->chan_lock);\n\n==================================================================\nBUG: KASAN: slab-use-after-free in instrument_atomic_read\ninclude/linux/instrumented.h:68 [inline]\nBUG: KASAN: slab-use-after-free in _test_bit\ninclude/asm-generic/bitops/instrumented-non-atomic.h:141 [inline]\nBUG: KASAN: slab-use-after-free in l2cap_connect+0xa67/0x11a0\nnet/bluetooth/l2cap_core.c:4260\nRead of size 8 at addr ffff88810bf040a0 by task kworker/u3:1/311"}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-05-23T07:15Z", "lastModifiedDate": "2024-11-21T09:21Z"}