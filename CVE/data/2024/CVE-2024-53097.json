{"publishedDate": "2024-11-25T22:15Z", "lastModifiedDate": "2024-12-24T15:44Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2024-53097", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm: krealloc: Fix MTE false alarm in __do_krealloc\n\nThis patch addresses an issue introduced by commit 1a83a716ec233 (\"mm:\nkrealloc: consider spare memory for __GFP_ZERO\") which causes MTE\n(Memory Tagging Extension) to falsely report a slab-out-of-bounds error.\n\nThe problem occurs when zeroing out spare memory in __do_krealloc. The\noriginal code only considered software-based KASAN and did not account\nfor MTE. It does not reset the KASAN tag before calling memset, leading\nto a mismatch between the pointer tag and the memory tag, resulting\nin a false positive.\n\nExample of the error:\n==================================================================\nswapper/0: BUG: KASAN: slab-out-of-bounds in __memset+0x84/0x188\nswapper/0: Write at addr f4ffff8005f0fdf0 by task swapper/0/1\nswapper/0: Pointer tag: [f4], memory tag: [fe]\nswapper/0:\nswapper/0: CPU: 4 UID: 0 PID: 1 Comm: swapper/0 Not tainted 6.12.\nswapper/0: Hardware name: MT6991(ENG) (DT)\nswapper/0: Call trace:\nswapper/0:  dump_backtrace+0xfc/0x17c\nswapper/0:  show_stack+0x18/0x28\nswapper/0:  dump_stack_lvl+0x40/0xa0\nswapper/0:  print_report+0x1b8/0x71c\nswapper/0:  kasan_report+0xec/0x14c\nswapper/0:  __do_kernel_fault+0x60/0x29c\nswapper/0:  do_bad_area+0x30/0xdc\nswapper/0:  do_tag_check_fault+0x20/0x34\nswapper/0:  do_mem_abort+0x58/0x104\nswapper/0:  el1_abort+0x3c/0x5c\nswapper/0:  el1h_64_sync_handler+0x80/0xcc\nswapper/0:  el1h_64_sync+0x68/0x6c\nswapper/0:  __memset+0x84/0x188\nswapper/0:  btf_populate_kfunc_set+0x280/0x3d8\nswapper/0:  __register_btf_kfunc_id_set+0x43c/0x468\nswapper/0:  register_btf_kfunc_id_set+0x48/0x60\nswapper/0:  register_nf_nat_bpf+0x1c/0x40\nswapper/0:  nf_nat_init+0xc0/0x128\nswapper/0:  do_one_initcall+0x184/0x464\nswapper/0:  do_initcall_level+0xdc/0x1b0\nswapper/0:  do_initcalls+0x70/0xc0\nswapper/0:  do_basic_setup+0x1c/0x28\nswapper/0:  kernel_init_freeable+0x144/0x1b8\nswapper/0:  kernel_init+0x20/0x1a8\nswapper/0:  ret_from_fork+0x10/0x20\n=================================================================="}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: mm: krealloc: corrige la falsa alarma de MTE en __do_krealloc Este parche soluciona un problema introducido por el commit 1a83a716ec233 (\"mm: krealloc: considere la memoria de repuesto para __GFP_ZERO\") que hace que MTE (extensi\u00f3n de etiquetado de memoria) informe falsamente un error de losa fuera de los l\u00edmites. El problema ocurre al poner a cero la memoria de repuesto en __do_krealloc. El c\u00f3digo original solo consideraba KASAN basado en software y no ten\u00eda en cuenta MTE. No restablece la etiqueta KASAN antes de llamar a memset, lo que lleva a una falta de coincidencia entre la etiqueta del puntero y la etiqueta de memoria, lo que resulta en un falso positivo. Ejemplo del error: ================================================================== swapper/0: ERROR: KASAN: slab fuera de los l\u00edmites en __memset+0x84/0x188 swapper/0: Escritura en la direcci\u00f3n f4ffff8005f0fdf0 por la tarea swapper/0/1 swapper/0: Etiqueta de puntero: [f4], etiqueta de memoria: [fe] swapper/0: swapper/0: CPU: 4 UID: 0 PID: 1 Comm: swapper/0 No contaminado 6.12. swapper/0: Nombre del hardware: MT6991(ENG) (DT) swapper/0: Rastreo de llamadas: swapper/0: dump_backtrace+0xfc/0x17c swapper/0: show_stack+0x18/0x28 swapper/0: dump_stack_lvl+0x40/0xa0 swapper/0: print_report+0x1b8/0x71c swapper/0: kasan_report+0xec/0x14c swapper/0: __do_kernel_fault+0x60/0x29c swapper/0: do_bad_area+0x30/0xdc swapper/0: do_tag_check_fault+0x20/0x34 swapper/0: do_mem_abort+0x58/0x104 swapper/0: el1_abort+0x3c/0x5c intercambiador/0: el1h_64_sync_handler+0x80/0xcc intercambiador/0: el1h_64_sync+0x68/0x6c intercambiador/0: __memset+0x84/0x188 intercambiador/0: btf_populate_kfunc_set+0x280/0x3d8 intercambiador/0: __register_btf_kfunc_id_set+0x43c/0x468 intercambiador/0: register_btf_kfunc_id_set+0x48/0x60 intercambiador/0: register_nf_nat_bpf+0x1c/0x40 intercambiador/0: nf_nat_init+0xc0/0x128 intercambiador/0: do_one_initcall+0x184/0x464 intercambiador/0: do_initcall_level+0xdc/0x1b0 intercambiador/0: do_initcalls+0x70/0xc0 intercambiador/0: do_basic_setup+0x1c/0x28 intercambiador/0: kernel_init_freeable+0x144/0x1b8 intercambiador/0: kernel_init+0x20/0x1a8 intercambiador/0: ret_from_fork+0x10/0x20 ===================================================================="}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/3dfb40da84f26dd35dd9bbaf626a2424565b8406", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/486aeb5f1855c75dd810c25036134961bd2a6722", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/704573851b51808b45dae2d62059d1d8189138a2", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/71548fada7ee0eb50cc6ccda82dff010c745f92c", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/8ebee7565effdeae6085458f8f8463363120a871", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/d02492863023431c31f85d570f718433c22b9311", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/d43f1430d47c22a0727c05b6f156ed25fecdfeb4", "name": "", "refsource": "", "tags": ["Patch"]}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {"baseMetricV3": {"exploitabilityScore": 1.8, "impactScore": 3.6, "cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H", "baseScore": 5.5, "baseSeverity": "MEDIUM", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH"}}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "negate": false, "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "matchCriteriaId": "3546841B-07B8-4997-A4AD-1EC788256AF0", "cpe_name": [], "versionStartIncluding": "5.10.227", "versionEndExcluding": "5.10.230"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "matchCriteriaId": "B3C4D92D-9E65-4C21-AF70-5AC493F239EF", "cpe_name": [], "versionStartIncluding": "5.15.168", "versionEndExcluding": "5.15.173"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "matchCriteriaId": "7C53F2A0-0C57-484C-9CE8-EC3EC63EC52B", "cpe_name": [], "versionStartIncluding": "6.1.113", "versionEndExcluding": "6.1.118"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "matchCriteriaId": "C41517DE-EF01-4A67-961A-7BA6F46D422A", "cpe_name": [], "versionStartIncluding": "6.6.55", "versionEndExcluding": "6.6.62"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "matchCriteriaId": "DFC4E34A-A453-4E5B-B4B8-A80AC8442771", "cpe_name": [], "versionStartIncluding": "6.11.3", "versionEndExcluding": "6.11.9"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:6.10.14:*:*:*:*:*:*:*", "matchCriteriaId": "512B17C9-99F8-4C34-965E-0E2384EEB665", "cpe_name": []}]}]}}