{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2024-26630", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/3a75cb05d53f4a6823a32deb078de1366954a804", "name": "https://git.kernel.org/stable/c/3a75cb05d53f4a6823a32deb078de1366954a804", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/3a75cb05d53f4a6823a32deb078de1366954a804", "name": "https://git.kernel.org/stable/c/3a75cb05d53f4a6823a32deb078de1366954a804", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/ba60fdf75e89ea762bb617be578dc47f27655117", "name": "https://git.kernel.org/stable/c/ba60fdf75e89ea762bb617be578dc47f27655117", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/ba60fdf75e89ea762bb617be578dc47f27655117", "name": "https://git.kernel.org/stable/c/ba60fdf75e89ea762bb617be578dc47f27655117", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/fe7e008e0ce728252e4ec652cceebcc62211657c", "name": "https://git.kernel.org/stable/c/fe7e008e0ce728252e4ec652cceebcc62211657c", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/fe7e008e0ce728252e4ec652cceebcc62211657c", "name": "https://git.kernel.org/stable/c/fe7e008e0ce728252e4ec652cceebcc62211657c", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm: cachestat: fix folio read-after-free in cache walk\n\nIn cachestat, we access the folio from the page cache's xarray to compute\nits page offset, and check for its dirty and writeback flags.  However, we\ndo not hold a reference to the folio before performing these actions,\nwhich means the folio can concurrently be released and reused as another\nfolio/page/slab.\n\nGet around this altogether by just using xarray's existing machinery for\nthe folio page offsets and dirty/writeback states.\n\nThis changes behavior for tmpfs files to now always report zeroes in their\ndirty and writeback counters.  This is okay as tmpfs doesn't follow\nconventional writeback cache behavior: its pages get \"cleaned\" during\nswapout, after which they're no longer resident etc."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-03-13T16:15Z", "lastModifiedDate": "2024-11-21T09:02Z"}