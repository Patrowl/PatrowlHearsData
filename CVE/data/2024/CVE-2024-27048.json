{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2024-27048", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/6138a82f3bccfc67ed7ac059493579fc326c02e5", "name": "https://git.kernel.org/stable/c/6138a82f3bccfc67ed7ac059493579fc326c02e5", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/6138a82f3bccfc67ed7ac059493579fc326c02e5", "name": "https://git.kernel.org/stable/c/6138a82f3bccfc67ed7ac059493579fc326c02e5", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/9975908315c13bae2f2ed5ba92870fa935180b0e", "name": "https://git.kernel.org/stable/c/9975908315c13bae2f2ed5ba92870fa935180b0e", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/9975908315c13bae2f2ed5ba92870fa935180b0e", "name": "https://git.kernel.org/stable/c/9975908315c13bae2f2ed5ba92870fa935180b0e", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b4152222e04cb8afeeca239c90e3fcaf4c553b42", "name": "https://git.kernel.org/stable/c/b4152222e04cb8afeeca239c90e3fcaf4c553b42", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b4152222e04cb8afeeca239c90e3fcaf4c553b42", "name": "https://git.kernel.org/stable/c/b4152222e04cb8afeeca239c90e3fcaf4c553b42", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/df62e22c2e27420e8990a4f09e30d7bf56c2036f", "name": "https://git.kernel.org/stable/c/df62e22c2e27420e8990a4f09e30d7bf56c2036f", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/df62e22c2e27420e8990a4f09e30d7bf56c2036f", "name": "https://git.kernel.org/stable/c/df62e22c2e27420e8990a4f09e30d7bf56c2036f", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: brcm80211: handle pmk_op allocation failure\n\nThe kzalloc() in brcmf_pmksa_v3_op() will return null if the\nphysical memory has run out. As a result, if we dereference\nthe null value, the null pointer dereference bug will happen.\n\nReturn -ENOMEM from brcmf_pmksa_v3_op() if kzalloc() fails\nfor pmk_op."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-05-01T13:15Z", "lastModifiedDate": "2024-11-21T09:03Z"}