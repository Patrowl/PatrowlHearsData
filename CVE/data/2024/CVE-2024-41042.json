{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2024-41042", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/1947e4c3346faa8ac7e343652c0fd3b3e394202f", "name": "https://git.kernel.org/stable/c/1947e4c3346faa8ac7e343652c0fd3b3e394202f", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/31c35f9f89ef585f1edb53e17ac73a0ca4a9712b", "name": "https://git.kernel.org/stable/c/31c35f9f89ef585f1edb53e17ac73a0ca4a9712b", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/717c91c6ed73e248de6a15bc53adefb81446c9d0", "name": "https://git.kernel.org/stable/c/717c91c6ed73e248de6a15bc53adefb81446c9d0", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/8246b7466c8da49d0d9e85e26cbd69dd6d3e3d1e", "name": "https://git.kernel.org/stable/c/8246b7466c8da49d0d9e85e26cbd69dd6d3e3d1e", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/9df785aeb7dcc8efd1d4110bb27d26005298ebae", "name": "https://git.kernel.org/stable/c/9df785aeb7dcc8efd1d4110bb27d26005298ebae", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/9df785aeb7dcc8efd1d4110bb27d26005298ebae", "name": "https://git.kernel.org/stable/c/9df785aeb7dcc8efd1d4110bb27d26005298ebae", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b6b6e430470e1c3c5513311cb35a15a205595abe", "name": "https://git.kernel.org/stable/c/b6b6e430470e1c3c5513311cb35a15a205595abe", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/cd4348e0a50286282c314ad6d2b0740e7c812c24", "name": "https://git.kernel.org/stable/c/cd4348e0a50286282c314ad6d2b0740e7c812c24", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/cff3bd012a9512ac5ed858d38e6ed65f6391008c", "name": "https://git.kernel.org/stable/c/cff3bd012a9512ac5ed858d38e6ed65f6391008c", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/cff3bd012a9512ac5ed858d38e6ed65f6391008c", "name": "https://git.kernel.org/stable/c/cff3bd012a9512ac5ed858d38e6ed65f6391008c", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: prefer nft_chain_validate\n\nnft_chain_validate already performs loop detection because a cycle will\nresult in a call stack overflow (ctx->level >= NFT_JUMP_STACK_SIZE).\n\nIt also follows maps via ->validate callback in nft_lookup, so there\nappears no reason to iterate the maps again.\n\nnf_tables_check_loops() and all its helper functions can be removed.\nThis improves ruleset load time significantly, from 23s down to 12s.\n\nThis also fixes a crash bug. Old loop detection code can result in\nunbounded recursion:\n\nBUG: TASK stack guard page was hit at ....\nOops: stack guard page: 0000 [#1] PREEMPT SMP KASAN\nCPU: 4 PID: 1539 Comm: nft Not tainted 6.10.0-rc5+ #1\n[..]\n\nwith a suitable ruleset during validation of register stores.\n\nI can't see any actual reason to attempt to check for this from\nnft_validate_register_store(), at this point the transaction is still in\nprogress, so we don't have a full picture of the rule graph.\n\nFor nf-next it might make sense to either remove it or make this depend\non table->validate_state in case we could catch an error earlier\n(for improved error reporting to userspace)."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-07-29T15:15Z", "lastModifiedDate": "2024-11-21T09:32Z"}