{"publishedDate": "2025-01-11T15:15Z", "lastModifiedDate": "2025-01-11T15:15Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2024-57839", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nRevert \"readahead: properly shorten readahead when falling back to do_page_cache_ra()\"\n\nThis reverts commit 7c877586da3178974a8a94577b6045a48377ff25.\n\nAnders and Philippe have reported that recent kernels occasionally hang\nwhen used with NFS in readahead code.  The problem has been bisected to\n7c877586da3 (\"readahead: properly shorten readahead when falling back to\ndo_page_cache_ra()\").  The cause of the problem is that ra->size can be\nshrunk by read_pages() call and subsequently we end up calling\ndo_page_cache_ra() with negative (read huge positive) number of pages. \nLet's revert 7c877586da3 for now until we can find a proper way how the\nlogic in read_pages() and page_cache_ra_order() can coexist.  This can\nlead to reduced readahead throughput due to readahead window confusion but\nthat's better than outright hangs."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: Revertir \"readahead: acortar correctamente el readahead al volver a do_page_cache_ra()\" Esto revierte el commit 7c877586da3178974a8a94577b6045a48377ff25. Anders y Philippe han informado de que los kernels recientes a veces se bloquean cuando se utilizan con NFS en el c\u00f3digo readahead. El problema se ha dividido en 7c877586da3 (\"readahead: acortar correctamente el readahead al volver a do_page_cache_ra()\"). La causa del problema es que ra-&gt;size se puede reducir mediante la llamada read_pages() y, posteriormente, terminamos llamando a do_page_cache_ra() con un n\u00famero de p\u00e1ginas negativo (leer positivo enorme). Revertiremos 7c877586da3 por ahora hasta que podamos encontrar una forma adecuada de que la l\u00f3gica en read_pages() y page_cache_ra_order() pueda coexistir. Esto puede provocar una reducci\u00f3n del rendimiento de lectura anticipada debido a la confusi\u00f3n de la ventana de lectura anticipada, pero es mejor que los bloqueos directos."}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/85351e4941a253e4c50fb7048bfc19b60b4ec44b", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/a220d6b95b1ae12c7626283d7609f0a1438e6437", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {}, "configurations": {"CVE_data_version": "4.0", "nodes": []}}