{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2024-45817", "ASSIGNER": "security@xen.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "http://www.openwall.com/lists/oss-security/2024/09/24/1", "name": "http://www.openwall.com/lists/oss-security/2024/09/24/1", "refsource": "", "tags": []}, {"url": "http://xenbits.xen.org/xsa/advisory-462.html", "name": "http://xenbits.xen.org/xsa/advisory-462.html", "refsource": "", "tags": []}, {"url": "https://xenbits.xenproject.org/xsa/advisory-462.html", "name": "https://xenbits.xenproject.org/xsa/advisory-462.html", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In x86's APIC (Advanced Programmable Interrupt Controller) architecture,\nerror conditions are reported in a status register.  Furthermore, the OS\ncan opt to receive an interrupt when a new error occurs.\n\nIt is possible to configure the error interrupt with an illegal vector,\nwhich generates an error when an error interrupt is raised.\n\nThis case causes Xen to recurse through vlapic_error().  The recursion\nitself is bounded; errors accumulate in the the status register and only\ngenerate an interrupt when a new status bit becomes set.\n\nHowever, the lock protecting this state in Xen will try to be taken\nrecursively, and deadlock."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-09-25T11:15Z", "lastModifiedDate": "2024-11-21T09:38Z"}