{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2024-35951", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "http://www.openwall.com/lists/oss-security/2024/05/30/1", "name": "http://www.openwall.com/lists/oss-security/2024/05/30/1", "refsource": "", "tags": []}, {"url": "http://www.openwall.com/lists/oss-security/2024/05/30/2", "name": "http://www.openwall.com/lists/oss-security/2024/05/30/2", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/1fc9af813b25e146d3607669247d0f970f5a87c3", "name": "https://git.kernel.org/stable/c/1fc9af813b25e146d3607669247d0f970f5a87c3", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/1fc9af813b25e146d3607669247d0f970f5a87c3", "name": "https://git.kernel.org/stable/c/1fc9af813b25e146d3607669247d0f970f5a87c3", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/31806711e8a4b75e09b1c43652f2a6420e6e1002", "name": "https://git.kernel.org/stable/c/31806711e8a4b75e09b1c43652f2a6420e6e1002", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/31806711e8a4b75e09b1c43652f2a6420e6e1002", "name": "https://git.kernel.org/stable/c/31806711e8a4b75e09b1c43652f2a6420e6e1002", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/e18070c622c63f0cab170348e320454728c277aa", "name": "https://git.kernel.org/stable/c/e18070c622c63f0cab170348e320454728c277aa", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/e18070c622c63f0cab170348e320454728c277aa", "name": "https://git.kernel.org/stable/c/e18070c622c63f0cab170348e320454728c277aa", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/panfrost: Fix the error path in panfrost_mmu_map_fault_addr()\n\nSubject: [PATCH] drm/panfrost: Fix the error path in\n panfrost_mmu_map_fault_addr()\n\nIf some the pages or sgt allocation failed, we shouldn't release the\npages ref we got earlier, otherwise we will end up with unbalanced\nget/put_pages() calls. We should instead leave everything in place\nand let the BO release function deal with extra cleanup when the object\nis destroyed, or let the fault handler try again next time it's called."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-05-20T10:15Z", "lastModifiedDate": "2024-11-21T09:21Z"}