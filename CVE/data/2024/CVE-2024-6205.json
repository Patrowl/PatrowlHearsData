{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2024-6205", "ASSIGNER": "contact@wpscan.com"}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-89"}]}]}, "references": {"reference_data": [{"url": "https://wpscan.com/vulnerability/7e2c5032-2917-418c-aee3-092bdb78a087/", "name": "https://wpscan.com/vulnerability/7e2c5032-2917-418c-aee3-092bdb78a087/", "refsource": "", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://wpscan.com/vulnerability/7e2c5032-2917-418c-aee3-092bdb78a087/", "name": "https://wpscan.com/vulnerability/7e2c5032-2917-418c-aee3-092bdb78a087/", "refsource": "", "tags": ["Exploit", "Third Party Advisory"]}]}, "description": {"description_data": [{"lang": "en", "value": "The PayPlus Payment Gateway WordPress plugin before 6.6.9 does not properly sanitise and escape a parameter before using it in a SQL statement via a WooCommerce API route available to unauthenticated users, leading to an SQL injection vulnerability."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:a:payplus:payplus_payment_gateway:*:*:*:*:*:wordpress:*:*", "versionEndExcluding": "6.6.9", "cpe_name": []}]}]}, "impact": {"baseMetricV3": {"cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}}, "publishedDate": "2024-07-19T06:15Z", "lastModifiedDate": "2024-11-21T09:49Z"}