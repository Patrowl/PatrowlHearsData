{"publishedDate": "2024-05-21T10:15Z", "lastModifiedDate": "2024-11-21T09:42Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2024-4435", "ASSIGNER": "6b35d637-e00f-4228-858c-b20ad6e1d07b"}, "description": {"description_data": [{"lang": "en", "value": "When storing unbounded types in a BTreeMap, a node is represented as a linked list of \"memory chunks\". It was discovered recently that when we deallocate a node, in some cases only the first memory chunk is deallocated, and the rest of the memory chunks remain (incorrectly) allocated, causing a memory leak. In the worst case, depending on how a canister uses the BTreeMap, an adversary could interact with the canister through its API and trigger interactions with the map that keep consuming memory due to the memory leak. This could potentially lead to using an excessive amount of memory, or even running out of memory.\n\nThis issue has been fixed in  #212 https://github.com/dfinity/stable-structures/pull/212 \u00a0by changing the logic for deallocating nodes to ensure that all of a node's memory chunks are deallocated and users are asked to upgrade to version 0.6.4.. Tests have been added to prevent regressions of this nature moving forward. Note:\u00a0Users of stable-structure < 0.6.0 are not affected.\n\nUsers who are not storing unbounded types in BTreeMap\u00a0are not affected and do not need to upgrade. Otherwise, an upgrade to version 0.6.4\u00a0is necessary."}, {"lang": "es", "value": "Al almacenar tipos ilimitados en un BTreeMap, un nodo se representa como una lista vinculada de \"fragmentos de memoria\". Recientemente se descubri\u00f3 que cuando desasignamos un nodo, en algunos casos solo se desasigna el primer fragmento de memoria y el resto de los fragmentos de memoria permanecen (incorrectamente) asignados, lo que provoca una p\u00e9rdida de memoria. En el peor de los casos, dependiendo de c\u00f3mo un recipiente utilice BTreeMap, un adversario podr\u00eda interactuar con el recipiente a trav\u00e9s de su API y desencadenar interacciones con el mapa que sigan consumiendo memoria debido a la p\u00e9rdida de memoria. Esto podr\u00eda llevar potencialmente al uso de una cantidad excesiva de memoria o incluso a quedarse sin memoria. Este problema se solucion\u00f3 en el n.\u00ba 212 https://github.com/dfinity/stable-structures/pull/212 cambiando la l\u00f3gica para desasignar nodos para garantizar que todos los fragmentos de memoria de un nodo se desasignen y se solicite a los usuarios que actualicen a versi\u00f3n 0.6.4.. Se han agregado pruebas para evitar que avancen regresiones de esta naturaleza. Nota: Los usuarios de estructura estable &lt;0.6.0 no se ven afectados. Los usuarios que no almacenan tipos ilimitados en BTreeMap no se ven afectados y no necesitan actualizar. De lo contrario, es necesaria una actualizaci\u00f3n a la versi\u00f3n 0.6.4."}]}, "references": {"reference_data": [{"url": "https://docs.rs/ic-stable-structures/0.6.4/ic_stable_structures/", "name": "", "refsource": "", "tags": []}, {"url": "https://github.com/dfinity/stable-structures/pull/212", "name": "", "refsource": "", "tags": []}, {"url": "https://internetcomputer.org/docs/current/developer-docs/smart-contracts/maintain/storage#stable-memory", "name": "", "refsource": "", "tags": []}, {"url": "https://docs.rs/ic-stable-structures/0.6.4/ic_stable_structures/", "name": "", "refsource": "", "tags": []}, {"url": "https://github.com/dfinity/stable-structures/pull/212", "name": "", "refsource": "", "tags": []}, {"url": "https://internetcomputer.org/docs/current/developer-docs/smart-contracts/maintain/storage#stable-memory", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-401"}]}]}}, "impact": {"baseMetricV3": {"exploitabilityScore": 2.2, "impactScore": 3.6, "cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H", "baseScore": 5.9, "baseSeverity": "MEDIUM", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH"}}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}}