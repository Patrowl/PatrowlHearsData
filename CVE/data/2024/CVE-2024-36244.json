{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2024-36244", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/34d83c3e6e97867ae061d14eb52123404aab1cbc", "name": "https://git.kernel.org/stable/c/34d83c3e6e97867ae061d14eb52123404aab1cbc", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/91f249b01fe490fce11fbb4307952ca8cce78724", "name": "https://git.kernel.org/stable/c/91f249b01fe490fce11fbb4307952ca8cce78724", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/91f249b01fe490fce11fbb4307952ca8cce78724", "name": "https://git.kernel.org/stable/c/91f249b01fe490fce11fbb4307952ca8cce78724", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b939d1e04a90248b4cdf417b0969c270ceb992b2", "name": "https://git.kernel.org/stable/c/b939d1e04a90248b4cdf417b0969c270ceb992b2", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b939d1e04a90248b4cdf417b0969c270ceb992b2", "name": "https://git.kernel.org/stable/c/b939d1e04a90248b4cdf417b0969c270ceb992b2", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/fb66df20a7201e60f2b13d7f95d031b31a8831d3", "name": "https://git.kernel.org/stable/c/fb66df20a7201e60f2b13d7f95d031b31a8831d3", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/fb66df20a7201e60f2b13d7f95d031b31a8831d3", "name": "https://git.kernel.org/stable/c/fb66df20a7201e60f2b13d7f95d031b31a8831d3", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/sched: taprio: extend minimum interval restriction to entire cycle too\n\nIt is possible for syzbot to side-step the restriction imposed by the\nblamed commit in the Fixes: tag, because the taprio UAPI permits a\ncycle-time different from (and potentially shorter than) the sum of\nentry intervals.\n\nWe need one more restriction, which is that the cycle time itself must\nbe larger than N * ETH_ZLEN bit times, where N is the number of schedule\nentries. This restriction needs to apply regardless of whether the cycle\ntime came from the user or was the implicit, auto-calculated value, so\nwe move the existing \"cycle == 0\" check outside the \"if \"(!new->cycle_time)\"\nbranch. This way covers both conditions and scenarios.\n\nAdd a selftest which illustrates the issue triggered by syzbot."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-06-21T11:15Z", "lastModifiedDate": "2024-12-02T08:15Z"}