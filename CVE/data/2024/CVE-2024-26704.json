{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2024-26704", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/b4fbb89d722cbb16beaaea234b7230faaaf68c71", "name": "https://git.kernel.org/stable/c/b4fbb89d722cbb16beaaea234b7230faaaf68c71", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/afbcad9ae7d6d11608399188f03a837451b6b3a1", "name": "https://git.kernel.org/stable/c/afbcad9ae7d6d11608399188f03a837451b6b3a1", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/d033a555d9a1cf53dbf3301af7199cc4a4c8f537", "name": "https://git.kernel.org/stable/c/d033a555d9a1cf53dbf3301af7199cc4a4c8f537", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/afba9d11320dad5ce222ac8964caf64b7b4bedb1", "name": "https://git.kernel.org/stable/c/afba9d11320dad5ce222ac8964caf64b7b4bedb1", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/185eab30486ba3e7bf8b9c2e049c79a06ffd2bc1", "name": "https://git.kernel.org/stable/c/185eab30486ba3e7bf8b9c2e049c79a06ffd2bc1", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/2883940b19c38d5884c8626483811acf4d7e148f", "name": "https://git.kernel.org/stable/c/2883940b19c38d5884c8626483811acf4d7e148f", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/559ddacb90da1d8786dd8ec4fd76bbfa404eaef6", "name": "https://git.kernel.org/stable/c/559ddacb90da1d8786dd8ec4fd76bbfa404eaef6", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/55583e899a5357308274601364741a83e78d6ac4", "name": "https://git.kernel.org/stable/c/55583e899a5357308274601364741a83e78d6ac4", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix double-free of blocks due to wrong extents moved_len\n\nIn ext4_move_extents(), moved_len is only updated when all moves are\nsuccessfully executed, and only discards orig_inode and donor_inode\npreallocations when moved_len is not zero. When the loop fails to exit\nafter successfully moving some extents, moved_len is not updated and\nremains at 0, so it does not discard the preallocations.\n\nIf the moved extents overlap with the preallocated extents, the\noverlapped extents are freed twice in ext4_mb_release_inode_pa() and\next4_process_freed_data() (as described in commit 94d7c16cbbbd (\"ext4:\nFix double-free of blocks with EXT4_IOC_MOVE_EXT\")), and bb_free is\nincremented twice. Hence when trim is executed, a zero-division bug is\ntriggered in mb_update_avg_fragment_size() because bb_free is not zero\nand bb_fragments is zero.\n\nTherefore, update move_len after each extent move to avoid the issue."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-04-03T15:15Z", "lastModifiedDate": "2024-11-05T10:15Z"}