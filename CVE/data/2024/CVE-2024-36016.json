{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2024-36016", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/0fb736c9931e02dbc7d9a75044c8e1c039e50f04", "name": "https://git.kernel.org/stable/c/0fb736c9931e02dbc7d9a75044c8e1c039e50f04", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/0fb736c9931e02dbc7d9a75044c8e1c039e50f04", "name": "https://git.kernel.org/stable/c/0fb736c9931e02dbc7d9a75044c8e1c039e50f04", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/46f52c89a7e7d2691b97a9728e4591d071ca8abc", "name": "https://git.kernel.org/stable/c/46f52c89a7e7d2691b97a9728e4591d071ca8abc", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/46f52c89a7e7d2691b97a9728e4591d071ca8abc", "name": "https://git.kernel.org/stable/c/46f52c89a7e7d2691b97a9728e4591d071ca8abc", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/47388e807f85948eefc403a8a5fdc5b406a65d5a", "name": "https://git.kernel.org/stable/c/47388e807f85948eefc403a8a5fdc5b406a65d5a", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/47388e807f85948eefc403a8a5fdc5b406a65d5a", "name": "https://git.kernel.org/stable/c/47388e807f85948eefc403a8a5fdc5b406a65d5a", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/4c267110fc110390704cc065edb9817fdd10ff54", "name": "https://git.kernel.org/stable/c/4c267110fc110390704cc065edb9817fdd10ff54", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/4c267110fc110390704cc065edb9817fdd10ff54", "name": "https://git.kernel.org/stable/c/4c267110fc110390704cc065edb9817fdd10ff54", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/774d83b008eccb1c48c14dc5486e7aa255731350", "name": "https://git.kernel.org/stable/c/774d83b008eccb1c48c14dc5486e7aa255731350", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/774d83b008eccb1c48c14dc5486e7aa255731350", "name": "https://git.kernel.org/stable/c/774d83b008eccb1c48c14dc5486e7aa255731350", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/9513d4148950b05bc99fa7314dc883cc0e1605e5", "name": "https://git.kernel.org/stable/c/9513d4148950b05bc99fa7314dc883cc0e1605e5", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/9513d4148950b05bc99fa7314dc883cc0e1605e5", "name": "https://git.kernel.org/stable/c/9513d4148950b05bc99fa7314dc883cc0e1605e5", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b229bc6c6ea9fe459fc3fa94fd0a27a2f32aca56", "name": "https://git.kernel.org/stable/c/b229bc6c6ea9fe459fc3fa94fd0a27a2f32aca56", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b229bc6c6ea9fe459fc3fa94fd0a27a2f32aca56", "name": "https://git.kernel.org/stable/c/b229bc6c6ea9fe459fc3fa94fd0a27a2f32aca56", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b890d45aaf02b564e6cae2d2a590f9649330857d", "name": "https://git.kernel.org/stable/c/b890d45aaf02b564e6cae2d2a590f9649330857d", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b890d45aaf02b564e6cae2d2a590f9649330857d", "name": "https://git.kernel.org/stable/c/b890d45aaf02b564e6cae2d2a590f9649330857d", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/f126ce7305fe88f49cdabc6db4168b9318898ea3", "name": "https://git.kernel.org/stable/c/f126ce7305fe88f49cdabc6db4168b9318898ea3", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/f126ce7305fe88f49cdabc6db4168b9318898ea3", "name": "https://git.kernel.org/stable/c/f126ce7305fe88f49cdabc6db4168b9318898ea3", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\ntty: n_gsm: fix possible out-of-bounds in gsm0_receive()\n\nAssuming the following:\n- side A configures the n_gsm in basic option mode\n- side B sends the header of a basic option mode frame with data length 1\n- side A switches to advanced option mode\n- side B sends 2 data bytes which exceeds gsm->len\n  Reason: gsm->len is not used in advanced option mode.\n- side A switches to basic option mode\n- side B keeps sending until gsm0_receive() writes past gsm->buf\n  Reason: Neither gsm->state nor gsm->len have been reset after\n  reconfiguration.\n\nFix this by changing gsm->count to gsm->len comparison from equal to less\nthan. Also add upper limit checks against the constant MAX_MRU in\ngsm0_receive() and gsm1_receive() to harden against memory corruption of\ngsm->len and gsm->mru.\n\nAll other checks remain as we still need to limit the data according to the\nuser configuration and actual payload size."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-05-29T19:15Z", "lastModifiedDate": "2024-11-21T09:21Z"}