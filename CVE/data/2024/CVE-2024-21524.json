{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2024-21524", "ASSIGNER": "report@snyk.io"}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-125"}]}]}, "references": {"reference_data": [{"url": "https://gist.github.com/dellalibera/0bb022811224f81d998fa61c3175ee67", "name": "https://gist.github.com/dellalibera/0bb022811224f81d998fa61c3175ee67", "refsource": "", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://gist.github.com/dellalibera/0bb022811224f81d998fa61c3175ee67", "name": "https://gist.github.com/dellalibera/0bb022811224f81d998fa61c3175ee67", "refsource": "", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://github.com/magiclen/node-stringbuilder/blob/5c2797d3d6bf8cb6d10fe1e077609cef9a5a7de0/src/node-stringbuilder.c%23L1281", "name": "https://github.com/magiclen/node-stringbuilder/blob/5c2797d3d6bf8cb6d10fe1e077609cef9a5a7de0/src/node-stringbuilder.c%23L1281", "refsource": "", "tags": ["Broken Link"]}, {"url": "https://github.com/magiclen/node-stringbuilder/blob/5c2797d3d6bf8cb6d10fe1e077609cef9a5a7de0/src/node-stringbuilder.c%23L1281", "name": "https://github.com/magiclen/node-stringbuilder/blob/5c2797d3d6bf8cb6d10fe1e077609cef9a5a7de0/src/node-stringbuilder.c%23L1281", "refsource": "", "tags": ["Broken Link"]}, {"url": "https://security.snyk.io/vuln/SNYK-JS-NODESTRINGBUILDER-6421617", "name": "https://security.snyk.io/vuln/SNYK-JS-NODESTRINGBUILDER-6421617", "refsource": "", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://security.snyk.io/vuln/SNYK-JS-NODESTRINGBUILDER-6421617", "name": "https://security.snyk.io/vuln/SNYK-JS-NODESTRINGBUILDER-6421617", "refsource": "", "tags": ["Exploit", "Third Party Advisory"]}]}, "description": {"description_data": [{"lang": "en", "value": "All versions of the package node-stringbuilder are vulnerable to Out-of-bounds Read due to incorrect memory length calculation, by calling ToBuffer, ToString, or CharAt on a StringBuilder object with a non-empty string value input. It's possible to return previously allocated memory, for example, by providing negative indexes, leading to an Information Disclosure."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:a:magiclen:stringbuilder:*:*:*:*:*:node.js:*:*", "versionEndIncluding": "2.2.7", "cpe_name": []}]}]}, "impact": {"baseMetricV3": {"cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 9.1, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.2}}, "publishedDate": "2024-07-10T05:15Z", "lastModifiedDate": "2024-11-21T08:54Z"}