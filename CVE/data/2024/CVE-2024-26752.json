{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2024-26752", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/0da15a70395182ee8cb75716baf00dddc0bea38d", "name": "https://git.kernel.org/stable/c/0da15a70395182ee8cb75716baf00dddc0bea38d", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/0da15a70395182ee8cb75716baf00dddc0bea38d", "name": "https://git.kernel.org/stable/c/0da15a70395182ee8cb75716baf00dddc0bea38d", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/13cd1daeea848614e585b2c6ecc11ca9c8ab2500", "name": "https://git.kernel.org/stable/c/13cd1daeea848614e585b2c6ecc11ca9c8ab2500", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/13cd1daeea848614e585b2c6ecc11ca9c8ab2500", "name": "https://git.kernel.org/stable/c/13cd1daeea848614e585b2c6ecc11ca9c8ab2500", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/359e54a93ab43d32ee1bff3c2f9f10cb9f6b6e79", "name": "https://git.kernel.org/stable/c/359e54a93ab43d32ee1bff3c2f9f10cb9f6b6e79", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/359e54a93ab43d32ee1bff3c2f9f10cb9f6b6e79", "name": "https://git.kernel.org/stable/c/359e54a93ab43d32ee1bff3c2f9f10cb9f6b6e79", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/4c3ce64bc9d36ca9164dd6c77ff144c121011aae", "name": "https://git.kernel.org/stable/c/4c3ce64bc9d36ca9164dd6c77ff144c121011aae", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/4c3ce64bc9d36ca9164dd6c77ff144c121011aae", "name": "https://git.kernel.org/stable/c/4c3ce64bc9d36ca9164dd6c77ff144c121011aae", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/804bd8650a3a2bf3432375f8c97d5049d845ce56", "name": "https://git.kernel.org/stable/c/804bd8650a3a2bf3432375f8c97d5049d845ce56", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/804bd8650a3a2bf3432375f8c97d5049d845ce56", "name": "https://git.kernel.org/stable/c/804bd8650a3a2bf3432375f8c97d5049d845ce56", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/83340c66b498e49353530e41542500fc8a4782d6", "name": "https://git.kernel.org/stable/c/83340c66b498e49353530e41542500fc8a4782d6", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/83340c66b498e49353530e41542500fc8a4782d6", "name": "https://git.kernel.org/stable/c/83340c66b498e49353530e41542500fc8a4782d6", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/c1d3a84a67db910ce28a871273c992c3d7f9efb5", "name": "https://git.kernel.org/stable/c/c1d3a84a67db910ce28a871273c992c3d7f9efb5", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/c1d3a84a67db910ce28a871273c992c3d7f9efb5", "name": "https://git.kernel.org/stable/c/c1d3a84a67db910ce28a871273c992c3d7f9efb5", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/dcb4d14268595065c85dc5528056713928e17243", "name": "https://git.kernel.org/stable/c/dcb4d14268595065c85dc5528056713928e17243", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/dcb4d14268595065c85dc5528056713928e17243", "name": "https://git.kernel.org/stable/c/dcb4d14268595065c85dc5528056713928e17243", "refsource": "", "tags": []}, {"url": "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html", "name": "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html", "refsource": "", "tags": []}, {"url": "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html", "name": "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nl2tp: pass correct message length to ip6_append_data\n\nl2tp_ip6_sendmsg needs to avoid accounting for the transport header\ntwice when splicing more data into an already partially-occupied skbuff.\n\nTo manage this, we check whether the skbuff contains data using\nskb_queue_empty when deciding how much data to append using\nip6_append_data.\n\nHowever, the code which performed the calculation was incorrect:\n\n     ulen = len + skb_queue_empty(&sk->sk_write_queue) ? transhdrlen : 0;\n\n...due to C operator precedence, this ends up setting ulen to\ntranshdrlen for messages with a non-zero length, which results in\ncorrupted packets on the wire.\n\nAdd parentheses to correct the calculation in line with the original\nintent."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-04-03T17:15Z", "lastModifiedDate": "2024-11-21T09:02Z"}