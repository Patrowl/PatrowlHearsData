{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2024-42265", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/08775b3d6ed117cf4518754ec7300ee42b6a5368", "name": "https://git.kernel.org/stable/c/08775b3d6ed117cf4518754ec7300ee42b6a5368", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/1171ceccabfd596ca370c5d2cbb47d110c3f2fe1", "name": "https://git.kernel.org/stable/c/1171ceccabfd596ca370c5d2cbb47d110c3f2fe1", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/3f480493550b6a23d3a65d095d6569d4a7f56a0f", "name": "https://git.kernel.org/stable/c/3f480493550b6a23d3a65d095d6569d4a7f56a0f", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/41a6c31df77bd8e050136b0a200b537da9e1084a", "name": "https://git.kernel.org/stable/c/41a6c31df77bd8e050136b0a200b537da9e1084a", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/5db999fff545b924b24c9afd368ef5c17279b176", "name": "https://git.kernel.org/stable/c/5db999fff545b924b24c9afd368ef5c17279b176", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/8aa37bde1a7b645816cda8b80df4753ecf172bf1", "name": "https://git.kernel.org/stable/c/8aa37bde1a7b645816cda8b80df4753ecf172bf1", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/da72e783afd27d9f487836b2e6738146c0edd149", "name": "https://git.kernel.org/stable/c/da72e783afd27d9f487836b2e6738146c0edd149", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/ed42e8ff509d2a61c6642d1825032072dab79f26", "name": "https://git.kernel.org/stable/c/ed42e8ff509d2a61c6642d1825032072dab79f26", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nprotect the fetch of ->fd[fd] in do_dup2() from mispredictions\n\nboth callers have verified that fd is not greater than ->max_fds;\nhowever, misprediction might end up with\n        tofree = fdt->fd[fd];\nbeing speculatively executed.  That's wrong for the same reasons\nwhy it's wrong in close_fd()/file_close_fd_locked(); the same\nsolution applies - array_index_nospec(fd, fdt->max_fds) could differ\nfrom fd only in case of speculative execution on mispredicted path."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-08-17T09:15Z", "lastModifiedDate": "2024-08-19T12:59Z"}