{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2024-21502", "ASSIGNER": "report@snyk.io"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://gist.github.com/keltecc/49da037072276f21b005a8337c15db26", "name": "https://gist.github.com/keltecc/49da037072276f21b005a8337c15db26", "refsource": "", "tags": []}, {"url": "https://gist.github.com/keltecc/49da037072276f21b005a8337c15db26", "name": "https://gist.github.com/keltecc/49da037072276f21b005a8337c15db26", "refsource": "", "tags": []}, {"url": "https://github.com/AntonKueltz/fastecdsa/blob/v2.3.1/src/curveMath.c%23L210", "name": "https://github.com/AntonKueltz/fastecdsa/blob/v2.3.1/src/curveMath.c%23L210", "refsource": "", "tags": []}, {"url": "https://github.com/AntonKueltz/fastecdsa/blob/v2.3.1/src/curveMath.c%23L210", "name": "https://github.com/AntonKueltz/fastecdsa/blob/v2.3.1/src/curveMath.c%23L210", "refsource": "", "tags": []}, {"url": "https://github.com/AntonKueltz/fastecdsa/commit/57fc5689c95d649dab7ef60cc99ac64589f01e36", "name": "https://github.com/AntonKueltz/fastecdsa/commit/57fc5689c95d649dab7ef60cc99ac64589f01e36", "refsource": "", "tags": []}, {"url": "https://github.com/AntonKueltz/fastecdsa/commit/57fc5689c95d649dab7ef60cc99ac64589f01e36", "name": "https://github.com/AntonKueltz/fastecdsa/commit/57fc5689c95d649dab7ef60cc99ac64589f01e36", "refsource": "", "tags": []}, {"url": "https://security.snyk.io/vuln/SNYK-PYTHON-FASTECDSA-6262045", "name": "https://security.snyk.io/vuln/SNYK-PYTHON-FASTECDSA-6262045", "refsource": "", "tags": []}, {"url": "https://security.snyk.io/vuln/SNYK-PYTHON-FASTECDSA-6262045", "name": "https://security.snyk.io/vuln/SNYK-PYTHON-FASTECDSA-6262045", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "Versions of the package fastecdsa before 2.3.2 are vulnerable to Use of Uninitialized Variable on the stack, via the curvemath_mul function in src/curveMath.c, due to being used and interpreted as user-defined type. Depending on the variable's actual value it could be arbitrary free(), arbitrary realloc(), null pointer dereference and other. Since the stack can be controlled by the attacker, the vulnerability could be used to corrupt allocator structure, leading to possible heap exploitation. The attacker could cause denial of service by exploiting this vulnerability."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-02-24T05:15Z", "lastModifiedDate": "2024-11-21T08:54Z"}