{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2024-27281", "ASSIGNER": "cve@mitre.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://hackerone.com/reports/1187477", "name": "https://hackerone.com/reports/1187477", "refsource": "", "tags": []}, {"url": "https://hackerone.com/reports/1187477", "name": "https://hackerone.com/reports/1187477", "refsource": "", "tags": []}, {"url": "https://www.ruby-lang.org/en/news/2024/03/21/rce-rdoc-cve-2024-27281/", "name": "https://www.ruby-lang.org/en/news/2024/03/21/rce-rdoc-cve-2024-27281/", "refsource": "", "tags": []}, {"url": "https://www.ruby-lang.org/en/news/2024/03/21/rce-rdoc-cve-2024-27281/", "name": "https://www.ruby-lang.org/en/news/2024/03/21/rce-rdoc-cve-2024-27281/", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "An issue was discovered in RDoc 6.3.3 through 6.6.2, as distributed in Ruby 3.x through 3.3.0. When parsing .rdoc_options (used for configuration in RDoc) as a YAML file, object injection and resultant remote code execution are possible because there are no restrictions on the classes that can be restored. (When loading the documentation cache, object injection and resultant remote code execution are also possible if there were a crafted cache.) The main fixed version is 6.6.3.1. For Ruby 3.0 users, a fixed version is rdoc 6.3.4.1. For Ruby 3.1 users, a fixed version is rdoc 6.4.1.1. For Ruby 3.2 users, a fixed version is rdoc 6.5.1.1."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-05-14T15:11Z", "lastModifiedDate": "2024-11-21T09:04Z"}