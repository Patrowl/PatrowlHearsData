{"publishedDate": "2024-06-24T14:15Z", "lastModifiedDate": "2025-02-03T15:56Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2024-37021", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nfpga: manager: add owner module and take its refcount\n\nThe current implementation of the fpga manager assumes that the low-level\nmodule registers a driver for the parent device and uses its owner pointer\nto take the module's refcount. This approach is problematic since it can\nlead to a null pointer dereference while attempting to get the manager if\nthe parent device does not have a driver.\n\nTo address this problem, add a module owner pointer to the fpga_manager\nstruct and use it to take the module's refcount. Modify the functions for\nregistering the manager to take an additional owner module parameter and\nrename them to avoid conflicts. Use the old function names for helper\nmacros that automatically set the module that registers the manager as the\nowner. This ensures compatibility with existing low-level control modules\nand reduces the chances of registering a manager without setting the owner.\n\nAlso, update the documentation to keep it consistent with the new interface\nfor registering an fpga manager.\n\nOther changes: opportunistically move put_device() from __fpga_mgr_get() to\nfpga_mgr_get() and of_fpga_mgr_get() to improve code clarity since the\nmanager device is taken in these functions."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: fpga: manager: agrega el m\u00f3dulo propietario y toma su recuento. La implementaci\u00f3n actual del administrador fpga supone que el m\u00f3dulo de bajo nivel registra un controlador para el dispositivo principal y usa su puntero de propietario para tomar el recuento del m\u00f3dulo. Este enfoque es problem\u00e1tico ya que puede provocar una desreferencia del puntero nulo al intentar obtener el administrador si el dispositivo principal no tiene un controlador. Para solucionar este problema, agregue un puntero de propietario de m\u00f3dulo a la estructura fpga_manager y util\u00edcelo para tomar el recuento del m\u00f3dulo. Modifique las funciones para registrar el administrador para tomar un par\u00e1metro de m\u00f3dulo de propietario adicional y cambiarles el nombre para evitar conflictos. Utilice los nombres de funciones antiguos para las macros auxiliares que configuran autom\u00e1ticamente el m\u00f3dulo que registra al administrador como propietario. Esto garantiza la compatibilidad con los m\u00f3dulos de control de bajo nivel existentes y reduce las posibilidades de registrar un administrador sin configurar el propietario. Adem\u00e1s, actualice la documentaci\u00f3n para que sea coherente con la nueva interfaz para registrar un administrador fpga. Otros cambios: mueva de manera oportunista put_device() de __fpga_mgr_get() a fpga_mgr_get() y of_fpga_mgr_get() para mejorar la claridad del c\u00f3digo ya que el dispositivo administrador se toma en estas funciones."}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/2da62a139a6221a345db4eb9f4f1c4b0937c89ad", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/304f8032d601d4f9322ca841cd0b573bd1beb158", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/4d4d2d4346857bf778fafaa97d6f76bb1663e3c9", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/62ac496a01c9337a11362cea427038ba621ca9eb", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/2da62a139a6221a345db4eb9f4f1c4b0937c89ad", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/4d4d2d4346857bf778fafaa97d6f76bb1663e3c9", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/62ac496a01c9337a11362cea427038ba621ca9eb", "name": "", "refsource": "", "tags": ["Patch"]}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-476"}]}]}}, "impact": {"baseMetricV3": {"exploitabilityScore": 1.8, "impactScore": 3.6, "cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H", "baseScore": 5.5, "baseSeverity": "MEDIUM", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH"}}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "negate": false, "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "matchCriteriaId": "BC5E1FF4-1AD6-435F-87DB-9B0226341E24", "cpe_name": [], "versionStartIncluding": "4.4", "versionEndExcluding": "6.1.120"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "matchCriteriaId": "FCE796DF-3B50-4DC6-BAE5-95271068FC9E", "cpe_name": [], "versionStartIncluding": "6.2", "versionEndExcluding": "6.6.33"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "matchCriteriaId": "991B9791-966A-4D18-9E8D-A8AB128E5627", "cpe_name": [], "versionStartIncluding": "6.7", "versionEndExcluding": "6.9.4"}]}]}}