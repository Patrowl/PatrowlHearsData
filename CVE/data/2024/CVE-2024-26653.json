{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2024-26653", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/420babea4f1881a7c4ea22a8e218b8c6895d3f21", "name": "https://git.kernel.org/stable/c/420babea4f1881a7c4ea22a8e218b8c6895d3f21", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/420babea4f1881a7c4ea22a8e218b8c6895d3f21", "name": "https://git.kernel.org/stable/c/420babea4f1881a7c4ea22a8e218b8c6895d3f21", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/7c9631969287a5366bc8e39cd5abff154b35fb80", "name": "https://git.kernel.org/stable/c/7c9631969287a5366bc8e39cd5abff154b35fb80", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/7c9631969287a5366bc8e39cd5abff154b35fb80", "name": "https://git.kernel.org/stable/c/7c9631969287a5366bc8e39cd5abff154b35fb80", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/8a9f653cc852677003c23ee8075e3ed8fb4743c9", "name": "https://git.kernel.org/stable/c/8a9f653cc852677003c23ee8075e3ed8fb4743c9", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/8a9f653cc852677003c23ee8075e3ed8fb4743c9", "name": "https://git.kernel.org/stable/c/8a9f653cc852677003c23ee8075e3ed8fb4743c9", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: misc: ljca: Fix double free in error handling path\n\nWhen auxiliary_device_add() returns error and then calls\nauxiliary_device_uninit(), callback function ljca_auxdev_release\ncalls kfree(auxdev->dev.platform_data) to free the parameter data\nof the function ljca_new_client_device. The callers of\nljca_new_client_device shouldn't call kfree() again\nin the error handling path to free the platform data.\n\nFix this by cleaning up the redundant kfree() in all callers and\nadding kfree() the passed in platform_data on errors which happen\nbefore auxiliary_device_init() succeeds ."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-04-01T09:15Z", "lastModifiedDate": "2024-11-21T09:02Z"}