{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2024-38604", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/0c12028aec837f5a002009bbf68d179d506510e8", "name": "https://git.kernel.org/stable/c/0c12028aec837f5a002009bbf68d179d506510e8", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/0c12028aec837f5a002009bbf68d179d506510e8", "name": "https://git.kernel.org/stable/c/0c12028aec837f5a002009bbf68d179d506510e8", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/10b723bcba8986537a484aa94dbfc9093fd776a1", "name": "https://git.kernel.org/stable/c/10b723bcba8986537a484aa94dbfc9093fd776a1", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/10b723bcba8986537a484aa94dbfc9093fd776a1", "name": "https://git.kernel.org/stable/c/10b723bcba8986537a484aa94dbfc9093fd776a1", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/72c54e063c32aeb38d43a2bd897821e6e5a1757d", "name": "https://git.kernel.org/stable/c/72c54e063c32aeb38d43a2bd897821e6e5a1757d", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/72c54e063c32aeb38d43a2bd897821e6e5a1757d", "name": "https://git.kernel.org/stable/c/72c54e063c32aeb38d43a2bd897821e6e5a1757d", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/910717920c8c3f9386277a44c44d448058a18084", "name": "https://git.kernel.org/stable/c/910717920c8c3f9386277a44c44d448058a18084", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/910717920c8c3f9386277a44c44d448058a18084", "name": "https://git.kernel.org/stable/c/910717920c8c3f9386277a44c44d448058a18084", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nblock: refine the EOF check in blkdev_iomap_begin\n\nblkdev_iomap_begin rounds down the offset to the logical block size\nbefore stashing it in iomap->offset and checking that it still is\ninside the inode size.\n\nCheck the i_size check to the raw pos value so that we don't try a\nzero size write if iter->pos is unaligned."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-06-19T14:15Z", "lastModifiedDate": "2024-11-21T09:26Z"}