{"publishedDate": "2025-01-11T15:15Z", "lastModifiedDate": "2025-09-26T20:19Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2024-57849", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/cpum_sf: Handle CPU hotplug remove during sampling\n\nCPU hotplug remove handling triggers the following function\ncall sequence:\n\n   CPUHP_AP_PERF_S390_SF_ONLINE  --> s390_pmu_sf_offline_cpu()\n   ...\n   CPUHP_AP_PERF_ONLINE          --> perf_event_exit_cpu()\n\nThe s390 CPUMF sampling CPU hotplug handler invokes:\n\n s390_pmu_sf_offline_cpu()\n +-->  cpusf_pmu_setup()\n       +--> setup_pmc_cpu()\n            +--> deallocate_buffers()\n\nThis function de-allocates all sampling data buffers (SDBs) allocated\nfor that CPU at event initialization. It also clears the\nPMU_F_RESERVED bit. The CPU is gone and can not be sampled.\n\nWith the event still being active on the removed CPU, the CPU event\nhotplug support in kernel performance subsystem triggers the\nfollowing function calls on the removed CPU:\n\n  perf_event_exit_cpu()\n  +--> perf_event_exit_cpu_context()\n       +--> __perf_event_exit_context()\n\t    +--> __perf_remove_from_context()\n\t         +--> event_sched_out()\n\t              +--> cpumsf_pmu_del()\n\t                   +--> cpumsf_pmu_stop()\n                                +--> hw_perf_event_update()\n\nto stop and remove the event. During removal of the event, the\nsampling device driver tries to read out the remaining samples from\nthe sample data buffers (SDBs). But they have already been freed\n(and may have been re-assigned). This may lead to a use after free\nsituation in which case the samples are most likely invalid. In the\nbest case the memory has not been reassigned and still contains\nvalid data.\n\nRemedy this situation and check if the CPU is still in reserved\nstate (bit PMU_F_RESERVED set). In this case the SDBs have not been\nreleased an contain valid data. This is always the case when\nthe event is removed (and no CPU hotplug off occured).\nIf the PMU_F_RESERVED bit is not set, the SDB buffers are gone."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: s390/cpum_sf: Controlar la eliminaci\u00f3n de hotplug de la CPU durante el muestreo la gesti\u00f3n de la eliminaci\u00f3n de hotplug de la CPU activa la siguiente secuencia de llamada de funci\u00f3n: CPUHP_AP_PERF_S390_SF_ONLINE --&gt; s390_pmu_sf_offline_cpu() ... CPUHP_AP_PERF_ONLINE --&gt; perf_event_exit_cpu() El controlador de hotplug de la CPU de muestreo s390 CPUMF invoca: s390_pmu_sf_offline_cpu() +--&gt; cpusf_pmu_setup() +--&gt; setup_pmc_cpu() +--&gt; deallocate_buffers() Esta funci\u00f3n anula la asignaci\u00f3n de todos los b\u00faferes de datos de muestreo (SDB) asignados para esa CPU en la inicializaci\u00f3n del evento. Tambi\u00e9n borra el bit PMU_F_RESERVED. La CPU desaparece y no se puede muestrear. Mientras el evento sigue activo en la CPU eliminada, la compatibilidad con hot plug de eventos de CPU en el subsistema de rendimiento del n\u00facleo activa las siguientes llamadas de funci\u00f3n en la CPU eliminada: perf_event_exit_cpu() +--&gt; perf_event_exit_cpu_context() +--&gt; __perf_event_exit_context() +--&gt; __perf_remove_from_context() +--&gt; event_sched_out() +--&gt; cpumsf_pmu_del() +--&gt; cpumsf_pmu_stop() +--&gt; hw_perf_event_update() para detener y eliminar el evento. Durante la eliminaci\u00f3n del evento, el controlador del dispositivo de muestreo intenta leer las muestras restantes de los b\u00faferes de datos de muestra (SDB). Pero ya se han liberado (y es posible que se hayan reasignado). Esto puede provocar una situaci\u00f3n de use after free, en cuyo caso es muy probable que las muestras no sean v\u00e1lidas. En el mejor de los casos, la memoria no se ha reasignado y a\u00fan contiene datos v\u00e1lidos. Solucione esta situaci\u00f3n y compruebe si la CPU sigue en estado reservado (bit PMU_F_RESERVED activado). En este caso, los SDB no se han liberado y contienen datos v\u00e1lidos. Esto siempre ocurre cuando se elimina el evento (y no se ha producido ninguna desconexi\u00f3n en caliente de la CPU). Si el bit PMU_F_RESERVED no est\u00e1 activado, los b\u00faferes SDB desaparecen."}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/06a92f810df8037ca36157282ddcbefdcaf049b8", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/238e3af849dfdcb1faed544349f7025e533f9aab", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/99192c735ed4bfdff0d215ec85c8a87a677cb898", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/a0bd7dacbd51c632b8e2c0500b479af564afadf3", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/a69752f1e5de817941a2ea0609254f6f25acd274", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/b5be6a0bb639d165c8418d8dddd8f322587be8be", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/be54e6e0f93a39a9c00478d70d12956a5f3d5b9b", "name": "", "refsource": "", "tags": ["Patch"]}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-416"}]}]}}, "impact": {"baseMetricV3": {"exploitabilityScore": 1.8, "impactScore": 5.9, "cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "baseScore": 7.8, "baseSeverity": "HIGH", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH"}}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "negate": false, "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "matchCriteriaId": "DC7D5C80-B677-4131-A399-3366D7F3961C", "cpe_name": [], "versionEndExcluding": "5.4.287"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "matchCriteriaId": "B5C644CC-2BD7-4E32-BC54-8DCC7ABE9935", "cpe_name": [], "versionStartIncluding": "5.5", "versionEndExcluding": "5.10.231"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "matchCriteriaId": "419FD073-1517-4FD5-8158-F94BC68A1E89", "cpe_name": [], "versionStartIncluding": "5.11", "versionEndExcluding": "5.15.174"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "matchCriteriaId": "09AC6122-E2A4-40FE-9D33-268A1B2EC265", "cpe_name": [], "versionStartIncluding": "5.16", "versionEndExcluding": "6.1.120"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "matchCriteriaId": "29A976AD-B9AB-4A95-9F08-7669F8847EB9", "cpe_name": [], "versionStartIncluding": "6.2", "versionEndExcluding": "6.6.66"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "matchCriteriaId": "9501D045-7A94-42CA-8B03-821BE94A65B7", "cpe_name": [], "versionStartIncluding": "6.7", "versionEndExcluding": "6.12.5"}]}]}}