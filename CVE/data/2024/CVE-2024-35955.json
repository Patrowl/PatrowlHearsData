{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2024-35955", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/2df2dd27066cdba8041e46a64362325626bdfb2e", "name": "https://git.kernel.org/stable/c/2df2dd27066cdba8041e46a64362325626bdfb2e", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/2df2dd27066cdba8041e46a64362325626bdfb2e", "name": "https://git.kernel.org/stable/c/2df2dd27066cdba8041e46a64362325626bdfb2e", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/325f3fb551f8cd672dbbfc4cf58b14f9ee3fc9e8", "name": "https://git.kernel.org/stable/c/325f3fb551f8cd672dbbfc4cf58b14f9ee3fc9e8", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/325f3fb551f8cd672dbbfc4cf58b14f9ee3fc9e8", "name": "https://git.kernel.org/stable/c/325f3fb551f8cd672dbbfc4cf58b14f9ee3fc9e8", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/36b57c7d2f8b7de224980f1a284432846ad71ca0", "name": "https://git.kernel.org/stable/c/36b57c7d2f8b7de224980f1a284432846ad71ca0", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/36b57c7d2f8b7de224980f1a284432846ad71ca0", "name": "https://git.kernel.org/stable/c/36b57c7d2f8b7de224980f1a284432846ad71ca0", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/5062d1f4f07facbdade0f402d9a04a788f52e26d", "name": "https://git.kernel.org/stable/c/5062d1f4f07facbdade0f402d9a04a788f52e26d", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/5062d1f4f07facbdade0f402d9a04a788f52e26d", "name": "https://git.kernel.org/stable/c/5062d1f4f07facbdade0f402d9a04a788f52e26d", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/62029bc9ff2c17a4e3a2478d83418ec575413808", "name": "https://git.kernel.org/stable/c/62029bc9ff2c17a4e3a2478d83418ec575413808", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/62029bc9ff2c17a4e3a2478d83418ec575413808", "name": "https://git.kernel.org/stable/c/62029bc9ff2c17a4e3a2478d83418ec575413808", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/93eb31e7c3399e326259f2caa17be1e821f5a412", "name": "https://git.kernel.org/stable/c/93eb31e7c3399e326259f2caa17be1e821f5a412", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/93eb31e7c3399e326259f2caa17be1e821f5a412", "name": "https://git.kernel.org/stable/c/93eb31e7c3399e326259f2caa17be1e821f5a412", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b5808d40093403334d939e2c3c417144d12a6f33", "name": "https://git.kernel.org/stable/c/b5808d40093403334d939e2c3c417144d12a6f33", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b5808d40093403334d939e2c3c417144d12a6f33", "name": "https://git.kernel.org/stable/c/b5808d40093403334d939e2c3c417144d12a6f33", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/d15023fb407337028a654237d8968fefdcf87c2f", "name": "https://git.kernel.org/stable/c/d15023fb407337028a654237d8968fefdcf87c2f", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/d15023fb407337028a654237d8968fefdcf87c2f", "name": "https://git.kernel.org/stable/c/d15023fb407337028a654237d8968fefdcf87c2f", "refsource": "", "tags": []}, {"url": "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html", "name": "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html", "refsource": "", "tags": []}, {"url": "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html", "name": "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nkprobes: Fix possible use-after-free issue on kprobe registration\n\nWhen unloading a module, its state is changing MODULE_STATE_LIVE ->\n MODULE_STATE_GOING -> MODULE_STATE_UNFORMED. Each change will take\na time. `is_module_text_address()` and `__module_text_address()`\nworks with MODULE_STATE_LIVE and MODULE_STATE_GOING.\nIf we use `is_module_text_address()` and `__module_text_address()`\nseparately, there is a chance that the first one is succeeded but the\nnext one is failed because module->state becomes MODULE_STATE_UNFORMED\nbetween those operations.\n\nIn `check_kprobe_address_safe()`, if the second `__module_text_address()`\nis failed, that is ignored because it expected a kernel_text address.\nBut it may have failed simply because module->state has been changed\nto MODULE_STATE_UNFORMED. In this case, arm_kprobe() will try to modify\nnon-exist module text address (use-after-free).\n\nTo fix this problem, we should not use separated `is_module_text_address()`\nand `__module_text_address()`, but use only `__module_text_address()`\nonce and do `try_module_get(module)` which is only available with\nMODULE_STATE_LIVE."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-05-20T10:15Z", "lastModifiedDate": "2024-11-21T09:21Z"}