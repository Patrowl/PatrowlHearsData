{"publishedDate": "2024-12-25T10:15Z", "lastModifiedDate": "2025-02-12T10:15Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2024-52046", "ASSIGNER": "security@apache.org"}, "description": {"description_data": [{"lang": "en", "value": "The ObjectSerializationDecoder in Apache MINA uses Java\u2019s native deserialization protocol to process\nincoming serialized data but lacks the necessary security checks and defenses. This vulnerability allows\nattackers to exploit the deserialization process by sending specially crafted malicious serialized data,\npotentially leading to remote code execution (RCE) attacks.\n\n\n\n\t\t\t\t\t\n\n\n\t\t\t\t\n\n\n\t\t\t\n\n\n\t\t\n\n\n\t\nThis issue affects MINA core versions 2.0.X, 2.1.X and 2.2.X, and will be fixed by the releases 2.0.27, 2.1.10 and 2.2.4.\n\n\n\n\n\nIt's also important to note that an application using MINA core library will only be affected if the IoBuffer#getObject() method is called, and this specific method is potentially called when adding a ProtocolCodecFilter instance using the ObjectSerializationCodecFactory class in the filter chain. If your application is specifically using those classes, you have to upgrade to the latest version of MINA core library.\n\n\n\n\nUpgrading will\u00a0 not be enough: you also need to explicitly allow the classes the decoder will accept in the ObjectSerializationDecoder instance, using one of the three new methods:\n\n\n\n\n    /**\n\n\u00a0 \u00a0\u00a0 * Accept class names where the supplied ClassNameMatcher matches for\n\n     * deserialization, unless they are otherwise rejected.\n\n     *\n\n     * @param classNameMatcher the matcher to use\n\n     */\n\n    public void accept(ClassNameMatcher classNameMatcher)\n\n\n\n\n    /**\n\n     * Accept class names that match the supplied pattern for\n\n     * deserialization, unless they are otherwise rejected.\n\n     *\n\n     * @param pattern standard Java regexp\n\n     */\n\n    public void accept(Pattern pattern) \n\n\n\n\n\n    /**\n\n     * Accept the wildcard specified classes for deserialization,\n\n     * unless they are otherwise rejected.\n\n     *\n\n     * @param patterns Wildcard file name patterns as defined by\n\n     *                  {@link org.apache.commons.io.FilenameUtils#wildcardMatch(String, String) FilenameUtils.wildcardMatch}\n\n     */\n\n    public void accept(String... patterns)\n\n\n\n\n\n\n\nBy default, the decoder will reject *all* classes that will be present in the incoming data.\n\n\n\n\n\n\n\nNote: The FtpServer, SSHd and Vysper sub-project are not affected by this issue."}, {"lang": "es", "value": "ObjectSerializationDecoder en Apache MINA utiliza el protocolo de deserializaci\u00f3n nativo de Java para procesar datos serializados entrantes, pero carece de las defensas y controles de seguridad necesarios. Esta vulnerabilidad permite a los atacantes aprovechar el proceso de deserializaci\u00f3n enviando datos serializados maliciosos especialmente manipulados, lo que podr\u00eda provocar ataques de ejecuci\u00f3n remota de c\u00f3digo (RCE). Este problema afecta a las versiones principales de MINA 2.0.X, 2.1.X y 2.2.X y se solucionar\u00e1 con las versiones 2.0.27, 2.1.10 y 2.2.4. Tambi\u00e9n es importante tener en cuenta que una aplicaci\u00f3n que utiliza la librer\u00eda central MINA solo se ver\u00e1 afectada si se llama al m\u00e9todo IoBuffer#getObject(), y este m\u00e9todo espec\u00edfico se llama potencialmente al agregar una instancia de ProtocolCodecFilter usando la clase ObjectSerializationCodecFactory en la cadena de filtros. Si su aplicaci\u00f3n utiliza espec\u00edficamente esas clases, debe actualizar a la \u00faltima versi\u00f3n de la librer\u00eda principal de MINA. La actualizaci\u00f3n no ser\u00e1 suficiente: tambi\u00e9n necesitar\u00e1 permitir expl\u00edcitamente las clases que el descodificador aceptar\u00e1 en la instancia de ObjectSerializationDecoder, usando uno de los tres nuevos m\u00e9todos: /** * Aceptar nombres de clase donde el ClassNameMatcher suministrado coincida para * la deserializaci\u00f3n, a menos que sean de lo contrario rechazado. * * @param classNameMatcher el comparador a usar */ public void Accept(ClassNameMatcher classNameMatcher) /** * Acepta nombres de clase que coincidan con el patr\u00f3n proporcionado para * la deserializaci\u00f3n, a menos que se rechacen de otra manera. * * @param patr\u00f3n est\u00e1ndar Java regexp */ public void aceptar(Patr\u00f3n de patr\u00f3n) /** * Acepte las clases especificadas como comod\u00edn para la deserializaci\u00f3n, * a menos que se rechacen de otra manera. * * @param patrones Patrones de nombres de archivos comod\u00edn definidos por * {@link org.apache.commons.io.FilenameUtils#wildcardMatch(String, String) FilenameUtils.wildcardMatch} */ public void Accept(String... patrones) De forma predeterminada , el decodificador rechazar\u00e1 *todas* las clases que estar\u00e1n presentes en los datos entrantes. Nota: Los subproyectos FtpServer, SSHd y Vysper no se ven afectados por este problema."}]}, "references": {"reference_data": [{"url": "https://lists.apache.org/thread/4wxktgjpggdbto15d515wdctohb0qmv8", "name": "", "refsource": "", "tags": ["Mailing List"]}, {"url": "http://www.openwall.com/lists/oss-security/2024/12/25/1", "name": "", "refsource": "", "tags": ["Mailing List"]}, {"url": "https://security.netapp.com/advisory/ntap-20250103-0001/", "name": "", "refsource": "", "tags": ["Third Party Advisory"]}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-502"}]}]}}, "impact": {"baseMetricV3": {"exploitabilityScore": 3.9, "impactScore": 5.9, "cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "baseScore": 9.8, "baseSeverity": "CRITICAL", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH"}}, "baseMetricV4": {"cvssV4": {"version": "4.0", "vectorString": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:H/SC:H/SI:H/SA:H/E:X/CR:X/IR:X/AR:X/MAV:X/MAC:X/MAT:X/MPR:X/MUI:X/MVC:X/MVI:X/MVA:X/MSC:X/MSI:X/MSA:X/S:X/AU:X/R:X/V:X/RE:X/U:X", "baseScore": 10.0, "baseSeverity": "CRITICAL", "attackVector": "NETWORK", "attackComplexity": "LOW", "attackRequirements": "NONE", "privilegesRequired": "NONE", "userInteraction": "NONE", "vulnConfidentialityImpact": "HIGH", "vulnIntegrityImpact": "HIGH", "vulnAvailabilityImpact": "HIGH", "subConfidentialityImpact": "HIGH", "subIntegrityImpact": "HIGH", "subAvailabilityImpact": "HIGH", "exploitMaturity": "NOT_DEFINED", "confidentialityRequirement": "NOT_DEFINED", "integrityRequirement": "NOT_DEFINED", "availabilityRequirement": "NOT_DEFINED", "modifiedAttackVector": "NOT_DEFINED", "modifiedAttackComplexity": "NOT_DEFINED", "modifiedAttackRequirements": "NOT_DEFINED", "modifiedPrivilegesRequired": "NOT_DEFINED", "modifiedUserInteraction": "NOT_DEFINED", "modifiedVulnConfidentialityImpact": "NOT_DEFINED", "modifiedVulnIntegrityImpact": "NOT_DEFINED", "modifiedVulnAvailabilityImpact": "NOT_DEFINED", "modifiedSubConfidentialityImpact": "NOT_DEFINED", "modifiedSubIntegrityImpact": "NOT_DEFINED", "modifiedSubAvailabilityImpact": "NOT_DEFINED", "Safety": "NOT_DEFINED", "Automatable": "NOT_DEFINED", "Recovery": "NOT_DEFINED", "valueDensity": "NOT_DEFINED", "vulnerabilityResponseEffort": "NOT_DEFINED", "providerUrgency": "NOT_DEFINED"}}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "negate": false, "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:a:apache:mina:*:*:*:*:*:*:*:*", "matchCriteriaId": "F82D7D4E-546B-41CC-8B5B-8456319E2FB0", "cpe_name": [], "versionStartIncluding": "2.0.0", "versionEndExcluding": "2.0.27"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:a:apache:mina:*:*:*:*:*:*:*:*", "matchCriteriaId": "9EC85FF7-169C-418D-86C7-D9FDC8A27E93", "cpe_name": [], "versionStartIncluding": "2.1.0", "versionEndExcluding": "2.1.10"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:a:apache:mina:*:*:*:*:*:*:*:*", "matchCriteriaId": "E75343C5-A12C-4E79-B292-3ED290E0F039", "cpe_name": [], "versionStartIncluding": "2.2.0", "versionEndExcluding": "2.2.4"}]}]}}