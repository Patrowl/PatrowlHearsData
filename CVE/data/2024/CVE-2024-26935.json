{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2024-26935", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/0053f15d50d50c9312d8ab9c11e2e405812dfcac", "name": "https://git.kernel.org/stable/c/0053f15d50d50c9312d8ab9c11e2e405812dfcac", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/0053f15d50d50c9312d8ab9c11e2e405812dfcac", "name": "https://git.kernel.org/stable/c/0053f15d50d50c9312d8ab9c11e2e405812dfcac", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/3678cf67ff7136db1dd3bf63c361650db5d92889", "name": "https://git.kernel.org/stable/c/3678cf67ff7136db1dd3bf63c361650db5d92889", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/3678cf67ff7136db1dd3bf63c361650db5d92889", "name": "https://git.kernel.org/stable/c/3678cf67ff7136db1dd3bf63c361650db5d92889", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/5c2386ba80e779a92ec3bb64ccadbedd88f779b1", "name": "https://git.kernel.org/stable/c/5c2386ba80e779a92ec3bb64ccadbedd88f779b1", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/5c2386ba80e779a92ec3bb64ccadbedd88f779b1", "name": "https://git.kernel.org/stable/c/5c2386ba80e779a92ec3bb64ccadbedd88f779b1", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/cea234bb214b17d004dfdccce4491e6ff57c96ee", "name": "https://git.kernel.org/stable/c/cea234bb214b17d004dfdccce4491e6ff57c96ee", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/cea234bb214b17d004dfdccce4491e6ff57c96ee", "name": "https://git.kernel.org/stable/c/cea234bb214b17d004dfdccce4491e6ff57c96ee", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/d4c34782b6d7b1e68d18d9549451b19433bd4c6c", "name": "https://git.kernel.org/stable/c/d4c34782b6d7b1e68d18d9549451b19433bd4c6c", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/d4c34782b6d7b1e68d18d9549451b19433bd4c6c", "name": "https://git.kernel.org/stable/c/d4c34782b6d7b1e68d18d9549451b19433bd4c6c", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/e293c773c13b830cdc251f155df2254981abc320", "name": "https://git.kernel.org/stable/c/e293c773c13b830cdc251f155df2254981abc320", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/e293c773c13b830cdc251f155df2254981abc320", "name": "https://git.kernel.org/stable/c/e293c773c13b830cdc251f155df2254981abc320", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/f23a4d6e07570826fe95023ca1aa96a011fa9f84", "name": "https://git.kernel.org/stable/c/f23a4d6e07570826fe95023ca1aa96a011fa9f84", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/f23a4d6e07570826fe95023ca1aa96a011fa9f84", "name": "https://git.kernel.org/stable/c/f23a4d6e07570826fe95023ca1aa96a011fa9f84", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/f4ff08fab66eb5c0b97e1a24edac052fb40bf5d7", "name": "https://git.kernel.org/stable/c/f4ff08fab66eb5c0b97e1a24edac052fb40bf5d7", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/f4ff08fab66eb5c0b97e1a24edac052fb40bf5d7", "name": "https://git.kernel.org/stable/c/f4ff08fab66eb5c0b97e1a24edac052fb40bf5d7", "refsource": "", "tags": []}, {"url": "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html", "name": "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: core: Fix unremoved procfs host directory regression\n\nCommit fc663711b944 (\"scsi: core: Remove the /proc/scsi/${proc_name}\ndirectory earlier\") fixed a bug related to modules loading/unloading, by\nadding a call to scsi_proc_hostdir_rm() on scsi_remove_host(). But that led\nto a potential duplicate call to the hostdir_rm() routine, since it's also\ncalled from scsi_host_dev_release(). That triggered a regression report,\nwhich was then fixed by commit be03df3d4bfe (\"scsi: core: Fix a procfs host\ndirectory removal regression\"). The fix just dropped the hostdir_rm() call\nfrom dev_release().\n\nBut it happens that this proc directory is created on scsi_host_alloc(),\nand that function \"pairs\" with scsi_host_dev_release(), while\nscsi_remove_host() pairs with scsi_add_host(). In other words, it seems the\nreason for removing the proc directory on dev_release() was meant to cover\ncases in which a SCSI host structure was allocated, but the call to\nscsi_add_host() didn't happen. And that pattern happens to exist in some\nerror paths, for example.\n\nSyzkaller causes that by using USB raw gadget device, error'ing on\nusb-storage driver, at usb_stor_probe2(). By checking that path, we can see\nthat the BadDevice label leads to a scsi_host_put() after a SCSI host\nallocation, but there's no call to scsi_add_host() in such path. That leads\nto messages like this in dmesg (and a leak of the SCSI host proc\nstructure):\n\nusb-storage 4-1:87.51: USB Mass Storage device detected\nproc_dir_entry 'scsi/usb-storage' already registered\nWARNING: CPU: 1 PID: 3519 at fs/proc/generic.c:377 proc_register+0x347/0x4e0 fs/proc/generic.c:376\n\nThe proper fix seems to still call scsi_proc_hostdir_rm() on dev_release(),\nbut guard that with the state check for SHOST_CREATED; there is even a\ncomment in scsi_host_dev_release() detailing that: such conditional is\nmeant for cases where the SCSI host was allocated but there was no calls to\n{add,remove}_host(), like the usb-storage case.\n\nThis is what we propose here and with that, the error path of usb-storage\ndoes not trigger the warning anymore."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-05-01T06:15Z", "lastModifiedDate": "2024-11-21T09:03Z"}