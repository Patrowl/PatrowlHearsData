{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2024-26866", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/1543418e82789cc383cd36d41469983c64e3fc7f", "name": "https://git.kernel.org/stable/c/1543418e82789cc383cd36d41469983c64e3fc7f", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/1543418e82789cc383cd36d41469983c64e3fc7f", "name": "https://git.kernel.org/stable/c/1543418e82789cc383cd36d41469983c64e3fc7f", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/2ae0ab0143fcc06190713ed81a6486ed0ad3c861", "name": "https://git.kernel.org/stable/c/2ae0ab0143fcc06190713ed81a6486ed0ad3c861", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/2ae0ab0143fcc06190713ed81a6486ed0ad3c861", "name": "https://git.kernel.org/stable/c/2ae0ab0143fcc06190713ed81a6486ed0ad3c861", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/996ce839606afd0fef91355627868022aa73eb68", "name": "https://git.kernel.org/stable/c/996ce839606afd0fef91355627868022aa73eb68", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/996ce839606afd0fef91355627868022aa73eb68", "name": "https://git.kernel.org/stable/c/996ce839606afd0fef91355627868022aa73eb68", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/da83ed350e4604b976e94239b08d8e2e7eaee7ea", "name": "https://git.kernel.org/stable/c/da83ed350e4604b976e94239b08d8e2e7eaee7ea", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/da83ed350e4604b976e94239b08d8e2e7eaee7ea", "name": "https://git.kernel.org/stable/c/da83ed350e4604b976e94239b08d8e2e7eaee7ea", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nspi: lpspi: Avoid potential use-after-free in probe()\n\nfsl_lpspi_probe() is allocating/disposing memory manually with\nspi_alloc_host()/spi_alloc_target(), but uses\ndevm_spi_register_controller(). In case of error after the latter call the\nmemory will be explicitly freed in the probe function by\nspi_controller_put() call, but used afterwards by \"devm\" management outside\nprobe() (spi_unregister_controller() <- devm_spi_unregister() below).\n\nUnable to handle kernel NULL pointer dereference at virtual address 0000000000000070\n...\nCall trace:\n kernfs_find_ns\n kernfs_find_and_get_ns\n sysfs_remove_group\n sysfs_remove_groups\n device_remove_attrs\n device_del\n spi_unregister_controller\n devm_spi_unregister\n release_nodes\n devres_release_all\n really_probe\n driver_probe_device\n __device_attach_driver\n bus_for_each_drv\n __device_attach\n device_initial_probe\n bus_probe_device\n deferred_probe_work_func\n process_one_work\n worker_thread\n kthread\n ret_from_fork"}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-04-17T11:15Z", "lastModifiedDate": "2024-11-21T09:03Z"}