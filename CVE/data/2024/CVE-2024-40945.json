{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2024-40945", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/2973b8e7d127754de9013177c41c0b5547406998", "name": "https://git.kernel.org/stable/c/2973b8e7d127754de9013177c41c0b5547406998", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/2973b8e7d127754de9013177c41c0b5547406998", "name": "https://git.kernel.org/stable/c/2973b8e7d127754de9013177c41c0b5547406998", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/61a96da9649a6b6a1a5d5bde9374b045fdb5c12e", "name": "https://git.kernel.org/stable/c/61a96da9649a6b6a1a5d5bde9374b045fdb5c12e", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/61a96da9649a6b6a1a5d5bde9374b045fdb5c12e", "name": "https://git.kernel.org/stable/c/61a96da9649a6b6a1a5d5bde9374b045fdb5c12e", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/700f564758882db7c039dfba9443fe762561a3f8", "name": "https://git.kernel.org/stable/c/700f564758882db7c039dfba9443fe762561a3f8", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/700f564758882db7c039dfba9443fe762561a3f8", "name": "https://git.kernel.org/stable/c/700f564758882db7c039dfba9443fe762561a3f8", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/7388ae6f26c0ba95f70cc96bf9c5d5cb06c908b6", "name": "https://git.kernel.org/stable/c/7388ae6f26c0ba95f70cc96bf9c5d5cb06c908b6", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/7388ae6f26c0ba95f70cc96bf9c5d5cb06c908b6", "name": "https://git.kernel.org/stable/c/7388ae6f26c0ba95f70cc96bf9c5d5cb06c908b6", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/89e8a2366e3bce584b6c01549d5019c5cda1205e", "name": "https://git.kernel.org/stable/c/89e8a2366e3bce584b6c01549d5019c5cda1205e", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/89e8a2366e3bce584b6c01549d5019c5cda1205e", "name": "https://git.kernel.org/stable/c/89e8a2366e3bce584b6c01549d5019c5cda1205e", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/cf34f8f66982a36e5cba0d05781b21ec9606b91e", "name": "https://git.kernel.org/stable/c/cf34f8f66982a36e5cba0d05781b21ec9606b91e", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/cf34f8f66982a36e5cba0d05781b21ec9606b91e", "name": "https://git.kernel.org/stable/c/cf34f8f66982a36e5cba0d05781b21ec9606b91e", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\niommu: Return right value in iommu_sva_bind_device()\n\niommu_sva_bind_device() should return either a sva bond handle or an\nERR_PTR value in error cases. Existing drivers (idxd and uacce) only\ncheck the return value with IS_ERR(). This could potentially lead to\na kernel NULL pointer dereference issue if the function returns NULL\ninstead of an error pointer.\n\nIn reality, this doesn't cause any problems because iommu_sva_bind_device()\nonly returns NULL when the kernel is not configured with CONFIG_IOMMU_SVA.\nIn this case, iommu_dev_enable_feature(dev, IOMMU_DEV_FEAT_SVA) will\nreturn an error, and the device drivers won't call iommu_sva_bind_device()\nat all."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-07-12T13:15Z", "lastModifiedDate": "2024-11-21T09:31Z"}