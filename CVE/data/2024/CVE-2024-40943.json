{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2024-40943", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/050ce8af6838c71e872e982b50d3f1bec21da40e", "name": "https://git.kernel.org/stable/c/050ce8af6838c71e872e982b50d3f1bec21da40e", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/050ce8af6838c71e872e982b50d3f1bec21da40e", "name": "https://git.kernel.org/stable/c/050ce8af6838c71e872e982b50d3f1bec21da40e", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/117b9c009b72a6c2ebfd23484354dfee2d9570d2", "name": "https://git.kernel.org/stable/c/117b9c009b72a6c2ebfd23484354dfee2d9570d2", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/117b9c009b72a6c2ebfd23484354dfee2d9570d2", "name": "https://git.kernel.org/stable/c/117b9c009b72a6c2ebfd23484354dfee2d9570d2", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/38825ff9da91d2854dcf6d9ac320a7e641e10f25", "name": "https://git.kernel.org/stable/c/38825ff9da91d2854dcf6d9ac320a7e641e10f25", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/38825ff9da91d2854dcf6d9ac320a7e641e10f25", "name": "https://git.kernel.org/stable/c/38825ff9da91d2854dcf6d9ac320a7e641e10f25", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/3c26b5d21b1239e9c7fd31ba7d9b2d7bdbaa68d9", "name": "https://git.kernel.org/stable/c/3c26b5d21b1239e9c7fd31ba7d9b2d7bdbaa68d9", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/3c26b5d21b1239e9c7fd31ba7d9b2d7bdbaa68d9", "name": "https://git.kernel.org/stable/c/3c26b5d21b1239e9c7fd31ba7d9b2d7bdbaa68d9", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/3c361f313d696df72f9bccf058510e9ec737b9b1", "name": "https://git.kernel.org/stable/c/3c361f313d696df72f9bccf058510e9ec737b9b1", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/3c361f313d696df72f9bccf058510e9ec737b9b1", "name": "https://git.kernel.org/stable/c/3c361f313d696df72f9bccf058510e9ec737b9b1", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/952b023f06a24b2ad6ba67304c4c84d45bea2f18", "name": "https://git.kernel.org/stable/c/952b023f06a24b2ad6ba67304c4c84d45bea2f18", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/952b023f06a24b2ad6ba67304c4c84d45bea2f18", "name": "https://git.kernel.org/stable/c/952b023f06a24b2ad6ba67304c4c84d45bea2f18", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/e8e2db1adac47970a6a9225f3858e9aa0e86287f", "name": "https://git.kernel.org/stable/c/e8e2db1adac47970a6a9225f3858e9aa0e86287f", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/e8e2db1adac47970a6a9225f3858e9aa0e86287f", "name": "https://git.kernel.org/stable/c/e8e2db1adac47970a6a9225f3858e9aa0e86287f", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/ea042dc2bea19d72e37c298bf65a9c341ef3fff3", "name": "https://git.kernel.org/stable/c/ea042dc2bea19d72e37c298bf65a9c341ef3fff3", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/ea042dc2bea19d72e37c298bf65a9c341ef3fff3", "name": "https://git.kernel.org/stable/c/ea042dc2bea19d72e37c298bf65a9c341ef3fff3", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nocfs2: fix races between hole punching and AIO+DIO\n\nAfter commit \"ocfs2: return real error code in ocfs2_dio_wr_get_block\",\nfstests/generic/300 become from always failed to sometimes failed:\n\n========================================================================\n[  473.293420 ] run fstests generic/300\n\n[  475.296983 ] JBD2: Ignoring recovery information on journal\n[  475.302473 ] ocfs2: Mounting device (253,1) on (node local, slot 0) with ordered data mode.\n[  494.290998 ] OCFS2: ERROR (device dm-1): ocfs2_change_extent_flag: Owner 5668 has an extent at cpos 78723 which can no longer be found\n[  494.291609 ] On-disk corruption discovered. Please run fsck.ocfs2 once the filesystem is unmounted.\n[  494.292018 ] OCFS2: File system is now read-only.\n[  494.292224 ] (kworker/19:11,2628,19):ocfs2_mark_extent_written:5272 ERROR: status = -30\n[  494.292602 ] (kworker/19:11,2628,19):ocfs2_dio_end_io_write:2374 ERROR: status = -3\nfio: io_u error on file /mnt/scratch/racer: Read-only file system: write offset=460849152, buflen=131072\n=========================================================================\n\nIn __blockdev_direct_IO, ocfs2_dio_wr_get_block is called to add unwritten\nextents to a list.  extents are also inserted into extent tree in\nocfs2_write_begin_nolock.  Then another thread call fallocate to puch a\nhole at one of the unwritten extent.  The extent at cpos was removed by\nocfs2_remove_extent().  At end io worker thread, ocfs2_search_extent_list\nfound there is no such extent at the cpos.\n\n    T1                        T2                T3\n                              inode lock\n                                ...\n                                insert extents\n                                ...\n                              inode unlock\nocfs2_fallocate\n __ocfs2_change_file_space\n  inode lock\n  lock ip_alloc_sem\n  ocfs2_remove_inode_range inode\n   ocfs2_remove_btree_range\n    ocfs2_remove_extent\n    ^---remove the extent at cpos 78723\n  ...\n  unlock ip_alloc_sem\n  inode unlock\n                                       ocfs2_dio_end_io\n                                        ocfs2_dio_end_io_write\n                                         lock ip_alloc_sem\n                                         ocfs2_mark_extent_written\n                                          ocfs2_change_extent_flag\n                                           ocfs2_search_extent_list\n                                           ^---failed to find extent\n                                          ...\n                                          unlock ip_alloc_sem\n\nIn most filesystems, fallocate is not compatible with racing with AIO+DIO,\nso fix it by adding to wait for all dio before fallocate/punch_hole like\next4."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-07-12T13:15Z", "lastModifiedDate": "2024-11-21T09:31Z"}