{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2024-27027", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/769324eb35143462542cdb15483cdaf4877bf661", "name": "https://git.kernel.org/stable/c/769324eb35143462542cdb15483cdaf4877bf661", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/769324eb35143462542cdb15483cdaf4877bf661", "name": "https://git.kernel.org/stable/c/769324eb35143462542cdb15483cdaf4877bf661", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b27e32e9367dac024cd6f61f22655714f483fd67", "name": "https://git.kernel.org/stable/c/b27e32e9367dac024cd6f61f22655714f483fd67", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b27e32e9367dac024cd6f61f22655714f483fd67", "name": "https://git.kernel.org/stable/c/b27e32e9367dac024cd6f61f22655714f483fd67", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b446631f355ece73b13c311dd712c47381a23172", "name": "https://git.kernel.org/stable/c/b446631f355ece73b13c311dd712c47381a23172", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b446631f355ece73b13c311dd712c47381a23172", "name": "https://git.kernel.org/stable/c/b446631f355ece73b13c311dd712c47381a23172", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\ndpll: fix dpll_xa_ref_*_del() for multiple registrations\n\nCurrently, if there are multiple registrations of the same pin on the\nsame dpll device, following warnings are observed:\nWARNING: CPU: 5 PID: 2212 at drivers/dpll/dpll_core.c:143 dpll_xa_ref_pin_del.isra.0+0x21e/0x230\nWARNING: CPU: 5 PID: 2212 at drivers/dpll/dpll_core.c:223 __dpll_pin_unregister+0x2b3/0x2c0\n\nThe problem is, that in both dpll_xa_ref_dpll_del() and\ndpll_xa_ref_pin_del() registration is only removed from list in case the\nreference count drops to zero. That is wrong, the registration has to\nbe removed always.\n\nTo fix this, remove the registration from the list and free\nit unconditionally, instead of doing it only when the ref reference\ncounter reaches zero."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-05-01T13:15Z", "lastModifiedDate": "2024-11-21T09:03Z"}