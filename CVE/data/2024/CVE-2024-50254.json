{"publishedDate": "2024-11-09T11:15Z", "lastModifiedDate": "2024-11-14T18:09Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2024-50254", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Free dynamically allocated bits in bpf_iter_bits_destroy()\n\nbpf_iter_bits_destroy() uses \"kit->nr_bits <= 64\" to check whether the\nbits are dynamically allocated. However, the check is incorrect and may\ncause a kmemleak as shown below:\n\nunreferenced object 0xffff88812628c8c0 (size 32):\n  comm \"swapper/0\", pid 1, jiffies 4294727320\n  hex dump (first 32 bytes):\n\tb0 c1 55 f5 81 88 ff ff f0 f0 f0 f0 f0 f0 f0 f0  ..U...........\n\tf0 f0 f0 f0 f0 f0 f0 f0 00 00 00 00 00 00 00 00  ..............\n  backtrace (crc 781e32cc):\n\t[<00000000c452b4ab>] kmemleak_alloc+0x4b/0x80\n\t[<0000000004e09f80>] __kmalloc_node_noprof+0x480/0x5c0\n\t[<00000000597124d6>] __alloc.isra.0+0x89/0xb0\n\t[<000000004ebfffcd>] alloc_bulk+0x2af/0x720\n\t[<00000000d9c10145>] prefill_mem_cache+0x7f/0xb0\n\t[<00000000ff9738ff>] bpf_mem_alloc_init+0x3e2/0x610\n\t[<000000008b616eac>] bpf_global_ma_init+0x19/0x30\n\t[<00000000fc473efc>] do_one_initcall+0xd3/0x3c0\n\t[<00000000ec81498c>] kernel_init_freeable+0x66a/0x940\n\t[<00000000b119f72f>] kernel_init+0x20/0x160\n\t[<00000000f11ac9a7>] ret_from_fork+0x3c/0x70\n\t[<0000000004671da4>] ret_from_fork_asm+0x1a/0x30\n\nThat is because nr_bits will be set as zero in bpf_iter_bits_next()\nafter all bits have been iterated.\n\nFix the issue by setting kit->bit to kit->nr_bits instead of setting\nkit->nr_bits to zero when the iteration completes in\nbpf_iter_bits_next(). In addition, use \"!nr_bits || bits >= nr_bits\" to\ncheck whether the iteration is complete and still use \"nr_bits > 64\" to\nindicate whether bits are dynamically allocated. The \"!nr_bits\" check is\nnecessary because bpf_iter_bits_new() may fail before setting\nkit->nr_bits, and this condition will stop the iteration early instead\nof accessing the zeroed or freed kit->bits.\n\nConsidering the initial value of kit->bits is -1 and the type of\nkit->nr_bits is unsigned int, change the type of kit->nr_bits to int.\nThe potential overflow problem will be handled in the following patch."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: bpf: Libera bits asignados din\u00e1micamente en bpf_iter_bits_destroy() bpf_iter_bits_destroy() usa \"kit-&gt;nr_bits &lt;= 64\" para comprobar si los bits est\u00e1n asignados din\u00e1micamente. Sin embargo, la comprobaci\u00f3n es incorrecta y puede causar una fuga de kmem como se muestra a continuaci\u00f3n: objeto sin referencia 0xffff88812628c8c0 (tama\u00f1o 32): comm \"swapper/0\", pid 1, jiffies 4294727320 volcado hexadecimal (primeros 32 bytes): b0 c1 55 f5 81 88 ff ff f0 f0 f0 f0 f0 f0 f0 f0 f0 ..U........... f0 f0 f0 f0 f0 f0 f0 f0 f0 00 00 00 00 00 00 00 00 .............. backtrace (crc 781e32cc): [&lt;00000000c452b4ab&gt;] kmemleak_alloc+0x4b/0x80 [&lt;0000000004e09f80&gt;] __kmalloc_node_noprof+0x480/0x5c0 [&lt;00000000597124d6&gt;] __alloc.isra.0+0x89/0xb0 [&lt;000000004ebfffcd&gt;] alloc_bulk+0x2af/0x720 [&lt;00000000d9c10145&gt;] prefill_mem_cache+0x7f/0xb0 [&lt;00000000ff9738ff&gt;] bpf_mem_alloc_init+0x3e2/0x610 [&lt;000000008b616eac&gt;] bpf_global_ma_init+0x19/0x30 [&lt;00000000fc473efc&gt;] Esto se debe a que nr_bits se establecer\u00e1 como cero en bpf_iter_bits_next() despu\u00e9s de que se hayan iterado todos los bits. Solucione el problema configurando kit-&gt;bit en kit-&gt;nr_bits en lugar de configurar kit-&gt;nr_bits en cero cuando la iteraci\u00f3n se complete en bpf_iter_bits_next(). Adem\u00e1s, use \"!nr_bits || bits &gt;= nr_bits\" para verificar si la iteraci\u00f3n est\u00e1 completa y siga usando \"nr_bits &gt; 64\" para indicar si los bits se asignan din\u00e1micamente. La verificaci\u00f3n \"!nr_bits\" es necesaria porque bpf_iter_bits_new() puede fallar antes de configurar kit-&gt;nr_bits, y esta condici\u00f3n detendr\u00e1 la iteraci\u00f3n antes de tiempo en lugar de acceder a los kit-&gt;bits liberados o puestos a cero. Teniendo en cuenta que el valor inicial de kit-&gt;bits es -1 y el tipo de kit-&gt;nr_bits es unsigned int, cambie el tipo de kit-&gt;nr_bits a int. El posible problema de desbordamiento se manejar\u00e1 en el siguiente parche."}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/101ccfbabf4738041273ce64e2b116cf440dea13", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/9cee266fafaf79fd465314546f637f9a3c215830", "name": "", "refsource": "", "tags": ["Patch"]}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-401"}]}]}}, "impact": {"baseMetricV3": {"exploitabilityScore": 1.8, "impactScore": 3.6, "cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H", "baseScore": 5.5, "baseSeverity": "MEDIUM", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH"}}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "negate": false, "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "matchCriteriaId": "386941FE-51A4-4893-9EC3-054AD3863E8D", "cpe_name": [], "versionStartIncluding": "6.11", "versionEndExcluding": "6.11.7"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:6.12:rc1:*:*:*:*:*:*", "matchCriteriaId": "7F361E1D-580F-4A2D-A509-7615F73167A1", "cpe_name": []}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:6.12:rc2:*:*:*:*:*:*", "matchCriteriaId": "925478D0-3E3D-4E6F-ACD5-09F28D5DF82C", "cpe_name": []}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:6.12:rc3:*:*:*:*:*:*", "matchCriteriaId": "3C95E234-D335-4B6C-96BF-E2CEBD8654ED", "cpe_name": []}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:6.12:rc4:*:*:*:*:*:*", "matchCriteriaId": "E0F717D8-3014-4F84-8086-0124B2111379", "cpe_name": []}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:6.12:rc5:*:*:*:*:*:*", "matchCriteriaId": "24DBE6C7-2AAE-4818-AED2-E131F153D2FA", "cpe_name": []}]}]}}