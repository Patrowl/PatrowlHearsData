{"publishedDate": "2024-06-24T14:15Z", "lastModifiedDate": "2025-02-03T15:53Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2024-36479", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nfpga: bridge: add owner module and take its refcount\n\nThe current implementation of the fpga bridge assumes that the low-level\nmodule registers a driver for the parent device and uses its owner pointer\nto take the module's refcount. This approach is problematic since it can\nlead to a null pointer dereference while attempting to get the bridge if\nthe parent device does not have a driver.\n\nTo address this problem, add a module owner pointer to the fpga_bridge\nstruct and use it to take the module's refcount. Modify the function for\nregistering a bridge to take an additional owner module parameter and\nrename it to avoid conflicts. Use the old function name for a helper macro\nthat automatically sets the module that registers the bridge as the owner.\nThis ensures compatibility with existing low-level control modules and\nreduces the chances of registering a bridge without setting the owner.\n\nAlso, update the documentation to keep it consistent with the new interface\nfor registering an fpga bridge.\n\nOther changes: opportunistically move put_device() from __fpga_bridge_get()\nto fpga_bridge_get() and of_fpga_bridge_get() to improve code clarity since\nthe bridge device is taken in these functions."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: fpga: puente: agrega el m\u00f3dulo propietario y toma su recuento. La implementaci\u00f3n actual del puente fpga supone que el m\u00f3dulo de bajo nivel registra un controlador para el dispositivo principal y utiliza su puntero de propietario para tomar el recuento del m\u00f3dulo. Este enfoque es problem\u00e1tico ya que puede provocar una desreferencia del puntero nulo al intentar obtener el puente si el dispositivo principal no tiene un controlador. Para solucionar este problema, agregue un puntero de propietario de m\u00f3dulo a la estructura fpga_bridge y util\u00edcelo para tomar el recuento del m\u00f3dulo. Modifique la funci\u00f3n para registrar un puente para tomar un par\u00e1metro de m\u00f3dulo propietario adicional y cambiarle el nombre para evitar conflictos. Utilice el nombre de funci\u00f3n anterior para una macro auxiliar que configura autom\u00e1ticamente el m\u00f3dulo que registra el puente como propietario. Esto garantiza la compatibilidad con los m\u00f3dulos de control de bajo nivel existentes y reduce las posibilidades de registrar un puente sin configurar el propietario. Adem\u00e1s, actualice la documentaci\u00f3n para que sea coherente con la nueva interfaz para registrar un puente fpga. Otros cambios: mueva de manera oportunista put_device() de __fpga_bridge_get() a fpga_bridge_get() y of_fpga_bridge_get() para mejorar la claridad del c\u00f3digo ya que el dispositivo puente se toma en estas funciones."}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/18dc8366abb6cadcb77668b1a16434654e355d49", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/1da11f822042eb6ef4b6064dc048f157a7852529", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/6896b6b2e2d9ec4e1b0acb4c1698a75a4b34d125", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/d7c4081c54a1d4068de9440957303a76f9e5c95b", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/1da11f822042eb6ef4b6064dc048f157a7852529", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/6896b6b2e2d9ec4e1b0acb4c1698a75a4b34d125", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/d7c4081c54a1d4068de9440957303a76f9e5c95b", "name": "", "refsource": "", "tags": ["Patch"]}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-476"}]}]}}, "impact": {"baseMetricV3": {"exploitabilityScore": 1.8, "impactScore": 3.6, "cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H", "baseScore": 5.5, "baseSeverity": "MEDIUM", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH"}}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "negate": false, "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "matchCriteriaId": "2FCED5A2-3430-42CC-9261-CA48123157D8", "cpe_name": [], "versionStartIncluding": "4.10", "versionEndExcluding": "6.1.120"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "matchCriteriaId": "FCE796DF-3B50-4DC6-BAE5-95271068FC9E", "cpe_name": [], "versionStartIncluding": "6.2", "versionEndExcluding": "6.6.33"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "matchCriteriaId": "991B9791-966A-4D18-9E8D-A8AB128E5627", "cpe_name": [], "versionStartIncluding": "6.7", "versionEndExcluding": "6.9.4"}]}]}}