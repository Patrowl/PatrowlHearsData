{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2024-50216", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/77ddc732416b017180893cbb2356e9f0a414c575", "name": "https://git.kernel.org/stable/c/77ddc732416b017180893cbb2356e9f0a414c575", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/a023408925acd64db5c8980373fcb3e28ec6fd29", "name": "https://git.kernel.org/stable/c/a023408925acd64db5c8980373fcb3e28ec6fd29", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/dc60992ce76fbc2f71c2674f435ff6bde2108028", "name": "https://git.kernel.org/stable/c/dc60992ce76fbc2f71c2674f435ff6bde2108028", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nxfs: fix finding a last resort AG in xfs_filestream_pick_ag\n\nWhen the main loop in xfs_filestream_pick_ag fails to find a suitable\nAG it tries to just pick the online AG.  But the loop for that uses\nargs->pag as loop iterator while the later code expects pag to be\nset.  Fix this by reusing the max_pag case for this last resort, and\nalso add a check for impossible case of no AG just to make sure that\nthe uninitialized pag doesn't even escape in theory."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-11-09T11:15Z", "lastModifiedDate": "2024-11-12T13:56Z"}