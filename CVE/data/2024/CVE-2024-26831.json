{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2024-26831", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/4e1d71cabb19ec2586827adfc60d68689c68c194", "name": "https://git.kernel.org/stable/c/4e1d71cabb19ec2586827adfc60d68689c68c194", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/4e1d71cabb19ec2586827adfc60d68689c68c194", "name": "https://git.kernel.org/stable/c/4e1d71cabb19ec2586827adfc60d68689c68c194", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/7f97805b8df6e33850e225e6bd3ebd9e246920af", "name": "https://git.kernel.org/stable/c/7f97805b8df6e33850e225e6bd3ebd9e246920af", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/7f97805b8df6e33850e225e6bd3ebd9e246920af", "name": "https://git.kernel.org/stable/c/7f97805b8df6e33850e225e6bd3ebd9e246920af", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/d74226e03df1bf19848f18344401f254345af912", "name": "https://git.kernel.org/stable/c/d74226e03df1bf19848f18344401f254345af912", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/d74226e03df1bf19848f18344401f254345af912", "name": "https://git.kernel.org/stable/c/d74226e03df1bf19848f18344401f254345af912", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/handshake: Fix handshake_req_destroy_test1\n\nRecently, handshake_req_destroy_test1 started failing:\n\nExpected handshake_req_destroy_test == req, but\n    handshake_req_destroy_test == 0000000000000000\n    req == 0000000060f99b40\nnot ok 11 req_destroy works\n\nThis is because \"sock_release(sock)\" was replaced with \"fput(filp)\"\nto address a memory leak. Note that sock_release() is synchronous\nbut fput() usually delays the final close and clean-up.\n\nThe delay is not consequential in the other cases that were changed\nbut handshake_req_destroy_test1 is testing that handshake_req_cancel()\nfollowed by closing the file actually does call the ->hp_destroy\nmethod. Thus the PTR_EQ test at the end has to be sure that the\nfinal close is complete before it checks the pointer.\n\nWe cannot use a completion here because if ->hp_destroy is never\ncalled (ie, there is an API bug) then the test will hang.\n\nReported by: Guenter Roeck <linux@roeck-us.net>"}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-04-17T10:15Z", "lastModifiedDate": "2024-11-21T09:03Z"}