{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2024-35797", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/24a0e73d544439bb9329fbbafac44299e548a677", "name": "https://git.kernel.org/stable/c/24a0e73d544439bb9329fbbafac44299e548a677", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/24a0e73d544439bb9329fbbafac44299e548a677", "name": "https://git.kernel.org/stable/c/24a0e73d544439bb9329fbbafac44299e548a677", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b79f9e1ff27c994a4c452235ba09e672ec698e23", "name": "https://git.kernel.org/stable/c/b79f9e1ff27c994a4c452235ba09e672ec698e23", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b79f9e1ff27c994a4c452235ba09e672ec698e23", "name": "https://git.kernel.org/stable/c/b79f9e1ff27c994a4c452235ba09e672ec698e23", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/d5d39c707a4cf0bcc84680178677b97aa2cb2627", "name": "https://git.kernel.org/stable/c/d5d39c707a4cf0bcc84680178677b97aa2cb2627", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/d5d39c707a4cf0bcc84680178677b97aa2cb2627", "name": "https://git.kernel.org/stable/c/d5d39c707a4cf0bcc84680178677b97aa2cb2627", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/d962f6c583458037dc7e529659b2b02b9dd3d94b", "name": "https://git.kernel.org/stable/c/d962f6c583458037dc7e529659b2b02b9dd3d94b", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/d962f6c583458037dc7e529659b2b02b9dd3d94b", "name": "https://git.kernel.org/stable/c/d962f6c583458037dc7e529659b2b02b9dd3d94b", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm: cachestat: fix two shmem bugs\n\nWhen cachestat on shmem races with swapping and invalidation, there\nare two possible bugs:\n\n1) A swapin error can have resulted in a poisoned swap entry in the\n   shmem inode's xarray. Calling get_shadow_from_swap_cache() on it\n   will result in an out-of-bounds access to swapper_spaces[].\n\n   Validate the entry with non_swap_entry() before going further.\n\n2) When we find a valid swap entry in the shmem's inode, the shadow\n   entry in the swapcache might not exist yet: swap IO is still in\n   progress and we're before __remove_mapping; swapin, invalidation,\n   or swapoff have removed the shadow from swapcache after we saw the\n   shmem swap entry.\n\n   This will send a NULL to workingset_test_recent(). The latter\n   purely operates on pointer bits, so it won't crash - node 0, memcg\n   ID 0, eviction timestamp 0, etc. are all valid inputs - but it's a\n   bogus test. In theory that could result in a false \"recently\n   evicted\" count.\n\n   Such a false positive wouldn't be the end of the world. But for\n   code clarity and (future) robustness, be explicit about this case.\n\n   Bail on get_shadow_from_swap_cache() returning NULL."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-05-17T14:15Z", "lastModifiedDate": "2024-11-21T09:20Z"}