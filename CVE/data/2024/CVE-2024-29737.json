{"publishedDate": "2024-07-17T08:21Z", "lastModifiedDate": "2025-02-13T17:47Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "5.1", "CVE_data_meta": {"ID": "CVE-2024-29737", "ASSIGNER": "apache"}, "description": {"description_data": [{"lang": "en", "supportingMedia": [{"base64": false, "type": "text/html", "value": "In streampark, the project module integrates Maven's compilation capabilities. The input parameter validation is not strict, allowing attackers to insert commands for remote command execution, The prerequisite for a successful attack is that the user needs to log in to the streampark system and have system-level permissions. Generally, only users of that system have the authorization to log in, and users would not manually input a dangerous operation command. Therefore, the risk level of this vulnerability is very low.<br><div><br><div>Mitigation:<br><br></div>all users <span style=\"background-color: var(--wht);\">should upgrade to 2.1.4<br><br>Background info:<span style=\"background-color: rgb(255, 255, 255);\"><br><span style=\"background-color: rgb(255, 255, 255);\"><br>Log in to Streampark using the default username (e.g. test1, test2, test3) and the default password (streampark). Navigate to the Project module, then add a new project. Enter the git repository address of the project and input `touch /tmp/success_2.1.2` as the \"Build Argument\". Note that there is no verification and interception of the special character \"`\". As a result, you will find that this injection command will be successfully executed after executing the build.<br></span></span><br><div>In the latest version, the special symbol ` is intercepted.</div><div><div><div><div></div></div></div></div></span><div><br><br></div></div><p></p><br>"}], "value": "In streampark, the project module integrates Maven's compilation capabilities. The input parameter validation is not strict, allowing attackers to insert commands for remote command execution, The prerequisite for a successful attack is that the user needs to log in to the streampark system and have system-level permissions. Generally, only users of that system have the authorization to log in, and users would not manually input a dangerous operation command. Therefore, the risk level of this vulnerability is very low.\n\nMitigation:\n\nall users should upgrade to 2.1.4\n\nBackground info:\n\nLog in to Streampark using the default username (e.g. test1, test2, test3) and the default password (streampark). Navigate to the Project module, then add a new project. Enter the git repository address of the project and input `touch /tmp/success_2.1.2` as the \"Build Argument\". Note that there is no verification and interception of the special character \"`\". As a result, you will find that this injection command will be successfully executed after executing the build.\n\nIn the latest version, the special symbol ` is intercepted."}]}, "references": {"reference_data": [{"tags": ["vendor-advisory"], "url": "https://lists.apache.org/thread/xhx7jt1t24s6d7o435wxng8t0ojfbfh5"}, {"url": "http://www.openwall.com/lists/oss-security/2024/07/17/2"}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-77"}]}]}}, "impact": {}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:a:apache software foundation:apache streampark (incubating):2.1.4:*:*:*:*:*:*:*", "cpe_name": []}]}]}}