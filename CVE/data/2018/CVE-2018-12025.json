{"publishedDate": "2018-06-11T10:29Z", "lastModifiedDate": "2024-11-21T03:44Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2018-12025", "ASSIGNER": "cve@mitre.org"}, "description": {"description_data": [{"lang": "en", "value": "The transferFrom function of a smart contract implementation for FuturXE (FXE), an Ethereum ERC20 token, allows attackers to accomplish an unauthorized transfer of digital assets because of a logic error. The developer messed up with the boolean judgment - if the input value is smaller than or equal to allowed value, the transfer session would stop execution by returning false. This makes no sense, because the transferFrom() function should require the transferring value to not exceed the allowed value in the first place. Suppose this function asks for the allowed value to be smaller than the input. Then, the attacker could easily ignore the allowance: after this condition, the `allowed[from][msg.sender] -= value;` would cause an underflow because the allowed part is smaller than the value. The attacker could transfer any amount of FuturXe tokens of any accounts to an appointed account (the `_to` address) because the allowed value is initialized to 0, and the attacker could bypass this restriction even without the victim's private key."}, {"lang": "es", "value": "La funci\u00f3n transferFrom de una implementaci\u00f3n de contrato inteligente para FuturXE (FXE), un token Ethereum ERC20, permite a los atacantes realizar una transferencia no autorizada de activos digitales debido a un error l\u00f3gico. El desarrollador se equivoc\u00f3 con el juicio boleano - si el valor de entrada es menor o igual al valor permitido, la sesi\u00f3n de transferencia detendr\u00eda la ejecuci\u00f3n devolviendo el valor \"false\". Esto no tiene sentido, porque la funci\u00f3n transferFrom() deber\u00eda requerir que el valor de transferencia no exceda el valor permitido en primer lugar. Supongamos que esta funci\u00f3n pide que el valor permitido sea menor que la entrada. Entonces, el atacante podr\u00eda ignorar f\u00e1cilmente el permiso: despu\u00e9s de esta condici\u00f3n, el \"allowed[from][msg.sender] -= value;\" originar\u00eda un flujo inferior porque la parte permitida es menor que el valor. El atacante podr\u00eda transferir cualquier cantidad de tokens de FuturXe de cualquier cuenta a una cuenta designada (la direcci\u00f3n \"_to\") porque el valor permitido se inicializa a 0 y el atacante podr\u00eda omitir esta restricci\u00f3n incluso sin la clave privada de la v\u00edctima."}]}, "references": {"reference_data": [{"url": "https://medium.com/secbit-media/bugged-smart-contract-f-e-how-could-someone-mess-up-with-boolean-d2251defd6ff", "name": "", "refsource": "", "tags": ["Third Party Advisory"]}, {"url": "https://medium.com/secbit-media/bugged-smart-contract-f-e-how-could-someone-mess-up-with-boolean-d2251defd6ff", "name": "", "refsource": "", "tags": ["Third Party Advisory"]}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-20"}, {"lang": "en", "value": "CWE-191"}]}]}}, "impact": {"baseMetricV2": {"cvssV2": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "baseScore": 5.0, "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE"}, "exploitabilityScore": 10.0, "impactScore": 2.9, "severity": "MEDIUM", "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}, "baseMetricV3": {"exploitabilityScore": 3.9, "impactScore": 3.6, "cvssV3": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N", "baseScore": 7.5, "baseSeverity": "HIGH", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "NONE"}}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "negate": false, "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:a:futurxe:futurxe:-:*:*:*:*:*:*:*", "matchCriteriaId": "08130AD0-57BB-4B83-80DE-F9B3C4F27397", "cpe_name": []}]}]}}