{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2022-30636", "ASSIGNER": "security@golang.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://go.dev/cl/408694", "name": "https://go.dev/cl/408694", "refsource": "", "tags": []}, {"url": "https://go.dev/cl/408694", "name": "https://go.dev/cl/408694", "refsource": "", "tags": []}, {"url": "https://go.dev/issue/53082", "name": "https://go.dev/issue/53082", "refsource": "", "tags": []}, {"url": "https://go.dev/issue/53082", "name": "https://go.dev/issue/53082", "refsource": "", "tags": []}, {"url": "https://pkg.go.dev/vuln/GO-2024-2961", "name": "https://pkg.go.dev/vuln/GO-2024-2961", "refsource": "", "tags": []}, {"url": "https://pkg.go.dev/vuln/GO-2024-2961", "name": "https://pkg.go.dev/vuln/GO-2024-2961", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "httpTokenCacheKey uses path.Base to extract the expected HTTP-01 token value to lookup in the DirCache implementation. On Windows, path.Base acts differently to filepath.Base, since Windows uses a different path separator (\\ vs. /), allowing a user to provide a relative path, i.e. .well-known/acme-challenge/..\\..\\asd becomes ..\\..\\asd. The extracted path is then suffixed with +http-01, joined with the cache directory, and opened. Since the controlled path is suffixed with +http-01 before opening, the impact of this is significantly limited, since it only allows reading arbitrary files on the system if and only if they have this suffix."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-07-02T20:15Z", "lastModifiedDate": "2024-11-21T07:03Z"}