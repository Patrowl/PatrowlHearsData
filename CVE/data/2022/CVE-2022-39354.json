{"publishedDate": "2022-10-25T19:15Z", "lastModifiedDate": "2024-11-21T07:18Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2022-39354", "ASSIGNER": "security-advisories@github.com"}, "description": {"description_data": [{"lang": "en", "value": "SputnikVM, also called evm, is a Rust implementation of Ethereum Virtual Machine. A custom stateful precompile can use the `is_static` parameter to determine if the call is executed in a static context (via `STATICCALL`), and thus decide if stateful operations should be done. Prior to version 0.36.0, the passed `is_static` parameter was incorrect -- it was only set to `true` if the call came from a direct `STATICCALL` opcode. However, once a static call context is entered, it should stay static. The issue only impacts custom precompiles that actually uses `is_static`. For those affected, the issue can lead to possible incorrect state transitions. Version 0.36.0 contains a patch. There are no known workarounds."}, {"lang": "es", "value": "SputnikVM, tambi\u00e9n llamado evm, es una implementaci\u00f3n en Rust de la m\u00e1quina virtual de Ethereum. Una precompilaci\u00f3n personalizada con estado puede usar el par\u00e1metro \"is_static\" para determinar si la llamada es ejecutada en un contexto est\u00e1tico (por medio de \"STATICCALL\"), y as\u00ed decidir si es debido realizar operaciones con estado. versiones anteriores a 0.36.0, el par\u00e1metro pasado \"is_static\" era incorrecto -- s\u00f3lo se pon\u00eda a \"true\" si la llamada proven\u00eda de un opcode directo \"STATICCALL\". Sin embargo, una vez que es introducido un contexto de llamada est\u00e1tica, deber\u00eda permanecer est\u00e1tico. El problema s\u00f3lo afecta a los precompiladores personalizados que realmente usan \"is_static\". Para los afectados, el problema puede conllevar a posibles transiciones de estado incorrectas. La versi\u00f3n 0.36.0 contiene un parche. No se presentan mitigaciones conocidas"}]}, "references": {"reference_data": [{"url": "https://github.com/rust-blockchain/evm/pull/133", "name": "", "refsource": "", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/rust-blockchain/evm/security/advisories/GHSA-hhc4-47rh-cr34", "name": "", "refsource": "", "tags": ["Third Party Advisory"]}, {"url": "https://github.com/rust-blockchain/evm/pull/133", "name": "", "refsource": "", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/rust-blockchain/evm/security/advisories/GHSA-hhc4-47rh-cr34", "name": "", "refsource": "", "tags": ["Third Party Advisory"]}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-670"}]}]}}, "impact": {"baseMetricV3": {"exploitabilityScore": 3.9, "impactScore": 3.6, "cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N", "baseScore": 7.5, "baseSeverity": "HIGH", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "NONE"}}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "negate": false, "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:a:evm_project:evm:*:*:*:*:*:rust:*:*", "matchCriteriaId": "9EC748FD-B195-458A-86B4-E1E5677BCABD", "cpe_name": [], "versionEndExcluding": "0.36.0"}]}]}}