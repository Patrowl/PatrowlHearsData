{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2022-48711", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/175db196e45d6f0e6047eccd09c8ba55465eb131", "name": "https://git.kernel.org/stable/c/175db196e45d6f0e6047eccd09c8ba55465eb131", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/175db196e45d6f0e6047eccd09c8ba55465eb131", "name": "https://git.kernel.org/stable/c/175db196e45d6f0e6047eccd09c8ba55465eb131", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/1f1788616157b0222b0c2153828b475d95e374a7", "name": "https://git.kernel.org/stable/c/1f1788616157b0222b0c2153828b475d95e374a7", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/1f1788616157b0222b0c2153828b475d95e374a7", "name": "https://git.kernel.org/stable/c/1f1788616157b0222b0c2153828b475d95e374a7", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/3c7e5943553594f68bbc070683db6bb6f6e9e78e", "name": "https://git.kernel.org/stable/c/3c7e5943553594f68bbc070683db6bb6f6e9e78e", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/3c7e5943553594f68bbc070683db6bb6f6e9e78e", "name": "https://git.kernel.org/stable/c/3c7e5943553594f68bbc070683db6bb6f6e9e78e", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/59ff7514f8c56f166aadca49bcecfa028e0ad50f", "name": "https://git.kernel.org/stable/c/59ff7514f8c56f166aadca49bcecfa028e0ad50f", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/59ff7514f8c56f166aadca49bcecfa028e0ad50f", "name": "https://git.kernel.org/stable/c/59ff7514f8c56f166aadca49bcecfa028e0ad50f", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/9aa422ad326634b76309e8ff342c246800621216", "name": "https://git.kernel.org/stable/c/9aa422ad326634b76309e8ff342c246800621216", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/9aa422ad326634b76309e8ff342c246800621216", "name": "https://git.kernel.org/stable/c/9aa422ad326634b76309e8ff342c246800621216", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/d692e3406e052dbf9f6d9da0cba36cb763272529", "name": "https://git.kernel.org/stable/c/d692e3406e052dbf9f6d9da0cba36cb763272529", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/d692e3406e052dbf9f6d9da0cba36cb763272529", "name": "https://git.kernel.org/stable/c/d692e3406e052dbf9f6d9da0cba36cb763272529", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/f1af11edd08dd8376f7a84487cbb0ea8203e3a1d", "name": "https://git.kernel.org/stable/c/f1af11edd08dd8376f7a84487cbb0ea8203e3a1d", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/f1af11edd08dd8376f7a84487cbb0ea8203e3a1d", "name": "https://git.kernel.org/stable/c/f1af11edd08dd8376f7a84487cbb0ea8203e3a1d", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/fde4ddeadd099bf9fbb9ccbee8e1b5c20d530a2d", "name": "https://git.kernel.org/stable/c/fde4ddeadd099bf9fbb9ccbee8e1b5c20d530a2d", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/fde4ddeadd099bf9fbb9ccbee8e1b5c20d530a2d", "name": "https://git.kernel.org/stable/c/fde4ddeadd099bf9fbb9ccbee8e1b5c20d530a2d", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\ntipc: improve size validations for received domain records\n\nThe function tipc_mon_rcv() allows a node to receive and process\ndomain_record structs from peer nodes to track their views of the\nnetwork topology.\n\nThis patch verifies that the number of members in a received domain\nrecord does not exceed the limit defined by MAX_MON_DOMAIN, something\nthat may otherwise lead to a stack overflow.\n\ntipc_mon_rcv() is called from the function tipc_link_proto_rcv(), where\nwe are reading a 32 bit message data length field into a uint16.  To\navert any risk of bit overflow, we add an extra sanity check for this in\nthat function.  We cannot see that happen with the current code, but\nfuture designers being unaware of this risk, may introduce it by\nallowing delivery of very large (> 64k) sk buffers from the bearer\nlayer.  This potential problem was identified by Eric Dumazet.\n\nThis fixes CVE-2022-0435"}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-06-20T11:15Z", "lastModifiedDate": "2024-11-21T07:33Z"}