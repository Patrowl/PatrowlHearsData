{"publishedDate": "2022-09-07T19:15Z", "lastModifiedDate": "2024-11-21T07:12Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2022-36069", "ASSIGNER": "security-advisories@github.com"}, "description": {"description_data": [{"lang": "en", "value": "Poetry is a dependency manager for Python. When handling dependencies that come from a Git repository instead of a registry, Poetry uses various commands, such as `git clone`. These commands are constructed using user input (e.g. the repository URL). When building the commands, Poetry correctly avoids Command Injection vulnerabilities by passing an array of arguments instead of a command string. However, there is the possibility that a user input starts with a dash (`-`) and is therefore treated as an optional argument instead of a positional one. This can lead to Code Execution because some of the commands have options that can be leveraged to run arbitrary executables. If a developer is exploited, the attacker could steal credentials or persist their access. If the exploit happens on a server, the attackers could use their access to attack other internal systems. Since this vulnerability requires a fair amount of user interaction, it is not as dangerous as a remotely exploitable one. However, it still puts developers at risk when dealing with untrusted files in a way they think is safe, because the exploit still works when the victim tries to make sure nothing can happen, e.g. by vetting any Git or Poetry config files that might be present in the directory. Versions 1.1.9 and 1.2.0b1 contain patches for this issue."}, {"lang": "es", "value": "Poetry es un administrador de dependencias para Python. Cuando maneja dependencias que provienen de un repositorio Git en lugar de un registro, Poetry usa varios comandos, como \"git clone\". Estos comandos son construidos usando la entrada del usuario (por ejemplo, la URL del repositorio). Cuando son construidos los comandos, Poetry evita correctamente las vulnerabilidades de inyecci\u00f3n de comandos pasando una matriz de argumentos en lugar de una cadena de comandos. Sin embargo, se presenta la posibilidad de que una entrada del usuario comience con un guion (\"-\") y por lo tanto sea tratada como un argumento opcional en lugar de posicional. Esto puede conllevar a una ejecuci\u00f3n de c\u00f3digo porque algunos de los comandos presentan opciones que pueden ser aprovechadas para ejecutar ejecutables arbitrarios. Si un desarrollador es explotado, el atacante podr\u00eda robar credenciales o persistir su acceso. Si la explotaci\u00f3n ocurre en un servidor, los atacantes podr\u00edan usar su acceso para atacar otros sistemas internos. Dado que esta vulnerabilidad requiere una buena cantidad de interacci\u00f3n con el usuario, no es tan peligrosa como una explotable de forma remota. Sin embargo, todav\u00eda pone en riesgo a desarrolladores cuando tratan con archivos no confiables de una manera que creen que es segura, porque la explotaci\u00f3n todav\u00eda funciona cuando la v\u00edctima trata de asegurarse de que nada puede suceder, por ejemplo, examinando cualquier archivo de configuraci\u00f3n Git o Poetry que pueda estar presente en el directorio. Las versiones 1.1.9 y 1.2.0b1 contienen parches para este problema"}]}, "references": {"reference_data": [{"url": "https://github.com/python-poetry/poetry/releases/tag/1.1.9", "name": "", "refsource": "", "tags": ["Release Notes"]}, {"url": "https://github.com/python-poetry/poetry/releases/tag/1.2.0b1", "name": "", "refsource": "", "tags": ["Release Notes"]}, {"url": "https://github.com/python-poetry/poetry/security/advisories/GHSA-9xgj-fcgf-x6mw", "name": "", "refsource": "", "tags": ["Exploit", "Vendor Advisory"]}, {"url": "https://www.sonarsource.com/blog/securing-developer-tools-package-managers/", "name": "", "refsource": "", "tags": []}, {"url": "https://github.com/python-poetry/poetry/releases/tag/1.1.9", "name": "", "refsource": "", "tags": ["Release Notes"]}, {"url": "https://github.com/python-poetry/poetry/releases/tag/1.2.0b1", "name": "", "refsource": "", "tags": ["Release Notes"]}, {"url": "https://github.com/python-poetry/poetry/security/advisories/GHSA-9xgj-fcgf-x6mw", "name": "", "refsource": "", "tags": ["Exploit", "Vendor Advisory"]}, {"url": "https://www.sonarsource.com/blog/securing-developer-tools-package-managers/", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-94"}, {"lang": "en", "value": "CWE-88"}]}]}}, "impact": {"baseMetricV3": {"exploitabilityScore": 1.3, "impactScore": 5.9, "cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:H", "baseScore": 7.3, "baseSeverity": "HIGH", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH"}}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "negate": false, "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:a:python-poetry:poetry:*:*:*:*:*:python:*:*", "matchCriteriaId": "0747A0F3-0623-40A7-9826-A15AF819E5B3", "cpe_name": [], "versionEndExcluding": "1.1.9"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:a:python-poetry:poetry:1.2.0:alpha1:*:*:*:python:*:*", "matchCriteriaId": "D7DB61AF-387A-4AC1-BBD9-ED4D60AC5A75", "cpe_name": []}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:a:python-poetry:poetry:1.2.0:alpha2:*:*:*:python:*:*", "matchCriteriaId": "0C20FC52-C5C2-4A12-9142-9DABDA138AB4", "cpe_name": []}]}]}}