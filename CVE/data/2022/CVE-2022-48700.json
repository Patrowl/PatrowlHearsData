{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2022-48700", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/5321908ef74fb593e0dbc8737d25038fc86c9986", "name": "https://git.kernel.org/stable/c/5321908ef74fb593e0dbc8737d25038fc86c9986", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/5321908ef74fb593e0dbc8737d25038fc86c9986", "name": "https://git.kernel.org/stable/c/5321908ef74fb593e0dbc8737d25038fc86c9986", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/578d644edc7d2c1ff53f7e4d0a25da473deb4a03", "name": "https://git.kernel.org/stable/c/578d644edc7d2c1ff53f7e4d0a25da473deb4a03", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/578d644edc7d2c1ff53f7e4d0a25da473deb4a03", "name": "https://git.kernel.org/stable/c/578d644edc7d2c1ff53f7e4d0a25da473deb4a03", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/5d721bf222936f5cf3ee15ced53cc483ecef7e46", "name": "https://git.kernel.org/stable/c/5d721bf222936f5cf3ee15ced53cc483ecef7e46", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/5d721bf222936f5cf3ee15ced53cc483ecef7e46", "name": "https://git.kernel.org/stable/c/5d721bf222936f5cf3ee15ced53cc483ecef7e46", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/873aefb376bbc0ed1dd2381ea1d6ec88106fdbd4", "name": "https://git.kernel.org/stable/c/873aefb376bbc0ed1dd2381ea1d6ec88106fdbd4", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/873aefb376bbc0ed1dd2381ea1d6ec88106fdbd4", "name": "https://git.kernel.org/stable/c/873aefb376bbc0ed1dd2381ea1d6ec88106fdbd4", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nvfio/type1: Unpin zero pages\n\nThere's currently a reference count leak on the zero page.  We increment\nthe reference via pin_user_pages_remote(), but the page is later handled\nas an invalid/reserved page, therefore it's not accounted against the\nuser and not unpinned by our put_pfn().\n\nIntroducing special zero page handling in put_pfn() would resolve the\nleak, but without accounting of the zero page, a single user could\nstill create enough mappings to generate a reference count overflow.\n\nThe zero page is always resident, so for our purposes there's no reason\nto keep it pinned.  Therefore, add a loop to walk pages returned from\npin_user_pages_remote() and unpin any zero pages."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-05-03T16:15Z", "lastModifiedDate": "2024-11-21T07:33Z"}