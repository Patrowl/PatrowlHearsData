{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2022-48812", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/0d120dfb5d67edc5bcd1804e167dba2b30809afd", "name": "https://git.kernel.org/stable/c/0d120dfb5d67edc5bcd1804e167dba2b30809afd", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/0d120dfb5d67edc5bcd1804e167dba2b30809afd", "name": "https://git.kernel.org/stable/c/0d120dfb5d67edc5bcd1804e167dba2b30809afd", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/2443ba2fe396bdde187a2fdfa6a57375643ae93c", "name": "https://git.kernel.org/stable/c/2443ba2fe396bdde187a2fdfa6a57375643ae93c", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/2443ba2fe396bdde187a2fdfa6a57375643ae93c", "name": "https://git.kernel.org/stable/c/2443ba2fe396bdde187a2fdfa6a57375643ae93c", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b5652bc50dde7b84e93dfb25479b64b817e377c1", "name": "https://git.kernel.org/stable/c/b5652bc50dde7b84e93dfb25479b64b817e377c1", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b5652bc50dde7b84e93dfb25479b64b817e377c1", "name": "https://git.kernel.org/stable/c/b5652bc50dde7b84e93dfb25479b64b817e377c1", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/e177d2e85ebcd3008c4b2abc293f4118e04eedef", "name": "https://git.kernel.org/stable/c/e177d2e85ebcd3008c4b2abc293f4118e04eedef", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/e177d2e85ebcd3008c4b2abc293f4118e04eedef", "name": "https://git.kernel.org/stable/c/e177d2e85ebcd3008c4b2abc293f4118e04eedef", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: lantiq_gswip: don't use devres for mdiobus\n\nAs explained in commits:\n74b6d7d13307 (\"net: dsa: realtek: register the MDIO bus under devres\")\n5135e96a3dd2 (\"net: dsa: don't allocate the slave_mii_bus using devres\")\n\nmdiobus_free() will panic when called from devm_mdiobus_free() <-\ndevres_release_all() <- __device_release_driver(), and that mdiobus was\nnot previously unregistered.\n\nThe GSWIP switch is a platform device, so the initial set of constraints\nthat I thought would cause this (I2C or SPI buses which call ->remove on\n->shutdown) do not apply. But there is one more which applies here.\n\nIf the DSA master itself is on a bus that calls ->remove from ->shutdown\n(like dpaa2-eth, which is on the fsl-mc bus), there is a device link\nbetween the switch and the DSA master, and device_links_unbind_consumers()\nwill unbind the GSWIP switch driver on shutdown.\n\nSo the same treatment must be applied to all DSA switch drivers, which\nis: either use devres for both the mdiobus allocation and registration,\nor don't use devres at all.\n\nThe gswip driver has the code structure in place for orderly mdiobus\nremoval, so just replace devm_mdiobus_alloc() with the non-devres\nvariant, and add manual free where necessary, to ensure that we don't\nlet devres free a still-registered bus."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-07-16T12:15Z", "lastModifiedDate": "2024-11-21T07:34Z"}