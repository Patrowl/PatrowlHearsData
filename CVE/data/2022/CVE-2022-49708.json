{"publishedDate": "2025-02-26T07:01Z", "lastModifiedDate": "2025-02-26T07:01Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2022-49708", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix bug_on ext4_mb_use_inode_pa\n\nHulk Robot reported a BUG_ON:\n==================================================================\nkernel BUG at fs/ext4/mballoc.c:3211!\n[...]\nRIP: 0010:ext4_mb_mark_diskspace_used.cold+0x85/0x136f\n[...]\nCall Trace:\n ext4_mb_new_blocks+0x9df/0x5d30\n ext4_ext_map_blocks+0x1803/0x4d80\n ext4_map_blocks+0x3a4/0x1a10\n ext4_writepages+0x126d/0x2c30\n do_writepages+0x7f/0x1b0\n __filemap_fdatawrite_range+0x285/0x3b0\n file_write_and_wait_range+0xb1/0x140\n ext4_sync_file+0x1aa/0xca0\n vfs_fsync_range+0xfb/0x260\n do_fsync+0x48/0xa0\n[...]\n==================================================================\n\nAbove issue may happen as follows:\n-------------------------------------\ndo_fsync\n vfs_fsync_range\n  ext4_sync_file\n   file_write_and_wait_range\n    __filemap_fdatawrite_range\n     do_writepages\n      ext4_writepages\n       mpage_map_and_submit_extent\n        mpage_map_one_extent\n         ext4_map_blocks\n          ext4_mb_new_blocks\n           ext4_mb_normalize_request\n            >>> start + size <= ac->ac_o_ex.fe_logical\n           ext4_mb_regular_allocator\n            ext4_mb_simple_scan_group\n             ext4_mb_use_best_found\n              ext4_mb_new_preallocation\n               ext4_mb_new_inode_pa\n                ext4_mb_use_inode_pa\n                 >>> set ac->ac_b_ex.fe_len <= 0\n           ext4_mb_mark_diskspace_used\n            >>> BUG_ON(ac->ac_b_ex.fe_len <= 0);\n\nwe can easily reproduce this problem with the following commands:\n\t`fallocate -l100M disk`\n\t`mkfs.ext4 -b 1024 -g 256 disk`\n\t`mount disk /mnt`\n\t`fsstress -d /mnt -l 0 -n 1000 -p 1`\n\nThe size must be smaller than or equal to EXT4_BLOCKS_PER_GROUP.\nTherefore, \"start + size <= ac->ac_o_ex.fe_logical\" may occur\nwhen the size is truncated. So start should be the start position of\nthe group where ac_o_ex.fe_logical is located after alignment.\nIn addition, when the value of fe_logical or EXT4_BLOCKS_PER_GROUP\nis very large, the value calculated by start_off is more accurate."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ext4: correcci\u00f3n de bug_on ext4_mb_use_inode_pa Hulk Robot inform\u00f3 de un BUG_ON: ================================================================== kernel BUG at fs/ext4/mballoc.c:3211! [...] RIP: 0010:ext4_mb_mark_diskspace_used.cold+0x85/0x136f [...] Call Trace: ext4_mb_new_blocks+0x9df/0x5d30 ext4_ext_map_blocks+0x1803/0x4d80 ext4_map_blocks+0x3a4/0x1a10 ext4_writepages+0x126d/0x2c30 do_writepages+0x7f/0x1b0 __filemap_fdatawrite_range+0x285/0x3b0 file_write_and_wait_range+0xb1/0x140 ext4_sync_file+0x1aa/0xca0 vfs_fsync_range+0xfb/0x260 do_fsync+0x48/0xa0 [...] ================================================================== El problema anterior puede ocurrir de la siguiente manera: ------------------------------------- do_fsync vfs_fsync_range ext4_sync_file file_write_and_wait_range __filemap_fdatawrite_range do_writepages ext4_writepages mpage_map_and_submit_extent mpage_map_one_extent ext4_map_blocks ext4_mb_new_blocks ext4_mb_normalize_request &gt;&gt;&gt; start + size &lt;= ac-&gt;ac_o_ex.fe_logical ext4_mb_regular_allocator ext4_mb_simple_scan_group ext4_mb_use_best_found ext4_mb_new_preallocation ext4_mb_new_inode_pa ext4_mb_use_inode_pa &gt;&gt;&gt; set ac-&gt;ac_b_ex.fe_len &lt;= 0 ext4_mb_mark_diskspace_used &gt;&gt;&gt; BUG_ON(ac-&gt;ac_b_ex.fe_len &lt;= 0); podemos reproducir f\u00e1cilmente este problema con los siguientes comandos: `fallocate -l100M disk` `mkfs.ext4 -b 1024 -g 256 disk` `mount disk /mnt` `fsstress -d /mnt -l 0 -n 1000 -p 1` El tama\u00f1o debe ser menor o igual que EXT4_BLOCKS_PER_GROUP. Por lo tanto, puede aparecer \"start + size &lt;= ac-&gt;ac_o_ex.fe_logical\" cuando se trunca el tama\u00f1o. Por lo tanto, start debe ser la posici\u00f3n de inicio del grupo donde se encuentra ac_o_ex.fe_logical despu\u00e9s de la alineaci\u00f3n. Adem\u00e1s, cuando el valor de fe_logical o EXT4_BLOCKS_PER_GROUP es muy grande, el valor calculado por start_off es m\u00e1s preciso."}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/5707d721d1819db57dba57b1d4623034fcb32047", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/6880fb2e64331b9fdc85d3f32b1d7e81ad8703f1", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/6fdaf31ad5f3d3afab744dfd9a8b0d9142aa881f", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/887a3e9ad4b8309a2266bce7ae749b2bf1f7a687", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/90f0f9d45dff0128c0fca0d2358c4153b024afa6", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/a08f789d2ab5242c07e716baf9a835725046be89", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/a37c1359714da42517dd19d36fc3c4d17edba832", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/a6b31616e5afe1d3972cb0682a373e50597faf5c", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {}, "configurations": {"CVE_data_version": "4.0", "nodes": []}}