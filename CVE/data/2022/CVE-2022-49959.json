{"publishedDate": "2025-06-18T11:15Z", "lastModifiedDate": "2025-06-18T13:46Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2022-49959", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nopenvswitch: fix memory leak at failed datapath creation\n\novs_dp_cmd_new()->ovs_dp_change()->ovs_dp_set_upcall_portids()\nallocates array via kmalloc.\nIf for some reason new_vport() fails during ovs_dp_cmd_new()\ndp->upcall_portids must be freed.\nAdd missing kfree.\n\nKmemleak example:\nunreferenced object 0xffff88800c382500 (size 64):\n  comm \"dump_state\", pid 323, jiffies 4294955418 (age 104.347s)\n  hex dump (first 32 bytes):\n    5e c2 79 e4 1f 7a 38 c7 09 21 38 0c 80 88 ff ff  ^.y..z8..!8.....\n    03 00 00 00 0a 00 00 00 14 00 00 00 28 00 00 00  ............(...\n  backtrace:\n    [<0000000071bebc9f>] ovs_dp_set_upcall_portids+0x38/0xa0\n    [<000000000187d8bd>] ovs_dp_change+0x63/0xe0\n    [<000000002397e446>] ovs_dp_cmd_new+0x1f0/0x380\n    [<00000000aa06f36e>] genl_family_rcv_msg_doit+0xea/0x150\n    [<000000008f583bc4>] genl_rcv_msg+0xdc/0x1e0\n    [<00000000fa10e377>] netlink_rcv_skb+0x50/0x100\n    [<000000004959cece>] genl_rcv+0x24/0x40\n    [<000000004699ac7f>] netlink_unicast+0x23e/0x360\n    [<00000000c153573e>] netlink_sendmsg+0x24e/0x4b0\n    [<000000006f4aa380>] sock_sendmsg+0x62/0x70\n    [<00000000d0068654>] ____sys_sendmsg+0x230/0x270\n    [<0000000012dacf7d>] ___sys_sendmsg+0x88/0xd0\n    [<0000000011776020>] __sys_sendmsg+0x59/0xa0\n    [<000000002e8f2dc1>] do_syscall_64+0x3b/0x90\n    [<000000003243e7cb>] entry_SYSCALL_64_after_hwframe+0x63/0xcd"}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: openvswitch: se corrige una fuga de memoria al crear una ruta de datos fallida. ovs_dp_cmd_new()-&gt;ovs_dp_change()-&gt;ovs_dp_set_upcall_portids() asigna una matriz mediante kmalloc. Si por alguna raz\u00f3n new_vport() falla durante ovs_dp_cmd_new(), se debe liberar dp-&gt;upcall_portids. Se a\u00f1ade la falta de kfree. Ejemplo de Kmemleak: objeto sin referencia 0xffff88800c382500 (tama\u00f1o 64): comm \"dump_state\", pid 323, jiffies 4294955418 (edad 104.347s) volcado hexadecimal (primeros 32 bytes): 5e c2 79 e4 1f 7a 38 c7 09 21 38 0c 80 88 ff ff ^.y..z8..!8..... 03 00 00 00 0a 00 00 00 14 00 00 00 28 00 00 00 ............(...  backtrace: [&lt;0000000071bebc9f&gt;] ovs_dp_set_upcall_portids+0x38/0xa0 [&lt;000000000187d8bd&gt;] ovs_dp_change+0x63/0xe0 [&lt;000000002397e446&gt;] ovs_dp_cmd_new+0x1f0/0x380 [&lt;00000000aa06f36e&gt;] genl_family_rcv_msg_doit+0xea/0x150 [&lt;000000008f583bc4&gt;] genl_rcv_msg+0xdc/0x1e0 [&lt;00000000fa10e377&gt;] netlink_rcv_skb+0x50/0x100 [&lt;000000004959cece&gt;] genl_rcv+0x24/0x40 [&lt;000000004699ac7f&gt;] netlink_unicast+0x23e/0x360 [&lt;00000000c153573e&gt;] netlink_sendmsg+0x24e/0x4b0 [&lt;000000006f4aa380&gt;] sock_sendmsg+0x62/0x70 [&lt;00000000d0068654&gt;] ____sys_sendmsg+0x230/0x270 [&lt;0000000012dacf7d&gt;] ___sys_sendmsg+0x88/0xd0 [&lt;0000000011776020&gt;] __sys_sendmsg+0x59/0xa0 [&lt;000000002e8f2dc1&gt;] do_syscall_64+0x3b/0x90 [&lt;000000003243e7cb&gt;] entry_SYSCALL_64_after_hwframe+0x63/0xcd "}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/a87406f4adee9c53b311d8a1ba2849c69e29a6d0", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/c0c1c0241917459644326a1a3102207c871ae159", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/ca54b2bfaab385778e55a9fd33f6c31e7f743b48", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {}, "configurations": {"CVE_data_version": "4.0", "nodes": []}}