{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2022-48815", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/08e1a3554e99a1a5bd2835907381e2383ee85cae", "name": "https://git.kernel.org/stable/c/08e1a3554e99a1a5bd2835907381e2383ee85cae", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/08e1a3554e99a1a5bd2835907381e2383ee85cae", "name": "https://git.kernel.org/stable/c/08e1a3554e99a1a5bd2835907381e2383ee85cae", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/08f1a20822349004bb9cc1b153ecb516e9f2889d", "name": "https://git.kernel.org/stable/c/08f1a20822349004bb9cc1b153ecb516e9f2889d", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/08f1a20822349004bb9cc1b153ecb516e9f2889d", "name": "https://git.kernel.org/stable/c/08f1a20822349004bb9cc1b153ecb516e9f2889d", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/2770b795294ed312375c11ef1d0b810499c66b83", "name": "https://git.kernel.org/stable/c/2770b795294ed312375c11ef1d0b810499c66b83", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/2770b795294ed312375c11ef1d0b810499c66b83", "name": "https://git.kernel.org/stable/c/2770b795294ed312375c11ef1d0b810499c66b83", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/caabb5f64f5c32fceed93356bb688ef1ec6c5783", "name": "https://git.kernel.org/stable/c/caabb5f64f5c32fceed93356bb688ef1ec6c5783", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/caabb5f64f5c32fceed93356bb688ef1ec6c5783", "name": "https://git.kernel.org/stable/c/caabb5f64f5c32fceed93356bb688ef1ec6c5783", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: bcm_sf2: don't use devres for mdiobus\n\nAs explained in commits:\n74b6d7d13307 (\"net: dsa: realtek: register the MDIO bus under devres\")\n5135e96a3dd2 (\"net: dsa: don't allocate the slave_mii_bus using devres\")\n\nmdiobus_free() will panic when called from devm_mdiobus_free() <-\ndevres_release_all() <- __device_release_driver(), and that mdiobus was\nnot previously unregistered.\n\nThe Starfighter 2 is a platform device, so the initial set of\nconstraints that I thought would cause this (I2C or SPI buses which call\n->remove on ->shutdown) do not apply. But there is one more which\napplies here.\n\nIf the DSA master itself is on a bus that calls ->remove from ->shutdown\n(like dpaa2-eth, which is on the fsl-mc bus), there is a device link\nbetween the switch and the DSA master, and device_links_unbind_consumers()\nwill unbind the bcm_sf2 switch driver on shutdown.\n\nSo the same treatment must be applied to all DSA switch drivers, which\nis: either use devres for both the mdiobus allocation and registration,\nor don't use devres at all.\n\nThe bcm_sf2 driver has the code structure in place for orderly mdiobus\nremoval, so just replace devm_mdiobus_alloc() with the non-devres\nvariant, and add manual free where necessary, to ensure that we don't\nlet devres free a still-registered bus."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-07-16T12:15Z", "lastModifiedDate": "2024-11-21T07:34Z"}