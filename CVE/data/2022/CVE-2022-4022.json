{"publishedDate": "2022-11-16T14:15Z", "lastModifiedDate": "2024-11-21T07:34Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2022-4022", "ASSIGNER": "security@wordfence.com"}, "description": {"description_data": [{"lang": "en", "value": "The SVG Support plugin for WordPress defaults to insecure settings in version 2.5 and 2.5.1. SVG files containing malicious javascript are not sanitized. While version 2.5 adds the ability to sanitize image as they are uploaded, the plugin defaults to disable sanitization and does not restrict SVG upload to only administrators. This allows authenticated attackers, with author-level privileges and higher, to upload malicious SVG files that can be embedded in posts and pages by higher privileged users. Additionally, the embedded JavaScript is also triggered on visiting the image URL, which allows an attacker to execute malicious code in browsers visiting that URL."}, {"lang": "es", "value": "El complemento SVG Support para WordPress tiene por defecto configuraciones inseguras en las versiones 2.5 y 2.5.1. Los archivos SVG que contienen javascript malicioso no se sanitizan. Si bien la versi\u00f3n 2.5 agrega la capacidad de sanitizar las im\u00e1genes a medida que se cargan, el complemento deshabilita de forma predeterminada la sanitizaci\u00f3n y no restringe la carga de SVG solo a los administradores. Esto permite a atacantes autenticados, con privilegios de nivel de autor y superiores, cargar archivos SVG maliciosos que los usuarios con mayores privilegios pueden incrustar en publicaciones y p\u00e1ginas. Adem\u00e1s, el JavaScript incrustado tambi\u00e9n se activa al visitar la URL de la imagen, lo que permite a un atacante ejecutar c\u00f3digo malicioso en los navegadores que visitan esa URL."}]}, "references": {"reference_data": [{"url": "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&new=2776612%40svg-support%2Ftrunk&old=2672900%40svg-support%2Ftrunk&sfp_email=&sfph_mail=", "name": "", "refsource": "", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://www.wordfence.com/vulnerability-advisories-continued/#CVE-2022-4022", "name": "", "refsource": "", "tags": ["Third Party Advisory"]}, {"url": "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&new=2776612%40svg-support%2Ftrunk&old=2672900%40svg-support%2Ftrunk&sfp_email=&sfph_mail=", "name": "", "refsource": "", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://www.wordfence.com/vulnerability-advisories-continued/#CVE-2022-4022", "name": "", "refsource": "", "tags": ["Third Party Advisory"]}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-79"}]}]}}, "impact": {"baseMetricV3": {"exploitabilityScore": 2.3, "impactScore": 2.7, "cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "baseScore": 5.4, "baseSeverity": "MEDIUM", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE"}}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "negate": false, "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:a:benbodhi:svg_support:*:*:*:*:*:wordpress:*:*", "matchCriteriaId": "1B40B9B3-851D-42FA-B2D8-63985659BA6D", "cpe_name": [], "versionStartIncluding": "2.5.0", "versionEndExcluding": "2.5.2"}]}]}}