{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2022-31150", "ASSIGNER": "security-advisories@github.com"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://github.com/nodejs/undici/releases/tag/v5.8.0", "name": "https://github.com/nodejs/undici/releases/tag/v5.8.0", "refsource": "", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://github.com/nodejs/undici/releases/tag/v5.8.0", "name": "https://github.com/nodejs/undici/releases/tag/v5.8.0", "refsource": "", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://github.com/nodejs/undici/security/advisories/GHSA-3cvr-822r-rqcc", "name": "https://github.com/nodejs/undici/security/advisories/GHSA-3cvr-822r-rqcc", "refsource": "", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://github.com/nodejs/undici/security/advisories/GHSA-3cvr-822r-rqcc", "name": "https://github.com/nodejs/undici/security/advisories/GHSA-3cvr-822r-rqcc", "refsource": "", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://hackerone.com/reports/409943", "name": "https://hackerone.com/reports/409943", "refsource": "", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://hackerone.com/reports/409943", "name": "https://hackerone.com/reports/409943", "refsource": "", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://security.netapp.com/advisory/ntap-20220915-0002/", "name": "https://security.netapp.com/advisory/ntap-20220915-0002/", "refsource": "", "tags": ["Third Party Advisory"]}, {"url": "https://security.netapp.com/advisory/ntap-20220915-0002/", "name": "https://security.netapp.com/advisory/ntap-20220915-0002/", "refsource": "", "tags": ["Third Party Advisory"]}]}, "description": {"description_data": [{"lang": "en", "value": "undici is an HTTP/1.1 client, written from scratch for Node.js. It is possible to inject CRLF sequences into request headers in undici in versions less than 5.7.1. A fix was released in version 5.8.0. Sanitizing all HTTP headers from untrusted sources to eliminate `\\r\\n` is a workaround for this issue."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:a:nodejs:undici:*:*:*:*:*:node.js:*:*", "versionEndExcluding": "5.8.0", "cpe_name": []}]}]}, "impact": {"baseMetricV3": {"cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.9, "impactScore": 2.5}}, "publishedDate": "2022-07-19T21:15Z", "lastModifiedDate": "2024-11-21T07:04Z"}