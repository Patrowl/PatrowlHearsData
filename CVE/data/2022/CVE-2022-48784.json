{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2022-48784", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/241e633cb379c4f332fc1baf2abec95ec840cbeb", "name": "https://git.kernel.org/stable/c/241e633cb379c4f332fc1baf2abec95ec840cbeb", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/241e633cb379c4f332fc1baf2abec95ec840cbeb", "name": "https://git.kernel.org/stable/c/241e633cb379c4f332fc1baf2abec95ec840cbeb", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/c979f792a2baf6d0f3419587668a1a6eba46a3d2", "name": "https://git.kernel.org/stable/c/c979f792a2baf6d0f3419587668a1a6eba46a3d2", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/c979f792a2baf6d0f3419587668a1a6eba46a3d2", "name": "https://git.kernel.org/stable/c/c979f792a2baf6d0f3419587668a1a6eba46a3d2", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/f0a6fd1527067da537e9c48390237488719948ed", "name": "https://git.kernel.org/stable/c/f0a6fd1527067da537e9c48390237488719948ed", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/f0a6fd1527067da537e9c48390237488719948ed", "name": "https://git.kernel.org/stable/c/f0a6fd1527067da537e9c48390237488719948ed", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\ncfg80211: fix race in netlink owner interface destruction\n\nMy previous fix here to fix the deadlock left a race where\nthe exact same deadlock (see the original commit referenced\nbelow) can still happen if cfg80211_destroy_ifaces() already\nruns while nl80211_netlink_notify() is still marking some\ninterfaces as nl_owner_dead.\n\nThe race happens because we have two loops here - first we\ndev_close() all the netdevs, and then we destroy them. If we\nalso have two netdevs (first one need only be a wdev though)\nthen we can find one during the first iteration, close it,\nand go to the second iteration -- but then find two, and try\nto destroy also the one we didn't close yet.\n\nFix this by only iterating once."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-07-16T12:15Z", "lastModifiedDate": "2024-11-21T07:34Z"}