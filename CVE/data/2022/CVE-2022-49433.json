{"publishedDate": "2025-02-26T07:01Z", "lastModifiedDate": "2025-02-26T07:01Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2022-49433", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/hfi1: Prevent use of lock before it is initialized\n\nIf there is a failure during probe of hfi1 before the sdma_map_lock is\ninitialized, the call to hfi1_free_devdata() will attempt to use a lock\nthat has not been initialized. If the locking correctness validator is on\nthen an INFO message and stack trace resembling the following may be seen:\n\n  INFO: trying to register non-static key.\n  The code is fine but needs lockdep annotation, or maybe\n  you didn't initialize this object before use?\n  turning off the locking correctness validator.\n  Call Trace:\n  register_lock_class+0x11b/0x880\n  __lock_acquire+0xf3/0x7930\n  lock_acquire+0xff/0x2d0\n  _raw_spin_lock_irq+0x46/0x60\n  sdma_clean+0x42a/0x660 [hfi1]\n  hfi1_free_devdata+0x3a7/0x420 [hfi1]\n  init_one+0x867/0x11a0 [hfi1]\n  pci_device_probe+0x40e/0x8d0\n\nThe use of sdma_map_lock in sdma_clean() is for freeing the sdma_map\nmemory, and sdma_map is not allocated/initialized until after\nsdma_map_lock has been initialized. This code only needs to be run if\nsdma_map is not NULL, and so checking for that condition will avoid trying\nto use the lock before it is initialized."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: RDMA/hfi1: Evitar el uso del bloqueo antes de que se inicialice Si hay un error durante el sondeo de hfi1 antes de que se inicialice sdma_map_lock, la llamada a hfi1_free_devdata() intentar\u00e1 usar un bloqueo que no se ha inicializado. Si el validador de correcci\u00f3n de bloqueo est\u00e1 activado, se puede ver un mensaje INFO y un seguimiento de pila similar al siguiente: INFO: intentando registrar una clave no est\u00e1tica. El c\u00f3digo est\u00e1 bien, pero necesita la anotaci\u00f3n lockdep, o tal vez no inicializ\u00f3 este objeto antes de usarlo. desactivando el validador de correcci\u00f3n de bloqueo. Rastreo de llamadas: register_lock_class+0x11b/0x880 __lock_acquire+0xf3/0x7930 lock_acquire+0xff/0x2d0 _raw_spin_lock_irq+0x46/0x60 sdma_clean+0x42a/0x660 [hfi1] hfi1_free_devdata+0x3a7/0x420 [hfi1] init_one+0x867/0x11a0 [hfi1] pci_device_probe+0x40e/0x8d0 El uso de sdma_map_lock en sdma_clean() es para liberar la memoria sdma_map, y sdma_map no se asigna/inicializa hasta que se haya inicializado sdma_map_lock. Este c\u00f3digo solo necesita ejecutarse si sdma_map no es NULL, por lo que verificar esa condici\u00f3n evitar\u00e1 intentar usar el bloqueo antes de que se inicialice."}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/05c03dfd09c069c4ffd783b47b2da5dcc9421f2c", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/288d198f50434f29b4a26a9de4394ae2305ad8af", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/30eb275e7ed588270ae159cc590a96658e0cfd8f", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/66090815a24ce14cf51ef5453fc0218fe8a39bc2", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/addb192000d8819c0b1553453994df9bb54c28db", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/ca55150bff5817af4f857a746ecab9862c23e12a", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/fc0750e659db7b315bf6348902cc8ca3cdd4b8d8", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {}, "configurations": {"CVE_data_version": "4.0", "nodes": []}}