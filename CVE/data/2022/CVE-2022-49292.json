{"publishedDate": "2025-02-26T07:01Z", "lastModifiedDate": "2025-09-22T19:44Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2022-49292", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: oss: Fix PCM OSS buffer allocation overflow\n\nWe've got syzbot reports hitting INT_MAX overflow at vmalloc()\nallocation that is called from snd_pcm_plug_alloc().  Although we\napply the restrictions to input parameters, it's based only on the\nhw_params of the underlying PCM device.  Since the PCM OSS layer\nallocates a temporary buffer for the data conversion, the size may\nbecome unexpectedly large when more channels or higher rates is given;\nin the reported case, it went over INT_MAX, hence it hits WARN_ON().\n\nThis patch is an attempt to avoid such an overflow and an allocation\nfor too large buffers.  First off, it adds the limit of 1MB as the\nupper bound for period bytes.  This must be large enough for all use\ncases, and we really don't want to handle a larger temporary buffer\nthan this size.  The size check is performed at two places, where the\noriginal period bytes is calculated and where the plugin buffer size\nis calculated.\n\nIn addition, the driver uses array_size() and array3_size() for\nmultiplications to catch overflows for the converted period size and\nbuffer bytes."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ALSA: oss: Fix PCM OSS buffer assignment overflow Tenemos informes de syzbot que alcanzan un desbordamiento de INT_MAX en la asignaci\u00f3n de vmalloc() que se llama desde snd_pcm_plug_alloc(). Aunque aplicamos las restricciones a los par\u00e1metros de entrada, se basa solo en hw_params del dispositivo PCM subyacente. Dado que la capa PCM OSS asigna un b\u00fafer temporal para la conversi\u00f3n de datos, el tama\u00f1o puede volverse inesperadamente grande cuando se dan m\u00e1s canales o velocidades m\u00e1s altas; en el caso informado, super\u00f3 INT_MAX, por lo tanto, alcanza WARN_ON(). Este parche es un intento de evitar dicho desbordamiento y una asignaci\u00f3n para b\u00faferes demasiado grandes. En primer lugar, agrega el l\u00edmite de 1 MB como l\u00edmite superior para bytes de per\u00edodo. Esto debe ser lo suficientemente grande para todos los casos de uso, y realmente no queremos manejar un b\u00fafer temporal m\u00e1s grande que este tama\u00f1o. La comprobaci\u00f3n del tama\u00f1o se realiza en dos lugares: donde se calculan los bytes del per\u00edodo original y donde se calcula el tama\u00f1o del b\u00fafer del complemento. Adem\u00e1s, el controlador utiliza array_size() y array3_size() para las multiplicaciones con el fin de detectar desbordamientos en el tama\u00f1o del per\u00edodo convertido y los bytes del b\u00fafer."}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/0c4190b41a69990666b4000999e27f8f1b2a426b", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/5ce74ff7059341d8b2f4d01c3383491df63d1898", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/7a40cbf3579a8e14849ba7ce46309c1992658d2b", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/a63af1baf0a5e11827db60e3127f87e437cab6e5", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/e74a069c6a7bb505f3ade141dddf85f4b0b5145a", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/efb6402c3c4a7c26d97c92d70186424097b6e366", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/fb08bf99195a87c798bc8ae1357337a981faeade", "name": "", "refsource": "", "tags": ["Patch"]}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-787"}]}]}}, "impact": {"baseMetricV3": {"exploitabilityScore": 1.8, "impactScore": 5.9, "cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "baseScore": 7.8, "baseSeverity": "HIGH", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH"}}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "negate": false, "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "matchCriteriaId": "917826D9-6AD8-4E95-A09E-944D011A1B3B", "cpe_name": [], "versionEndExcluding": "4.19.237"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "matchCriteriaId": "670BCB59-E3C8-496D-BD17-297C113776FA", "cpe_name": [], "versionStartIncluding": "4.20", "versionEndExcluding": "5.4.188"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "matchCriteriaId": "F3E1A428-8D87-4CD4-B9CA-C621B32933F8", "cpe_name": [], "versionStartIncluding": "5.5", "versionEndExcluding": "5.10.109"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "matchCriteriaId": "3191B916-53BD-46E6-AE21-58197D35768E", "cpe_name": [], "versionStartIncluding": "5.11", "versionEndExcluding": "5.15.32"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "matchCriteriaId": "C86410A0-E312-4F41-93E9-929EAFB31757", "cpe_name": [], "versionStartIncluding": "5.16", "versionEndExcluding": "5.16.18"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:5.17:*:*:*:*:*:*:*", "matchCriteriaId": "35799228-BFF6-4426-AD3B-F452EA83320F", "cpe_name": []}]}]}}