{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2022-48651", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/25efdbe5fe542c3063d1948cc4e98abcb57621ca", "name": "https://git.kernel.org/stable/c/25efdbe5fe542c3063d1948cc4e98abcb57621ca", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/25efdbe5fe542c3063d1948cc4e98abcb57621ca", "name": "https://git.kernel.org/stable/c/25efdbe5fe542c3063d1948cc4e98abcb57621ca", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/346e94aa4a99378592c46d6a34c72703a32bd5be", "name": "https://git.kernel.org/stable/c/346e94aa4a99378592c46d6a34c72703a32bd5be", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/346e94aa4a99378592c46d6a34c72703a32bd5be", "name": "https://git.kernel.org/stable/c/346e94aa4a99378592c46d6a34c72703a32bd5be", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/81225b2ea161af48e093f58e8dfee6d705b16af4", "name": "https://git.kernel.org/stable/c/81225b2ea161af48e093f58e8dfee6d705b16af4", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/81225b2ea161af48e093f58e8dfee6d705b16af4", "name": "https://git.kernel.org/stable/c/81225b2ea161af48e093f58e8dfee6d705b16af4", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/8d06006c7eb75587d986da46c48ba9274f94e8e7", "name": "https://git.kernel.org/stable/c/8d06006c7eb75587d986da46c48ba9274f94e8e7", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/8d06006c7eb75587d986da46c48ba9274f94e8e7", "name": "https://git.kernel.org/stable/c/8d06006c7eb75587d986da46c48ba9274f94e8e7", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/ab4a733874ead120691e8038272d22f8444d3638", "name": "https://git.kernel.org/stable/c/ab4a733874ead120691e8038272d22f8444d3638", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/ab4a733874ead120691e8038272d22f8444d3638", "name": "https://git.kernel.org/stable/c/ab4a733874ead120691e8038272d22f8444d3638", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b583e6b25bf9321c91154f6c78d2173ef12c4241", "name": "https://git.kernel.org/stable/c/b583e6b25bf9321c91154f6c78d2173ef12c4241", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b583e6b25bf9321c91154f6c78d2173ef12c4241", "name": "https://git.kernel.org/stable/c/b583e6b25bf9321c91154f6c78d2173ef12c4241", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/bffcdade259c05ab3436b5fab711612093c275ef", "name": "https://git.kernel.org/stable/c/bffcdade259c05ab3436b5fab711612093c275ef", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/bffcdade259c05ab3436b5fab711612093c275ef", "name": "https://git.kernel.org/stable/c/bffcdade259c05ab3436b5fab711612093c275ef", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/e2b46cd5796f083e452fbc624f65b80328b0c1a4", "name": "https://git.kernel.org/stable/c/e2b46cd5796f083e452fbc624f65b80328b0c1a4", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/e2b46cd5796f083e452fbc624f65b80328b0c1a4", "name": "https://git.kernel.org/stable/c/e2b46cd5796f083e452fbc624f65b80328b0c1a4", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nipvlan: Fix out-of-bound bugs caused by unset skb->mac_header\n\nIf an AF_PACKET socket is used to send packets through ipvlan and the\ndefault xmit function of the AF_PACKET socket is changed from\ndev_queue_xmit() to packet_direct_xmit() via setsockopt() with the option\nname of PACKET_QDISC_BYPASS, the skb->mac_header may not be reset and\nremains as the initial value of 65535, this may trigger slab-out-of-bounds\nbugs as following:\n\n=================================================================\nUG: KASAN: slab-out-of-bounds in ipvlan_xmit_mode_l2+0xdb/0x330 [ipvlan]\nPU: 2 PID: 1768 Comm: raw_send Kdump: loaded Not tainted 6.0.0-rc4+ #6\nardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-1.fc33\nall Trace:\nprint_address_description.constprop.0+0x1d/0x160\nprint_report.cold+0x4f/0x112\nkasan_report+0xa3/0x130\nipvlan_xmit_mode_l2+0xdb/0x330 [ipvlan]\nipvlan_start_xmit+0x29/0xa0 [ipvlan]\n__dev_direct_xmit+0x2e2/0x380\npacket_direct_xmit+0x22/0x60\npacket_snd+0x7c9/0xc40\nsock_sendmsg+0x9a/0xa0\n__sys_sendto+0x18a/0x230\n__x64_sys_sendto+0x74/0x90\ndo_syscall_64+0x3b/0x90\nentry_SYSCALL_64_after_hwframe+0x63/0xcd\n\nThe root cause is:\n  1. packet_snd() only reset skb->mac_header when sock->type is SOCK_RAW\n     and skb->protocol is not specified as in packet_parse_headers()\n\n  2. packet_direct_xmit() doesn't reset skb->mac_header as dev_queue_xmit()\n\nIn this case, skb->mac_header is 65535 when ipvlan_xmit_mode_l2() is\ncalled. So when ipvlan_xmit_mode_l2() gets mac header with eth_hdr() which\nuse \"skb->head + skb->mac_header\", out-of-bound access occurs.\n\nThis patch replaces eth_hdr() with skb_eth_hdr() in ipvlan_xmit_mode_l2()\nand reset mac header in multicast to solve this out-of-bound bug."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-04-28T13:15Z", "lastModifiedDate": "2024-11-21T07:33Z"}