{"publishedDate": "2022-09-06T18:15Z", "lastModifiedDate": "2025-08-21T18:15Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2022-2433", "ASSIGNER": "security@wordfence.com"}, "description": {"description_data": [{"lang": "en", "value": "The WordPress Infinite Scroll \u2013 Ajax Load More plugin for WordPress is vulnerable to deserialization of untrusted input via the 'alm_repeaters_export' parameter in versions up to, and including 5.5.3. This makes it possible for unauthenticated users to call files using a PHAR wrapper, granted they can trick a site administrator into performing an action such as clicking on a link, that will deserialize and call arbitrary PHP Objects that can be used to perform a variety of malicious actions granted a POP chain is also present. It also requires that the attacker is successful in uploading a file with the serialized payload."}, {"lang": "es", "value": "El plugin WordPress Infinite Scroll - Ajax Load More para WordPress es vulnerable a una deserializaci\u00f3n de entradas no confiables por medio del par\u00e1metro \"alm_repeaters_export\" en versiones hasta 5.5.3 incluy\u00e9ndola. Esto hace posible a usuarios no autenticados llamen a archivos usando un wrapper PHAR, concedido que pueden enga\u00f1ar a un administrador del sitio para llevar a cabo una acci\u00f3n como hacer clic en un enlace, que de serializar\u00e1 y llamar\u00e1 a Objetos PHP arbitrarios que pueden ser usados para llevar a cabo una variedad de acciones maliciosas concedidas una cadena POP tambi\u00e9n est\u00e1 presente. Tambi\u00e9n requiere que el atacante tenga \u00e9xito en subir un archivo con la carga \u00fatil serializada.\n"}]}, "references": {"reference_data": [{"url": "https://github.com/dcooney/ajax-load-more/commit/b577b3257544bc74a5d2ad14f0a0f7df3eb843de", "name": "", "refsource": "", "tags": []}, {"url": "https://plugins.trac.wordpress.org/changeset/2772627/ajax-load-more/trunk/admin/admin.php", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/040ae20d-93e3-4c65-ba74-4ff0b5c1afc7?source=cve", "name": "", "refsource": "", "tags": ["Third Party Advisory"]}, {"url": "https://www.wordfence.com/vulnerability-advisories/#CVE-2022-2433", "name": "", "refsource": "", "tags": ["Third Party Advisory"]}, {"url": "https://plugins.trac.wordpress.org/changeset/2772627/ajax-load-more/trunk/admin/admin.php", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/040ae20d-93e3-4c65-ba74-4ff0b5c1afc7?source=cve", "name": "", "refsource": "", "tags": ["Third Party Advisory"]}, {"url": "https://www.wordfence.com/vulnerability-advisories/#CVE-2022-2433", "name": "", "refsource": "", "tags": ["Third Party Advisory"]}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-502"}]}]}}, "impact": {"baseMetricV3": {"exploitabilityScore": 2.8, "impactScore": 5.9, "cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H", "baseScore": 8.8, "baseSeverity": "HIGH", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH"}}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "negate": false, "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:a:connekthq:ajax_load_more:*:*:*:*:*:wordpress:*:*", "matchCriteriaId": "506CF2A6-A4C6-4243-A655-96694C37296D", "cpe_name": [], "versionEndExcluding": "5.5.4"}]}]}}