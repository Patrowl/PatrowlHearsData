{"publishedDate": "2025-06-18T11:15Z", "lastModifiedDate": "2025-06-18T13:46Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2022-49963", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/i915/ttm: fix CCS handling\n\nCrucible + recent Mesa seems to sometimes hit:\n\nGEM_BUG_ON(num_ccs_blks > NUM_CCS_BLKS_PER_XFER)\n\nAnd it looks like we can also trigger this with gem_lmem_swapping, if we\nmodify the test to use slightly larger object sizes.\n\nLooking closer it looks like we have the following issues in\nmigrate_copy():\n\n  - We are using plain integer in various places, which we can easily\n    overflow with a large object.\n\n  - We pass the entire object size (when the src is lmem) into\n    emit_pte() and then try to copy it, which doesn't work, since we\n    only have a few fixed sized windows in which to map the pages and\n    perform the copy. With an object > 8M we therefore aren't properly\n    copying the pages. And then with an object > 64M we trigger the\n    GEM_BUG_ON(num_ccs_blks > NUM_CCS_BLKS_PER_XFER).\n\nSo it looks like our copy handling for any object > 8M (which is our\nCHUNK_SZ) is currently broken on DG2.\n\nTestcase: igt@gem_lmem_swapping\n(cherry picked from commit 8676145eb2f53a9940ff70910caf0125bd8a4bc2)"}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: drm/i915/ttm: correcci\u00f3n del manejo de CCS Crucible + Mesa reciente parece a veces afectar: GEM_BUG_ON(num_ccs_blks &gt; NUM_CCS_BLKS_PER_XFER) Y parece que tambi\u00e9n podemos activar esto con gem_lmem_swapping, si modificamos la prueba para usar tama\u00f1os de objeto ligeramente mayores. Mirando m\u00e1s de cerca, parece que tenemos los siguientes problemas en migration_copy(): - Estamos usando un entero simple en varios lugares, que podemos desbordar f\u00e1cilmente con un objeto grande. - Pasamos el tama\u00f1o completo del objeto (cuando el src es lmem) a emit_pte() y luego intentamos copiarlo, lo cual no funciona, ya que solo tenemos unas pocas ventanas de tama\u00f1o fijo en las que mapear las p\u00e1ginas y realizar la copia. Con un objeto &gt; 8M, por lo tanto, no estamos copiando correctamente las p\u00e1ginas. Y luego, con un objeto &gt; 64M, activamos GEM_BUG_ON(num_ccs_blks &gt; NUM_CCS_BLKS_PER_XFER). Por lo tanto, parece que nuestra gesti\u00f3n de copias para cualquier objeto &gt; 8M (que es nuestro CHUNK_SZ) est\u00e1 actualmente inactiva en DG2. Caso de prueba: igt@gem_lmem_swapping (seleccionado de el commit 8676145eb2f53a9940ff70910caf0125bd8a4bc2)"}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/8d905254162965c8e6be697d82c7dbf5d08f574d", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/97434cb55bd884bd268626ec41489f79b261b2d4", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {}, "configurations": {"CVE_data_version": "4.0", "nodes": []}}