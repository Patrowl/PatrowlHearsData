{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2022-48770", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/0bcd484587b3b3092e448d27dc369e347e1810c3", "name": "https://git.kernel.org/stable/c/0bcd484587b3b3092e448d27dc369e347e1810c3", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/0bcd484587b3b3092e448d27dc369e347e1810c3", "name": "https://git.kernel.org/stable/c/0bcd484587b3b3092e448d27dc369e347e1810c3", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b82ef4985a6d05e80f604624332430351df7b79a", "name": "https://git.kernel.org/stable/c/b82ef4985a6d05e80f604624332430351df7b79a", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b82ef4985a6d05e80f604624332430351df7b79a", "name": "https://git.kernel.org/stable/c/b82ef4985a6d05e80f604624332430351df7b79a", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b992f01e66150fc5e90be4a96f5eb8e634c8249e", "name": "https://git.kernel.org/stable/c/b992f01e66150fc5e90be4a96f5eb8e634c8249e", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b992f01e66150fc5e90be4a96f5eb8e634c8249e", "name": "https://git.kernel.org/stable/c/b992f01e66150fc5e90be4a96f5eb8e634c8249e", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/ff6bdc205fd0a83bd365405d4e31fb5905826996", "name": "https://git.kernel.org/stable/c/ff6bdc205fd0a83bd365405d4e31fb5905826996", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/ff6bdc205fd0a83bd365405d4e31fb5905826996", "name": "https://git.kernel.org/stable/c/ff6bdc205fd0a83bd365405d4e31fb5905826996", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Guard against accessing NULL pt_regs in bpf_get_task_stack()\n\ntask_pt_regs() can return NULL on powerpc for kernel threads. This is\nthen used in __bpf_get_stack() to check for user mode, resulting in a\nkernel oops. Guard against this by checking return value of\ntask_pt_regs() before trying to obtain the call chain."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-06-20T12:15Z", "lastModifiedDate": "2024-11-21T07:33Z"}