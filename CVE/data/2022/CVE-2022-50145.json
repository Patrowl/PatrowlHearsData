{"publishedDate": "2025-06-18T11:15Z", "lastModifiedDate": "2025-06-18T13:47Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2022-50145", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: sf-pdma: Add multithread support for a DMA channel\n\nWhen we get a DMA channel and try to use it in multiple threads it\nwill cause oops and hanging the system.\n\n% echo 64 > /sys/module/dmatest/parameters/threads_per_chan\n% echo 10000 > /sys/module/dmatest/parameters/iterations\n% echo 1 > /sys/module/dmatest/parameters/run\n[   89.480664] Unable to handle kernel NULL pointer dereference at virtual\n               address 00000000000000a0\n[   89.488725] Oops [#1]\n[   89.494708] CPU: 2 PID: 1008 Comm: dma0chan0-copy0 Not tainted\n               5.17.0-rc5\n[   89.509385] epc : vchan_find_desc+0x32/0x46\n[   89.513553]  ra : sf_pdma_tx_status+0xca/0xd6\n\nThis happens because of data race. Each thread rewrite channels's\ndescriptor as soon as device_prep_dma_memcpy() is called. It leads to the\nsituation when the driver thinks that it uses right descriptor that\nactually is freed or substituted for other one.\n\nWith current fixes a descriptor changes its value only when it has\nbeen used. A new descriptor is acquired from vc->desc_issued queue that\nis already filled with descriptors that are ready to be sent. Threads\nhave no direct access to DMA channel descriptor. Now it is just possible\nto queue a descriptor for further processing."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: dmaengine: sf-pdma: Agregar soporte multihilo para un canal DMA Cuando obtenemos un canal DMA e intentamos usarlo en m\u00faltiples subprocesos, provocar\u00e1 errores y colgar\u00e1 el sistema. % echo 64 &gt; /sys/module/dmatest/parameters/threads_per_chan % echo 10000 &gt; /sys/module/dmatest/parameters/iterations % echo 1 &gt; /sys/module/dmatest/parameters/run [ 89.480664] No se puede manejar la desreferencia del puntero NULL del n\u00facleo en la direcci\u00f3n virtual 00000000000000a0 [ 89.488725] Ups [#1] [ 89.494708] CPU: 2 PID: 1008 Comm: dma0chan0-copy0 No contaminado 5.17.0-rc5 [ 89.509385] epc : vchan_find_desc+0x32/0x46 [ 89.513553] ra : sf_pdma_tx_status+0xca/0xd6 Esto ocurre debido a la ejecuci\u00f3n de datos. Cada hilo reescribe el descriptor del canal en cuanto se llama a device_prep_dma_memcpy(). Esto provoca que el controlador crea que est\u00e1 usando el descriptor correcto, pero en realidad se libera o sustituye a otro. Con las correcciones actuales, un descriptor cambia su valor solo cuando se ha usado. Se obtiene un nuevo descriptor de la cola vc-&gt;desc_issued, que ya contiene descriptores listos para enviarse. Los hilos no tienen acceso directo al descriptor del canal DMA. Ahora solo es posible poner en cola un descriptor para su posterior procesamiento."}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/4c7350b1dd8a192af844de32fc99b9e34c876fda", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/5ab2782c944e324008ef5d658f2494a9f0e3c5ac", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/a93b3f1e11971a91b6441b6d47488f4492cc113f", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b2cc5c465c2cb8ab697c3fd6583c614e3f6cfbcc", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b9b4992f897be9b0b9e3a3b956cab6b75ccc3f11", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {}, "configurations": {"CVE_data_version": "4.0", "nodes": []}}