{"publishedDate": "2025-02-26T07:01Z", "lastModifiedDate": "2025-02-26T07:01Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2022-49552", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix combination of jit blinding and pointers to bpf subprogs.\n\nThe combination of jit blinding and pointers to bpf subprogs causes:\n[   36.989548] BUG: unable to handle page fault for address: 0000000100000001\n[   36.990342] #PF: supervisor instruction fetch in kernel mode\n[   36.990968] #PF: error_code(0x0010) - not-present page\n[   36.994859] RIP: 0010:0x100000001\n[   36.995209] Code: Unable to access opcode bytes at RIP 0xffffffd7.\n[   37.004091] Call Trace:\n[   37.004351]  <TASK>\n[   37.004576]  ? bpf_loop+0x4d/0x70\n[   37.004932]  ? bpf_prog_3899083f75e4c5de_F+0xe3/0x13b\n\nThe jit blinding logic didn't recognize that ld_imm64 with an address\nof bpf subprogram is a special instruction and proceeded to randomize it.\nBy itself it wouldn't have been an issue, but jit_subprogs() logic\nrelies on two step process to JIT all subprogs and then JIT them\nagain when addresses of all subprogs are known.\nBlinding process in the first JIT phase caused second JIT to miss\nadjustment of special ld_imm64.\n\nFix this issue by ignoring special ld_imm64 instructions that don't have\nuser controlled constants and shouldn't be blinded."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: bpf: Se corrige la combinaci\u00f3n de cegamiento jit y punteros a subprogramas bpf. La combinaci\u00f3n de cegamiento jit y punteros a subprogramas bpf provoca: [ 36.989548] BUG: unable to handle page fault for address: 0000000100000001 [ 36.990342] #PF: supervisor instruction fetch in kernel mode [ 36.990968] #PF: error_code(0x0010) - not-present page [ 36.994859] RIP: 0010:0x100000001 [ 36.995209] Code: Unable to access opcode bytes at RIP 0xffffffd7. [ 37.004091] Call Trace: [ 37.004351]  [ 37.004576] ? bpf_loop+0x4d/0x70 [ 37.004932] ? bpf_prog_3899083f75e4c5de_F+0xe3/0x13b La l\u00f3gica de cegamiento de jit no reconoci\u00f3 que ld_imm64 con una direcci\u00f3n de subprograma bpf es una instrucci\u00f3n especial y procedi\u00f3 a aleatorizarla. Por s\u00ed sola no habr\u00eda sido un problema, pero la l\u00f3gica jit_subprogs() se basa en un proceso de dos pasos para realizar el JIT de todos los subprogramas y luego realizar el JIT nuevamente cuando se conocen las direcciones de todos los subprogramas. El proceso de cegamiento en la primera fase de JIT provoc\u00f3 que el segundo JIT no ajustara el ld_imm64 especial. Solucione este problema ignorando las instrucciones especiales ld_imm64 que no tienen constantes controladas por el usuario y que no deber\u00edan estar ocultas."}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/4b6313cf99b0d51b49aeaea98ec76ca8161ecb80", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/a029b02b47dd5bb87a21550d9d9a80cb4dd3f714", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/d106a3e96fca30e44081eae9c27aab28fc132a46", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {}, "configurations": {"CVE_data_version": "4.0", "nodes": []}}