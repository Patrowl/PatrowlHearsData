{"publishedDate": "2025-02-26T07:00Z", "lastModifiedDate": "2025-02-26T07:00Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2022-49086", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: openvswitch: fix leak of nested actions\n\nWhile parsing user-provided actions, openvswitch module may dynamically\nallocate memory and store pointers in the internal copy of the actions.\nSo this memory has to be freed while destroying the actions.\n\nCurrently there are only two such actions: ct() and set().  However,\nthere are many actions that can hold nested lists of actions and\novs_nla_free_flow_actions() just jumps over them leaking the memory.\n\nFor example, removal of the flow with the following actions will lead\nto a leak of the memory allocated by nf_ct_tmpl_alloc():\n\n  actions:clone(ct(commit),0)\n\nNon-freed set() action may also leak the 'dst' structure for the\ntunnel info including device references.\n\nUnder certain conditions with a high rate of flow rotation that may\ncause significant memory leak problem (2MB per second in reporter's\ncase).  The problem is also hard to mitigate, because the user doesn't\nhave direct control over the datapath flows generated by OVS.\n\nFix that by iterating over all the nested actions and freeing\neverything that needs to be freed recursively.\n\nNew build time assertion should protect us from this problem if new\nactions will be added in the future.\n\nUnfortunately, openvswitch module doesn't use NLA_F_NESTED, so all\nattributes has to be explicitly checked.  sample() and clone() actions\nare mixing extra attributes into the user-provided action list.  That\nprevents some code generalization too."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net: openvswitch: fix leak of nested shares Mientras analiza acciones proporcionadas por el usuario, el m\u00f3dulo openvswitch puede asignar memoria din\u00e1micamente y almacenar punteros en la copia interna de las acciones. Por lo tanto, esta memoria debe liberarse mientras se destruyen las acciones. Actualmente solo hay dos acciones de este tipo: ct() y set(). Sin embargo, hay muchas acciones que pueden contener listas anidadas de acciones y ovs_nla_free_flow_actions() simplemente las salta, perdiendo la memoria. Por ejemplo, la eliminaci\u00f3n del flujo con las siguientes acciones provocar\u00e1 una p\u00e9rdida de la memoria asignada por nf_ct_tmpl_alloc(): shares:clone(ct(commit),0) La acci\u00f3n set() no liberada tambi\u00e9n puede perder la estructura 'dst' para la informaci\u00f3n del t\u00fanel, incluidas las referencias del dispositivo. Bajo ciertas condiciones con una alta tasa de rotaci\u00f3n del flujo, esto puede causar un problema de p\u00e9rdida de memoria significativo (2 MB por segundo en el caso del reportero). El problema tambi\u00e9n es dif\u00edcil de mitigar, porque el usuario no tiene control directo sobre los flujos de rutas de datos generados por OVS. Solucione eso iterando sobre todas las acciones anidadas y liberando todo lo que se necesite liberar de forma recursiva. La nueva afirmaci\u00f3n de tiempo de compilaci\u00f3n deber\u00eda protegernos de este problema si se agregan nuevas acciones en el futuro. Desafortunadamente, el m\u00f3dulo openvswitch no usa NLA_F_NESTED, por lo que todos los atributos deben verificarse expl\u00edcitamente. Las acciones sample() y clone() mezclan atributos adicionales en la lista de acciones proporcionada por el usuario. Eso tambi\u00e9n evita cierta generalizaci\u00f3n del c\u00f3digo."}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/1f30fb9166d4f15a1aa19449b9da871fe0ed4796", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/3554c214b83ec9a839ed574263a34218f372990c", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/53bce9d19b0a9d245b25cd050b81652ed974a509", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/5ae05b5eb58773cfec307ff88aff4cfd843c4cff", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/7438dc55c0709819b813f4778aec2c48b782990b", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/837b96d8103938e35e7d92cd9db96af914ca4fff", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/ef6f9ce0a79aa23b10fc5f3b3cab3814a25aac40", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {}, "configurations": {"CVE_data_version": "4.0", "nodes": []}}