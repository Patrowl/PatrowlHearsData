{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2022-48704", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/16cb367daa446923d82e332537f446a4cc784b40", "name": "https://git.kernel.org/stable/c/16cb367daa446923d82e332537f446a4cc784b40", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/16cb367daa446923d82e332537f446a4cc784b40", "name": "https://git.kernel.org/stable/c/16cb367daa446923d82e332537f446a4cc784b40", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/4e25e8f27fdbdc6fd55cc572a9939bf24500b9e8", "name": "https://git.kernel.org/stable/c/4e25e8f27fdbdc6fd55cc572a9939bf24500b9e8", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/4e25e8f27fdbdc6fd55cc572a9939bf24500b9e8", "name": "https://git.kernel.org/stable/c/4e25e8f27fdbdc6fd55cc572a9939bf24500b9e8", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/5a7a5b2edac4b05abd744eeaebda46d9dacd952d", "name": "https://git.kernel.org/stable/c/5a7a5b2edac4b05abd744eeaebda46d9dacd952d", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/5a7a5b2edac4b05abd744eeaebda46d9dacd952d", "name": "https://git.kernel.org/stable/c/5a7a5b2edac4b05abd744eeaebda46d9dacd952d", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/826b46fd5974113515abe9e4fc8178009a8ce18c", "name": "https://git.kernel.org/stable/c/826b46fd5974113515abe9e4fc8178009a8ce18c", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/826b46fd5974113515abe9e4fc8178009a8ce18c", "name": "https://git.kernel.org/stable/c/826b46fd5974113515abe9e4fc8178009a8ce18c", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b878da58df2c40b08914d3960e2224040fd1fbfe", "name": "https://git.kernel.org/stable/c/b878da58df2c40b08914d3960e2224040fd1fbfe", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b878da58df2c40b08914d3960e2224040fd1fbfe", "name": "https://git.kernel.org/stable/c/b878da58df2c40b08914d3960e2224040fd1fbfe", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/c0a45f41fde4a0f2c900f719817493ee5c4a5aa3", "name": "https://git.kernel.org/stable/c/c0a45f41fde4a0f2c900f719817493ee5c4a5aa3", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/c0a45f41fde4a0f2c900f719817493ee5c4a5aa3", "name": "https://git.kernel.org/stable/c/c0a45f41fde4a0f2c900f719817493ee5c4a5aa3", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/c72d97146fc5a4dff381b1737f6167e89860430d", "name": "https://git.kernel.org/stable/c/c72d97146fc5a4dff381b1737f6167e89860430d", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/c72d97146fc5a4dff381b1737f6167e89860430d", "name": "https://git.kernel.org/stable/c/c72d97146fc5a4dff381b1737f6167e89860430d", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/f461950fdc374a3ada5a63c669d997de4600dffe", "name": "https://git.kernel.org/stable/c/f461950fdc374a3ada5a63c669d997de4600dffe", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/f461950fdc374a3ada5a63c669d997de4600dffe", "name": "https://git.kernel.org/stable/c/f461950fdc374a3ada5a63c669d997de4600dffe", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/radeon: add a force flush to delay work when radeon\n\nAlthough radeon card fence and wait for gpu to finish processing current batch rings,\nthere is still a corner case that radeon lockup work queue may not be fully flushed,\nand meanwhile the radeon_suspend_kms() function has called pci_set_power_state() to\nput device in D3hot state.\nPer PCI spec rev 4.0 on 5.3.1.4.1 D3hot State.\n> Configuration and Message requests are the only TLPs accepted by a Function in\n> the D3hot state. All other received Requests must be handled as Unsupported Requests,\n> and all received Completions may optionally be handled as Unexpected Completions.\nThis issue will happen in following logs:\nUnable to handle kernel paging request at virtual address 00008800e0008010\nCPU 0 kworker/0:3(131): Oops 0\npc = [<ffffffff811bea5c>]  ra = [<ffffffff81240844>]  ps = 0000 Tainted: G        W\npc is at si_gpu_check_soft_reset+0x3c/0x240\nra is at si_dma_is_lockup+0x34/0xd0\nv0 = 0000000000000000  t0 = fff08800e0008010  t1 = 0000000000010000\nt2 = 0000000000008010  t3 = fff00007e3c00000  t4 = fff00007e3c00258\nt5 = 000000000000ffff  t6 = 0000000000000001  t7 = fff00007ef078000\ns0 = fff00007e3c016e8  s1 = fff00007e3c00000  s2 = fff00007e3c00018\ns3 = fff00007e3c00000  s4 = fff00007fff59d80  s5 = 0000000000000000\ns6 = fff00007ef07bd98\na0 = fff00007e3c00000  a1 = fff00007e3c016e8  a2 = 0000000000000008\na3 = 0000000000000001  a4 = 8f5c28f5c28f5c29  a5 = ffffffff810f4338\nt8 = 0000000000000275  t9 = ffffffff809b66f8  t10 = ff6769c5d964b800\nt11= 000000000000b886  pv = ffffffff811bea20  at = 0000000000000000\ngp = ffffffff81d89690  sp = 00000000aa814126\nDisabling lock debugging due to kernel taint\nTrace:\n[<ffffffff81240844>] si_dma_is_lockup+0x34/0xd0\n[<ffffffff81119610>] radeon_fence_check_lockup+0xd0/0x290\n[<ffffffff80977010>] process_one_work+0x280/0x550\n[<ffffffff80977350>] worker_thread+0x70/0x7c0\n[<ffffffff80977410>] worker_thread+0x130/0x7c0\n[<ffffffff80982040>] kthread+0x200/0x210\n[<ffffffff809772e0>] worker_thread+0x0/0x7c0\n[<ffffffff80981f8c>] kthread+0x14c/0x210\n[<ffffffff80911658>] ret_from_kernel_thread+0x18/0x20\n[<ffffffff80981e40>] kthread+0x0/0x210\n Code: ad3e0008  43f0074a  ad7e0018  ad9e0020  8c3001e8  40230101\n <88210000> 4821ed21\nSo force lockup work queue flush to fix this problem."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-05-03T18:15Z", "lastModifiedDate": "2024-11-21T07:33Z"}