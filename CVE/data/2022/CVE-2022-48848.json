{"publishedDate": "2024-07-16T13:15Z", "lastModifiedDate": "2024-11-21T07:34Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2022-48848", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\ntracing/osnoise: Do not unregister events twice\n\nNicolas reported that using:\n\n # trace-cmd record -e all -M 10 -p osnoise --poll\n\nResulted in the following kernel warning:\n\n ------------[ cut here ]------------\n WARNING: CPU: 0 PID: 1217 at kernel/tracepoint.c:404 tracepoint_probe_unregister+0x280/0x370\n [...]\n CPU: 0 PID: 1217 Comm: trace-cmd Not tainted 5.17.0-rc6-next-20220307-nico+ #19\n RIP: 0010:tracepoint_probe_unregister+0x280/0x370\n [...]\n CR2: 00007ff919b29497 CR3: 0000000109da4005 CR4: 0000000000170ef0\n Call Trace:\n  <TASK>\n  osnoise_workload_stop+0x36/0x90\n  tracing_set_tracer+0x108/0x260\n  tracing_set_trace_write+0x94/0xd0\n  ? __check_object_size.part.0+0x10a/0x150\n  ? selinux_file_permission+0x104/0x150\n  vfs_write+0xb5/0x290\n  ksys_write+0x5f/0xe0\n  do_syscall_64+0x3b/0x90\n  entry_SYSCALL_64_after_hwframe+0x44/0xae\n RIP: 0033:0x7ff919a18127\n [...]\n ---[ end trace 0000000000000000 ]---\n\nThe warning complains about an attempt to unregister an\nunregistered tracepoint.\n\nThis happens on trace-cmd because it first stops tracing, and\nthen switches the tracer to nop. Which is equivalent to:\n\n  # cd /sys/kernel/tracing/\n  # echo osnoise > current_tracer\n  # echo 0 > tracing_on\n  # echo nop > current_tracer\n\nThe osnoise tracer stops the workload when no trace instance\nis actually collecting data. This can be caused both by\ndisabling tracing or disabling the tracer itself.\n\nTo avoid unregistering events twice, use the existing\ntrace_osnoise_callback_enabled variable to check if the events\n(and the workload) are actually active before trying to\ndeactivate them."}, {"lang": "es", "value": "En el kernel de Linux, se resolvi\u00f3 la siguiente vulnerabilidad: rastreo/osnoise: no cancelar el registro de eventos dos veces Nicolas inform\u00f3 que al usar: # trace-cmd record -e all -M 10 -p osnoise --poll result\u00f3 en la siguiente advertencia del kernel: ------------[ cortar aqu\u00ed ]------------ ADVERTENCIA: CPU: 0 PID: 1217 en kernel/tracepoint.c:404 tracepoint_probe_unregister+0x280/0x370 [ ...] CPU: 0 PID: 1217 Comm: Trace-CMD No contaminado 5.17.0-RC6-Next-20220307-Nico+ #19 RIP: 0010: TRACEPOINT_PROBE_UNREGister+ 0x280/0x370 [...] CR2: 00007ff919b29497 CR3: 00000001099DA4005 CR4: 0000000000170ef0 Seguimiento de llamadas:  osnoise_workload_stop+0x36/0x90 tracing_set_tracer+0x108/0x260 tracing_set_trace_write+0x94/0xd0 ? __check_object_size.part.0+0x10a/0x150 ? selinux_file_permission+0x104/0x150 vfs_write+0xb5/0x290 ksys_write+0x5f/0xe0 do_syscall_64+0x3b/0x90 Entry_SYSCALL_64_after_hwframe+0x44/0xae RIP: 0033:0x7ff919a18127 [...] ---[ final de seguimiento 0000000000000000 ]--- La advertencia se queja de un intento de cancelar el registro de un punto de seguimiento no registrado. Esto sucede en trace-cmd porque primero detiene el rastreo y luego cambia el rastreador a nop. Lo que equivale a: # cd /sys/kernel/tracing/ # echo osnoise &gt; current_tracer # echo 0 &gt; tracing_on # echo nop &gt; current_tracer El rastreador osnoise detiene la carga de trabajo cuando ninguna instancia de seguimiento est\u00e1 recopilando datos. Esto puede deberse tanto a la desactivaci\u00f3n del rastreo como a la desactivaci\u00f3n del propio rastreador. Para evitar cancelar el registro de eventos dos veces, use la variable trace_osnoise_callback_enabled existente para verificar si los eventos (y la carga de trabajo) est\u00e1n realmente activos antes de intentar desactivarlos."}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/4e10787d18379d9b296290c2288097feddef16d4", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/f0cfe17bcc1dd2f0872966b554a148e888833ee9", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/4e10787d18379d9b296290c2288097feddef16d4", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/f0cfe17bcc1dd2f0872966b554a148e888833ee9", "name": "", "refsource": "", "tags": ["Patch"]}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {"baseMetricV3": {"exploitabilityScore": 1.8, "impactScore": 5.9, "cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "baseScore": 7.8, "baseSeverity": "HIGH", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH"}}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "negate": false, "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "matchCriteriaId": "83FDEDF2-0E19-4879-91FD-171E66D1B335", "cpe_name": [], "versionStartIncluding": "5.16", "versionEndExcluding": "5.16.15"}]}]}}