{"publishedDate": "2025-02-27T02:15Z", "lastModifiedDate": "2025-03-13T13:15Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2025-21721", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: handle errors that nilfs_prepare_chunk() may return\n\nPatch series \"nilfs2: fix issues with rename operations\".\n\nThis series fixes BUG_ON check failures reported by syzbot around rename\noperations, and a minor behavioral issue where the mtime of a child\ndirectory changes when it is renamed instead of moved.\n\n\nThis patch (of 2):\n\nThe directory manipulation routines nilfs_set_link() and\nnilfs_delete_entry() rewrite the directory entry in the folio/page\npreviously read by nilfs_find_entry(), so error handling is omitted on the\nassumption that nilfs_prepare_chunk(), which prepares the buffer for\nrewriting, will always succeed for these.  And if an error is returned, it\ntriggers the legacy BUG_ON() checks in each routine.\n\nThis assumption is wrong, as proven by syzbot: the buffer layer called by\nnilfs_prepare_chunk() may call nilfs_get_block() if necessary, which may\nfail due to metadata corruption or other reasons.  This has been there all\nalong, but improved sanity checks and error handling may have made it more\nreproducible in fuzzing tests.\n\nFix this issue by adding missing error paths in nilfs_set_link(),\nnilfs_delete_entry(), and their caller nilfs_rename()."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: nilfs2: manejar errores que nilfs_prepare_chunk() puede devolver Serie de parches \"nilfs2: soluciona problemas con operaciones de cambio de nombre\". Esta serie corrige los fallos de comprobaci\u00f3n BUG_ON informados por syzbot en torno a las operaciones de cambio de nombre, y un problema de comportamiento menor en el que el mtime de un directorio secundario cambia cuando se le cambia el nombre en lugar de moverlo. Este parche (de 2): Las rutinas de manipulaci\u00f3n de directorios nilfs_set_link() y nilfs_delete_entry() reescriben la entrada del directorio en el folio/p\u00e1gina le\u00eddo previamente por nilfs_find_entry(), por lo que se omite el manejo de errores asumiendo que nilfs_prepare_chunk(), que prepara el b\u00fafer para la reescritura, siempre tendr\u00e1 \u00e9xito para estos. Y si se devuelve un error, activa las comprobaciones BUG_ON() heredadas en cada rutina. Esta suposici\u00f3n es err\u00f3nea, como lo demuestra syzbot: la capa de b\u00fafer llamada por nilfs_prepare_chunk() puede llamar a nilfs_get_block() si es necesario, lo que puede fallar debido a la corrupci\u00f3n de metadatos u otras razones. Esto ha estado ah\u00ed desde siempre, pero las comprobaciones de cordura mejoradas y el manejo de errores pueden haberlo hecho m\u00e1s reproducible en pruebas de fuzzing. Solucione este problema agregando rutas de error faltantes en nilfs_set_link(), nilfs_delete_entry() y su llamador nilfs_rename()."}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/1ee2d454baa361d2964e3e2f2cca9ee3f769d93c", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/481136234dfe96c7f92770829bec6111c7c5f5dd", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/607dc724b162f4452dc768865e578c1a509a1c8c", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/7891ac3b0a5c56f7148af507306308ab841cdc31", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b38c6c260c2415c7f0968871305e7a093daabb4c", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/eddd3176b8c4c83a46ab974574cda7c3dfe09388", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/ee70999a988b8abc3490609142f50ebaa8344432", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/f70bd2d8ca454e0ed78970f72147ca321dbaa015", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {}, "configurations": {"CVE_data_version": "4.0", "nodes": []}}