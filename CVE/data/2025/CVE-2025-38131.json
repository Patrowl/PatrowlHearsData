{"publishedDate": "2025-07-03T09:15Z", "lastModifiedDate": "2025-07-03T15:13Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2025-38131", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\ncoresight: prevent deactivate active config while enabling the config\n\nWhile enable active config via cscfg_csdev_enable_active_config(),\nactive config could be deactivated via configfs' sysfs interface.\nThis could make UAF issue in below scenario:\n\nCPU0                                          CPU1\n(sysfs enable)                                load module\n                                              cscfg_load_config_sets()\n                                              activate config. // sysfs\n                                              (sys_active_cnt == 1)\n...\ncscfg_csdev_enable_active_config()\nlock(csdev->cscfg_csdev_lock)\n// here load config activate by CPU1\nunlock(csdev->cscfg_csdev_lock)\n\n                                              deactivate config // sysfs\n                                              (sys_activec_cnt == 0)\n                                              cscfg_unload_config_sets()\n                                              unload module\n\n// access to config_desc which freed\n// while unloading module.\ncscfg_csdev_enable_config\n\nTo address this, use cscfg_config_desc's active_cnt as a reference count\n which will be holded when\n    - activate the config.\n    - enable the activated config.\nand put the module reference when config_active_cnt == 0."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: coresight: impide la desactivaci\u00f3n de la configuraci\u00f3n activa al habilitarla. Al habilitar la configuraci\u00f3n activa mediante cscfg_csdev_enable_active_config(), esta podr\u00eda desactivarse mediante la interfaz sysfs de configfs. Esto podr\u00eda generar un problema de UAF en el siguiente escenario: CPU0 CPU1 (habilitaci\u00f3n sysfs) carga el m\u00f3dulo cscfg_load_config_sets() activa la configuraci\u00f3n. // sysfs (sys_active_cnt == 1) ... cscfg_csdev_enable_active_config() lock(csdev-&gt;cscfg_csdev_lock) // aqu\u00ed carga la configuraci\u00f3n activada por CPU1 unlock(csdev-&gt;cscfg_csdev_lock) desactiva la configuraci\u00f3n // sysfs (sys_activec_cnt == 0) cscfg_unload_config_sets() descarga el m\u00f3dulo // acceso a config_desc que se liber\u00f3 // mientras se descargaba el m\u00f3dulo. cscfg_csdev_enable_config Para solucionar esto, utilice active_cnt de cscfg_config_desc como un recuento de referencia que se mantendr\u00e1 cuando: - active la configuraci\u00f3n. - habilite la configuraci\u00f3n activada y coloque la referencia del m\u00f3dulo cuando config_active_cnt == 0."}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/31028812724cef7bd57a51525ce58a32a6d73b22", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/408c97c4a5e0b634dcd15bf8b8808b382e888164", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b3b4efa2e623aecaebd7c9b9e4171f5c659e9724", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/dfe8224c9c7a43d356eb9f74b06868aa05f90223", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/ed42ee1ed05ff2f4c36938379057413a40c56680", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {}, "configurations": {"CVE_data_version": "4.0", "nodes": []}}