{"publishedDate": "2025-03-27T15:15Z", "lastModifiedDate": "2025-03-27T16:45Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2025-21876", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\niommu/vt-d: Fix suspicious RCU usage\n\nCommit <d74169ceb0d2> (\"iommu/vt-d: Allocate DMAR fault interrupts\nlocally\") moved the call to enable_drhd_fault_handling() to a code\npath that does not hold any lock while traversing the drhd list. Fix\nit by ensuring the dmar_global_lock lock is held when traversing the\ndrhd list.\n\nWithout this fix, the following warning is triggered:\n =============================\n WARNING: suspicious RCU usage\n 6.14.0-rc3 #55 Not tainted\n -----------------------------\n drivers/iommu/intel/dmar.c:2046 RCU-list traversed in non-reader section!!\n               other info that might help us debug this:\n               rcu_scheduler_active = 1, debug_locks = 1\n 2 locks held by cpuhp/1/23:\n #0: ffffffff84a67c50 (cpu_hotplug_lock){++++}-{0:0}, at: cpuhp_thread_fun+0x87/0x2c0\n #1: ffffffff84a6a380 (cpuhp_state-up){+.+.}-{0:0}, at: cpuhp_thread_fun+0x87/0x2c0\n stack backtrace:\n CPU: 1 UID: 0 PID: 23 Comm: cpuhp/1 Not tainted 6.14.0-rc3 #55\n Call Trace:\n  <TASK>\n  dump_stack_lvl+0xb7/0xd0\n  lockdep_rcu_suspicious+0x159/0x1f0\n  ? __pfx_enable_drhd_fault_handling+0x10/0x10\n  enable_drhd_fault_handling+0x151/0x180\n  cpuhp_invoke_callback+0x1df/0x990\n  cpuhp_thread_fun+0x1ea/0x2c0\n  smpboot_thread_fn+0x1f5/0x2e0\n  ? __pfx_smpboot_thread_fn+0x10/0x10\n  kthread+0x12a/0x2d0\n  ? __pfx_kthread+0x10/0x10\n  ret_from_fork+0x4a/0x60\n  ? __pfx_kthread+0x10/0x10\n  ret_from_fork_asm+0x1a/0x30\n  </TASK>\n\nHolding the lock in enable_drhd_fault_handling() triggers a lockdep splat\nabout a possible deadlock between dmar_global_lock and cpu_hotplug_lock.\nThis is avoided by not holding dmar_global_lock when calling\niommu_device_register(), which initiates the device probe process."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: iommu/vt-d: Correcci\u00f3n de uso sospechoso de RCU. El commit  (\"iommu/vt-d: Asignar interrupciones de fallo DMAR localmente\") movi\u00f3 la llamada a enable_drhd_fault_handling() a una ruta de c\u00f3digo que no mantiene ning\u00fan bloqueo al recorrer la lista drhd. Corr\u00edjala asegur\u00e1ndose de que el bloqueo dmar_global_lock se mantenga al recorrer la lista drhd. Sin esta correcci\u00f3n, se activa la siguiente advertencia: ============================= ADVERTENCIA: uso sospechoso de RCU 6.14.0-rc3 #55 No contaminado ----------------------------- drivers/iommu/intel/dmar.c:2046 \u00a1Lista de RCU recorrida en una secci\u00f3n que no es de lectura! Otra informaci\u00f3n que podr\u00eda ayudarnos a depurar esto: rcu_scheduler_active = 1, debug_locks = 1 2 bloqueos mantenidos por cpuhp/1/23: #0: ffffffff84a67c50 (cpu_hotplug_lock){++++}-{0:0}, en: cpuhp_thread_fun+0x87/0x2c0 #1: ffffffff84a6a380 (cpuhp_state-up){+.+.}-{0:0}, en: cpuhp_thread_fun+0x87/0x2c0 seguimiento de pila: CPU: 1 UID: 0 PID: 23 Comm: cpuhp/1 No contaminado 6.14.0-rc3 #55 Seguimiento de llamadas:   dump_stack_lvl+0xb7/0xd0 lockdep_rcu_suspicious+0x159/0x1f0 ? __pfx_enable_drhd_fault_handling+0x10/0x10 enable_drhd_fault_handling+0x151/0x180 cpuhp_invoke_callback+0x1df/0x990 cpuhp_thread_fun+0x1ea/0x2c0 smpboot_thread_fn+0x1f5/0x2e0 ? __pfx_smpboot_thread_fn+0x10/0x10 kthread+0x12a/0x2d0 ? __pfx_kthread+0x10/0x10 ret_from_fork+0x4a/0x60 ? __pfx_kthread+0x10/0x10 ret_from_fork_asm+0x1a/0x30  Mantener el bloqueo en enable_drhd_fault_handling() activa un aviso de bloqueo sobre un posible interbloqueo entre dmar_global_lock y cpu_hotplug_lock. Esto se evita al no mantener dmar_global_lock al llamar a iommu_device_register(), que inicia el proceso de sondeo del dispositivo."}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/4117c72938493a77ab53cc4b8284be8fb6ec8065", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b150654f74bf0df8e6a7936d5ec51400d9ec06d8", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/c603ccbe91d189849e1439134598ec567088dcec", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {}, "configurations": {"CVE_data_version": "4.0", "nodes": []}}