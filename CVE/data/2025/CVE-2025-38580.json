{"publishedDate": "2025-08-19T17:15Z", "lastModifiedDate": "2025-08-20T14:40Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2025-38580", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix inode use after free in ext4_end_io_rsv_work()\n\nIn ext4_io_end_defer_completion(), check if io_end->list_vec is empty to\navoid adding an io_end that requires no conversion to the\ni_rsv_conversion_list, which in turn prevents starting an unnecessary\nworker. An ext4_emergency_state() check is also added to avoid attempting\nto abort the journal in an emergency state.\n\nAdditionally, ext4_put_io_end_defer() is refactored to call\next4_io_end_defer_completion() directly instead of being open-coded.\nThis also prevents starting an unnecessary worker when EXT4_IO_END_FAILED\nis set but data_err=abort is not enabled.\n\nThis ensures that the check in ext4_put_io_end_defer() is consistent with\nthe check in ext4_end_bio(). Otherwise, we might add an io_end to the\ni_rsv_conversion_list and then call ext4_finish_bio(), after which the\ninode could be freed before ext4_end_io_rsv_work() is called, triggering\na use-after-free issue."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ext4: se corrige el uso de inodo use after free en ext4_end_io_rsv_work() En ext4_io_end_defer_completion(), se comprueba si io_end-&gt;list_vec est\u00e1 vac\u00edo para evitar a\u00f1adir un io_end que no requiere conversi\u00f3n a i_rsv_conversion_list, lo que a su vez impide iniciar un trabajador innecesario. Tambi\u00e9n se a\u00f1ade una comprobaci\u00f3n ext4_emergency_state() para evitar intentar abortar el diario en un estado de emergencia. Adem\u00e1s, ext4_put_io_end_defer() se refactoriza para llamar a ext4_io_end_defer_completion() directamente en lugar de estar en c\u00f3digo abierto. Esto tambi\u00e9n impide iniciar un trabajador innecesario cuando EXT4_IO_END_FAILED est\u00e1 configurado pero data_err=abort no est\u00e1 habilitado. Esto garantiza que la comprobaci\u00f3n en ext4_put_io_end_defer() sea coherente con la comprobaci\u00f3n en ext4_end_bio(). De lo contrario, podr\u00edamos agregar un io_end a i_rsv_conversion_list y luego llamar a ext4_finish_bio(), despu\u00e9s de lo cual el inodo podr\u00eda liberarse antes de que se llame a ext4_end_io_rsv_work(), lo que desencadenar\u00eda un problema de use-after-free."}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/469c44e66e2110054949609dde095788320139d0", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/ac999862b98a0f49e858e509f776be51406f1e77", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/c678bdc998754589cea2e6afab9401d7d8312ac4", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {}, "configurations": {"CVE_data_version": "4.0", "nodes": []}}