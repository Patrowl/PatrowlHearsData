{"publishedDate": "2025-02-18T18:15Z", "lastModifiedDate": "2025-02-18T18:15Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2025-26620", "ASSIGNER": "security-advisories@github.com"}, "description": {"description_data": [{"lang": "en", "value": "Duende.AccessTokenManagement is a set of .NET libraries that manage OAuth and OpenId Connect access tokens. Duende.AccessTokenManagement contains a race condition when requesting access tokens using the client credentials flow. Concurrent requests to obtain an access token using differing protocol parameters can return access tokens obtained with the wrong scope, resource indicator, or other protocol parameters. Such usage is somewhat atypical, and only a small percentage of users are likely to be affected. Duende.AccessTokenManagement can request access tokens using the client credentials flow in several ways. In basic usage, the client credentials flow is configured once and the parameters do not vary. In more advanced situations, requests with varying protocol parameters may be made by calling specific overloads of these methods: `HttpContext.GetClientAccessTokenAsync()` and `IClientCredentialsTokenManagementService.GetAccessTokenAsync()`. There are overloads of both of these methods that accept a `TokenRequestParameters` object that customizes token request parameters. However, concurrent requests with varying `TokenRequestParameters` will result in the same token for all concurrent calls. Most users can simply update the NuGet package to the latest version. Customizations of the `IClientCredentialsTokenCache` that derive from the default implementation (`DistributedClientCredentialsTokenCache`) will require a small code change, as its constructor was changed to add a dependency on the `ITokenRequestSynchronization` service. The synchronization service will need to be injected into the derived class and passed to the base constructor. The impact of this vulnerability depends on how Duende.AccessTokenManagement is used and on the security architecture of the solution. Most users will not be vulnerable to this issue. More advanced users may run into this issue by calling the methods specified above with customized token request parameters. The impact of obtaining an access token with different than intended protocol parameters will vary depending on application logic, security architecture, and the authorization policy of the resource servers."}, {"lang": "es", "value": "Duende.AccessTokenManagement es un conjunto de librer\u00edas .NET que administran tokens de acceso de OAuth y OpenId Connect. Duende.AccessTokenManagement contiene una condici\u00f3n de ejecuci\u00f3n cuando se solicitan tokens de acceso mediante el flujo de credenciales del cliente. Las solicitudes concurrentes para obtener un token de acceso mediante diferentes par\u00e1metros de protocolo pueden devolver tokens de acceso obtenidos con el alcance, el indicador de recursos u otros par\u00e1metros de protocolo incorrectos. Este uso es algo at\u00edpico y es probable que solo un peque\u00f1o porcentaje de usuarios se vea afectado. Duende.AccessTokenManagement puede solicitar tokens de acceso mediante el flujo de credenciales del cliente de varias formas. En el uso b\u00e1sico, el flujo de credenciales del cliente se configura una vez y los par\u00e1metros no var\u00edan. En situaciones m\u00e1s avanzadas, se pueden realizar solicitudes con par\u00e1metros de protocolo variables llamando a sobrecargas espec\u00edficas de estos m\u00e9todos: `HttpContext.GetClientAccessTokenAsync()` y `IClientCredentialsTokenManagementService.GetAccessTokenAsync()`. Existen sobrecargas de ambos m\u00e9todos que aceptan un objeto `TokenRequestParameters` que personaliza los par\u00e1metros de solicitud de token. Sin embargo, las solicitudes concurrentes con distintos `TokenRequestParameters` dar\u00e1n como resultado el mismo token para todas las llamadas concurrentes. La mayor\u00eda de los usuarios pueden simplemente actualizar el paquete NuGet a la \u00faltima versi\u00f3n. Las personalizaciones de `IClientCredentialsTokenCache` que derivan de la implementaci\u00f3n predeterminada (`DistributedClientCredentialsTokenCache`) requerir\u00e1n un peque\u00f1o cambio de c\u00f3digo, ya que su constructor se modific\u00f3 para agregar una dependencia en el servicio `ITokenRequestSynchronization`. El servicio de sincronizaci\u00f3n deber\u00e1 inyectarse en la clase derivada y pasarse al constructor base. El impacto de esta vulnerabilidad depende de c\u00f3mo se use Duende.AccessTokenManagement y de la arquitectura de seguridad de la soluci\u00f3n. La mayor\u00eda de los usuarios no ser\u00e1n vulnerables a este problema. Los usuarios m\u00e1s avanzados pueden encontrarse con este problema al llamar a los m\u00e9todos especificados anteriormente con par\u00e1metros de solicitud de token personalizados. El impacto de obtener un token de acceso con par\u00e1metros de protocolo diferentes a los previstos variar\u00e1 seg\u00fan la l\u00f3gica de la aplicaci\u00f3n, la arquitectura de seguridad y la pol\u00edtica de autorizaci\u00f3n de los servidores de recursos."}]}, "references": {"reference_data": [{"url": "https://github.com/DuendeSoftware/foss/commit/a33332ddec0ebf3c048ba85427e3c77d47c68dac", "name": "", "refsource": "", "tags": []}, {"url": "https://github.com/DuendeSoftware/foss/security/advisories/GHSA-qxj7-2x7w-3mpp", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-367"}]}]}}, "impact": {"baseMetricV4": {"cvssV4": {"version": "4.0", "vectorString": "CVSS:4.0/AV:N/AC:L/AT:P/PR:N/UI:N/VC:L/VI:L/VA:N/SC:L/SI:L/SA:N/E:X/CR:X/IR:X/AR:X/MAV:X/MAC:X/MAT:X/MPR:X/MUI:X/MVC:X/MVI:X/MVA:X/MSC:X/MSI:X/MSA:X/S:X/AU:X/R:X/V:X/RE:X/U:X", "baseScore": 6.3, "baseSeverity": "MEDIUM", "attackVector": "NETWORK", "attackComplexity": "LOW", "attackRequirements": "PRESENT", "privilegesRequired": "NONE", "userInteraction": "NONE", "vulnConfidentialityImpact": "LOW", "vulnIntegrityImpact": "LOW", "vulnAvailabilityImpact": "NONE", "subConfidentialityImpact": "LOW", "subIntegrityImpact": "LOW", "subAvailabilityImpact": "NONE", "exploitMaturity": "NOT_DEFINED", "confidentialityRequirement": "NOT_DEFINED", "integrityRequirement": "NOT_DEFINED", "availabilityRequirement": "NOT_DEFINED", "modifiedAttackVector": "NOT_DEFINED", "modifiedAttackComplexity": "NOT_DEFINED", "modifiedAttackRequirements": "NOT_DEFINED", "modifiedPrivilegesRequired": "NOT_DEFINED", "modifiedUserInteraction": "NOT_DEFINED", "modifiedVulnConfidentialityImpact": "NOT_DEFINED", "modifiedVulnIntegrityImpact": "NOT_DEFINED", "modifiedVulnAvailabilityImpact": "NOT_DEFINED", "modifiedSubConfidentialityImpact": "NOT_DEFINED", "modifiedSubIntegrityImpact": "NOT_DEFINED", "modifiedSubAvailabilityImpact": "NOT_DEFINED", "Safety": "NOT_DEFINED", "Automatable": "NOT_DEFINED", "Recovery": "NOT_DEFINED", "valueDensity": "NOT_DEFINED", "vulnerabilityResponseEffort": "NOT_DEFINED", "providerUrgency": "NOT_DEFINED"}}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}}