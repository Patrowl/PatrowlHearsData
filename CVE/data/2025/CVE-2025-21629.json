{"publishedDate": "2025-01-15T13:15Z", "lastModifiedDate": "2025-01-15T13:15Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2025-21629", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: reenable NETIF_F_IPV6_CSUM offload for BIG TCP packets\n\nThe blamed commit disabled hardware offoad of IPv6 packets with\nextension headers on devices that advertise NETIF_F_IPV6_CSUM,\nbased on the definition of that feature in skbuff.h:\n\n *   * - %NETIF_F_IPV6_CSUM\n *     - Driver (device) is only able to checksum plain\n *       TCP or UDP packets over IPv6. These are specifically\n *       unencapsulated packets of the form IPv6|TCP or\n *       IPv6|UDP where the Next Header field in the IPv6\n *       header is either TCP or UDP. IPv6 extension headers\n *       are not supported with this feature. This feature\n *       cannot be set in features for a device with\n *       NETIF_F_HW_CSUM also set. This feature is being\n *       DEPRECATED (see below).\n\nThe change causes skb_warn_bad_offload to fire for BIG TCP\npackets.\n\n[  496.310233] WARNING: CPU: 13 PID: 23472 at net/core/dev.c:3129 skb_warn_bad_offload+0xc4/0xe0\n\n[  496.310297]  ? skb_warn_bad_offload+0xc4/0xe0\n[  496.310300]  skb_checksum_help+0x129/0x1f0\n[  496.310303]  skb_csum_hwoffload_help+0x150/0x1b0\n[  496.310306]  validate_xmit_skb+0x159/0x270\n[  496.310309]  validate_xmit_skb_list+0x41/0x70\n[  496.310312]  sch_direct_xmit+0x5c/0x250\n[  496.310317]  __qdisc_run+0x388/0x620\n\nBIG TCP introduced an IPV6_TLV_JUMBO IPv6 extension header to\ncommunicate packet length, as this is an IPv6 jumbogram. But, the\nfeature is only enabled on devices that support BIG TCP TSO. The\nheader is only present for PF_PACKET taps like tcpdump, and not\ntransmitted by physical devices.\n\nFor this specific case of extension headers that are not\ntransmitted, return to the situation before the blamed commit\nand support hardware offload.\n\nipv6_has_hopopt_jumbo() tests not only whether this header is present,\nbut also that it is the only extension header before a terminal (L4)\nheader."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net: volver a habilitar la descarga de NETIF_F_IPV6_CSUM para paquetes TCP GRANDES La confirmaci\u00f3n culpable deshabilit\u00f3 la descarga de hardware de paquetes IPv6 con encabezados de extensi\u00f3n en dispositivos que anuncian NETIF_F_IPV6_CSUM, seg\u00fan la definici\u00f3n de esa caracter\u00edstica en skbuff.h: * * - %NETIF_F_IPV6_CSUM * - El controlador (dispositivo) solo puede realizar la suma de comprobaci\u00f3n de paquetes TCP o UDP simples sobre IPv6. Estos son espec\u00edficamente * paquetes no encapsulados del formato IPv6|TCP o * IPv6|UDP donde el campo Encabezado siguiente en el encabezado IPv6 * es TCP o UDP. Los encabezados de extensi\u00f3n IPv6 * no son compatibles con esta caracter\u00edstica. Esta caracter\u00edstica * no se puede configurar en las caracter\u00edsticas de un dispositivo con * NETIF_F_HW_CSUM tambi\u00e9n configurado. Esta caracter\u00edstica est\u00e1 * OBSOLETA (ver a continuaci\u00f3n). El cambio hace que skb_warn_bad_offload se active para paquetes TCP GRANDES. [ 496.310233] ADVERTENCIA: CPU: 13 PID: 23472 en net/core/dev.c:3129 skb_warn_bad_offload+0xc4/0xe0 [ 496.310297] ? skb_warn_bad_offload+0xc4/0xe0 [ 496.310300] skb_checksum_help+0x129/0x1f0 [ 496.310303] skb_csum_hwoffload_help+0x150/0x1b0 [ 496.310306] validation_xmit_skb+0x159/0x270 [ 496.310309] validation_xmit_skb_list+0x41/0x70 [ 496.310312] sch_direct_xmit+0x5c/0x250 [ 496.310317] __qdisc_run+0x388/0x620 BIG TCP introdujo un encabezado de extensi\u00f3n IPv6_TLV_JUMBO IPv6 para comunicar paquetes longitud, ya que se trata de un jumbograma IPv6. Sin embargo, la funci\u00f3n solo est\u00e1 habilitada en dispositivos que admiten BIG TCP TSO. El encabezado solo est\u00e1 presente para las derivaciones PF_PACKET como tcpdump, y no se transmite por dispositivos f\u00edsicos. Para este caso espec\u00edfico de encabezados de extensi\u00f3n que no se transmiten, regrese a la situaci\u00f3n anterior a la confirmaci\u00f3n culpable y admita la descarga de hardware. ipv6_has_hopopt_jumbo() prueba no solo si este encabezado est\u00e1 presente, sino tambi\u00e9n que sea el \u00fanico encabezado de extensi\u00f3n antes de un encabezado de terminal (L4)."}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/68e068cabd2c6c533ef934c2e5151609cf6ecc6d", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/95ccf006bbc8b59044313b8c309dcf29c546abd4", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/ac9cfef69565021c9e1022a493a9c40b03e2caf9", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/d3b7a9c7597b779039a51d7b34116fbe424bf2b7", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {}, "configurations": {"CVE_data_version": "4.0", "nodes": []}}