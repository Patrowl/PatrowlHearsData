{"publishedDate": "2025-06-18T10:15Z", "lastModifiedDate": "2025-06-18T13:46Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2025-38008", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/page_alloc: fix race condition in unaccepted memory handling\n\nThe page allocator tracks the number of zones that have unaccepted memory\nusing static_branch_enc/dec() and uses that static branch in hot paths to\ndetermine if it needs to deal with unaccepted memory.\n\nBorislav and Thomas pointed out that the tracking is racy: operations on\nstatic_branch are not serialized against adding/removing unaccepted pages\nto/from the zone.\n\nSanity checks inside static_branch machinery detects it:\n\nWARNING: CPU: 0 PID: 10 at kernel/jump_label.c:276 __static_key_slow_dec_cpuslocked+0x8e/0xa0\n\nThe comment around the WARN() explains the problem:\n\n\t/*\n\t * Warn about the '-1' case though; since that means a\n\t * decrement is concurrent with a first (0->1) increment. IOW\n\t * people are trying to disable something that wasn't yet fully\n\t * enabled. This suggests an ordering problem on the user side.\n\t */\n\nThe effect of this static_branch optimization is only visible on\nmicrobenchmark.\n\nInstead of adding more complexity around it, remove it altogether."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: mm/page_alloc: arregla la condici\u00f3n de ejecuci\u00f3n en el manejo de memoria no aceptada El asignador de p\u00e1ginas rastrea el n\u00famero de zonas que tienen memoria no aceptada usando static_branch_enc/dec() y usa esa rama est\u00e1tica en rutas activas para determinar si necesita lidiar con memoria no aceptada. Borislav y Thomas se\u00f1alaron que el rastreo es acelerado: las operaciones en static_branch no se serializan contra la adici\u00f3n/eliminaci\u00f3n de p\u00e1ginas no aceptadas a/desde la zona. Las comprobaciones de cordura dentro de la maquinaria static_branch lo detectan: ADVERTENCIA: CPU: 0 PID: 10 en kernel/jump_label.c:276 __static_key_slow_dec_cpuslocked+0x8e/0xa0 El comentario alrededor de WARN() explica el problema: /* * Sin embargo, advierte sobre el caso '-1'; ya que eso significa que un * decremento es concurrente con un primer incremento (0-&gt;1). Es decir, * se est\u00e1 intentando deshabilitar algo que a\u00fan no estaba completamente habilitado. Esto sugiere un problema de ordenamiento del usuario. */ El efecto de esta optimizaci\u00f3n de static_branch solo es visible en microbenchmark. En lugar de a\u00f1adir m\u00e1s complejidad, elim\u00ednenla por completo."}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/71dda1cb10702dc2859f00eb789b0502de2176a9", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/74953f93f47a45296cc2a3fd04e2a3202ff3fa53", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/98fdd2f612e949c652693f6df00442c81037776d", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/fefc075182275057ce607effaa3daa9e6e3bdc73", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {}, "configurations": {"CVE_data_version": "4.0", "nodes": []}}