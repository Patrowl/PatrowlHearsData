{"publishedDate": "2025-07-25T16:15Z", "lastModifiedDate": "2025-07-29T14:14Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2025-38445", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nmd/raid1: Fix stack memory use after return in raid1_reshape\n\nIn the raid1_reshape function, newpool is\nallocated on the stack and assigned to conf->r1bio_pool.\nThis results in conf->r1bio_pool.wait.head pointing\nto a stack address.\nAccessing this address later can lead to a kernel panic.\n\nExample access path:\n\nraid1_reshape()\n{\n\t// newpool is on the stack\n\tmempool_t newpool, oldpool;\n\t// initialize newpool.wait.head to stack address\n\tmempool_init(&newpool, ...);\n\tconf->r1bio_pool = newpool;\n}\n\nraid1_read_request() or raid1_write_request()\n{\n\talloc_r1bio()\n\t{\n\t\tmempool_alloc()\n\t\t{\n\t\t\t// if pool->alloc fails\n\t\t\tremove_element()\n\t\t\t{\n\t\t\t\t--pool->curr_nr;\n\t\t\t}\n\t\t}\n\t}\n}\n\nmempool_free()\n{\n\tif (pool->curr_nr < pool->min_nr) {\n\t\t// pool->wait.head is a stack address\n\t\t// wake_up() will try to access this invalid address\n\t\t// which leads to a kernel panic\n\t\treturn;\n\t\twake_up(&pool->wait);\n\t}\n}\n\nFix:\nreinit conf->r1bio_pool.wait after assigning newpool."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: md/raid1: Corregir el uso de memoria de la pila despu\u00e9s del retorno en raid1_reshape En la funci\u00f3n raid1_reshape, newpool se asigna en la pila y a conf-&gt;r1bio_pool. Esto da como resultado que conf-&gt;r1bio_pool.wait.head apunte a una direcci\u00f3n de pila. Acceder a esta direcci\u00f3n m\u00e1s tarde puede provocar un p\u00e1nico del kernel. Ejemplo de ruta de acceso: raid1_reshape() { // newpool est\u00e1 en la pila mempool_t newpool, oldpool; // inicializar newpool.wait.head en la direcci\u00f3n de la pila mempool_init(&amp;newpool, ...); conf-&gt;r1bio_pool = newpool; } raid1_read_request() o raid1_write_request() { alloc_r1bio() { mempool_alloc() { // si pool-&gt;alloc falla remove_element() { --pool-&gt;curr_nr; } } } } mempool_free() { if (pool-&gt;curr_nr &lt; pool-&gt;min_nr) { // pool-&gt;wait.head es una direcci\u00f3n de pila // wake_up() intentar\u00e1 acceder a esta direcci\u00f3n no v\u00e1lida // lo que genera un p\u00e1nico del kernel return; wake_up(&amp;pool-&gt;wait); } } Soluci\u00f3n: reinicie conf-&gt;r1bio_pool.wait despu\u00e9s de asignar newpool."}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/12b00ec99624f8da8c325f2dd6e807df26df0025", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/48da050b4f54ed639b66278d0ae6f4107b2c4e2d", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/5f35e48b76655e45522df338876dfef88dafcc71", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/61fd5e93006cf82ec8ee5c115ab5cf4bbd104bdb", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/776e6186dc9ecbdb8a1b706e989166c8a99bbf64", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/d67ed2ccd2d1dcfda9292c0ea8697a9d0f2f0d98", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/d8a6853d00fbaa810765c8ed2f452a5832273968", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/df5894014a92ff0196dbc212a7764e97366fd2b7", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {}, "configurations": {"CVE_data_version": "4.0", "nodes": []}}