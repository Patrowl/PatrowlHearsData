{"publishedDate": "2025-04-01T16:15Z", "lastModifiedDate": "2025-04-10T18:06Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2025-21933", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\narm: pgtable: fix NULL pointer dereference issue\n\nWhen update_mmu_cache_range() is called by update_mmu_cache(), the vmf\nparameter is NULL, which will cause a NULL pointer dereference issue in\nadjust_pte():\n\nUnable to handle kernel NULL pointer dereference at virtual address 00000030 when read\nHardware name: Atmel AT91SAM9\nPC is at update_mmu_cache_range+0x1e0/0x278\nLR is at pte_offset_map_rw_nolock+0x18/0x2c\nCall trace:\n update_mmu_cache_range from remove_migration_pte+0x29c/0x2ec\n remove_migration_pte from rmap_walk_file+0xcc/0x130\n rmap_walk_file from remove_migration_ptes+0x90/0xa4\n remove_migration_ptes from migrate_pages_batch+0x6d4/0x858\n migrate_pages_batch from migrate_pages+0x188/0x488\n migrate_pages from compact_zone+0x56c/0x954\n compact_zone from compact_node+0x90/0xf0\n compact_node from kcompactd+0x1d4/0x204\n kcompactd from kthread+0x120/0x12c\n kthread from ret_from_fork+0x14/0x38\nException stack(0xc0d8bfb0 to 0xc0d8bff8)\n\nTo fix it, do not rely on whether 'ptl' is equal to decide whether to hold\nthe pte lock, but decide it by whether CONFIG_SPLIT_PTE_PTLOCKS is\nenabled.  In addition, if two vmas map to the same PTE page, there is no\nneed to hold the pte lock again, otherwise a deadlock will occur.  Just\nadd the need_lock parameter to let adjust_pte() know this information."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: arm: pgtable: corregir problema de desreferencia de puntero NULL Cuando update_mmu_cache_range() es llamado por update_mmu_cache(), el par\u00e1metro vmf es NULL, lo que causar\u00e1 un problema de desreferencia de puntero NULL en adjust_pte(): No se puede gestionar la desreferencia de puntero NULL del kernel en la direcci\u00f3n virtual 00000030 cuando se lee Nombre del hardware: Atmel AT91SAM9 La PC est\u00e1 en update_mmu_cache_range+0x1e0/0x278 LR est\u00e1 en pte_offset_map_rw_nolock+0x18/0x2c Rastreo de llamadas: update_mmu_cache_range de remove_migration_pte+0x29c/0x2ec remove_migration_pte de rmap_walk_file+0xcc/0x130 rmap_walk_file de remove_migration_ptes+0x90/0xa4 remove_migration_ptes de migration_pages_batch+0x6d4/0x858 migration_pages_batch de migration_pages+0x188/0x488 migration_pages de compact_zone+0x56c/0x954 compact_zone de compact_node+0x90/0xf0 compact_node de kcompactd+0x1d4/0x204 kcompactd de kthread+0x120/0x12c kthread de ret_from_fork+0x14/0x38 Pila de excepciones (0xc0d8bfb0 a 0xc0d8bff8) Para solucionarlo, no conf\u00ede en si 'ptl' es igual para decidir si mantener el bloqueo pte, sino dec\u00eddalo en funci\u00f3n de si CONFIG_SPLIT_PTE_PTLOCKS est\u00e1 habilitado. Adem\u00e1s, si dos m\u00e1quinas virtuales asignan a la misma p\u00e1gina PTE, no es necesario volver a bloquear la p\u00e1gina PTE; de lo contrario, se producir\u00e1 un bloqueo. Simplemente agregue el par\u00e1metro need_lock para que adjust_pte() conozca esta informaci\u00f3n."}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/91d011efe30aedde067ce6d218d521cf99b162e5", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/a564ccfe300fa6a065beda06ab7f3c140d6b4d63", "name": "", "refsource": "", "tags": ["Patch"]}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-476"}]}]}}, "impact": {"baseMetricV3": {"exploitabilityScore": 1.8, "impactScore": 3.6, "cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H", "baseScore": 5.5, "baseSeverity": "MEDIUM", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH"}}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "negate": false, "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "matchCriteriaId": "842F5A44-3E71-4546-B4FD-43B0ACE3F32B", "cpe_name": [], "versionStartIncluding": "6.13", "versionEndExcluding": "6.13.7"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:6.14:rc1:*:*:*:*:*:*", "matchCriteriaId": "186716B6-2B66-4BD0-852E-D48E71C0C85F", "cpe_name": []}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:6.14:rc2:*:*:*:*:*:*", "matchCriteriaId": "0D3E781C-403A-498F-9DA9-ECEE50F41E75", "cpe_name": []}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:6.14:rc3:*:*:*:*:*:*", "matchCriteriaId": "66619FB8-0AAF-4166-B2CF-67B24143261D", "cpe_name": []}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:6.14:rc4:*:*:*:*:*:*", "matchCriteriaId": "D3D6550E-6679-4560-902D-AF52DCFE905B", "cpe_name": []}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:6.14:rc5:*:*:*:*:*:*", "matchCriteriaId": "45B90F6B-BEC7-4D4E-883A-9DBADE021750", "cpe_name": []}]}]}}