{"publishedDate": "2025-05-02T15:15Z", "lastModifiedDate": "2025-05-05T20:54Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2025-37797", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet_sched: hfsc: Fix a UAF vulnerability in class handling\n\nThis patch fixes a Use-After-Free vulnerability in the HFSC qdisc class\nhandling. The issue occurs due to a time-of-check/time-of-use condition\nin hfsc_change_class() when working with certain child qdiscs like netem\nor codel.\n\nThe vulnerability works as follows:\n1. hfsc_change_class() checks if a class has packets (q.qlen != 0)\n2. It then calls qdisc_peek_len(), which for certain qdiscs (e.g.,\n   codel, netem) might drop packets and empty the queue\n3. The code continues assuming the queue is still non-empty, adding\n   the class to vttree\n4. This breaks HFSC scheduler assumptions that only non-empty classes\n   are in vttree\n5. Later, when the class is destroyed, this can lead to a Use-After-Free\n\nThe fix adds a second queue length check after qdisc_peek_len() to verify\nthe queue wasn't emptied."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net_sched: hfsc: Se corrige una vulnerabilidad de UAF en la gesti\u00f3n de clases. Este parche corrige una vulnerabilidad de use-after-free en la gesti\u00f3n de clases de qdisc HFSC. El problema se produce debido a una condici\u00f3n de tiempo de comprobaci\u00f3n/tiempo de uso en hfsc_change_class() al trabajar con ciertas qdiscs secundarias como netem o codel. La vulnerabilidad funciona de la siguiente manera: 1. hfsc_change_class() verifica si una clase tiene paquetes (q.qlen != 0) 2. Luego llama a qdisc_peek_len(), que para ciertos qdiscs (por ejemplo, codel, netem) puede descartar paquetes y vaciar la cola 3. El c\u00f3digo contin\u00faa asumiendo que la cola todav\u00eda no est\u00e1 vac\u00eda, agregando la clase a vttree 4. Esto rompe las suposiciones del programador HFSC de que solo las clases no vac\u00edas est\u00e1n en vttree 5. M\u00e1s tarde, cuando se destruye la clase, esto puede llevar a un Use-After-Free La soluci\u00f3n agrega una segunda verificaci\u00f3n de longitud de cola despu\u00e9s de qdisc_peek_len() para verificar que la cola no se haya vaciado."}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/20d584a33e480ae80d105f43e0e7b56784da41b9", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/28b09a067831f7317c3841812276022d6c940677", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/39b9095dd3b55d9b2743df038c32138efa34a9de", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/3aa852e3605000d5c47035c3fc3a986d14ccfa9f", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/3df275ef0a6ae181e8428a6589ef5d5231e58b5c", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/86cd4641c713455a4f1c8e54c370c598c2b1cee0", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/bb583c88d23b72d8d16453d24856c99bd93dadf5", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/fcc8ede663569c704fb00a702973bd6c00373283", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {}, "configurations": {"CVE_data_version": "4.0", "nodes": []}}