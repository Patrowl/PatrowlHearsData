{"publishedDate": "2025-04-01T16:15Z", "lastModifiedDate": "2025-04-01T20:26Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2025-21910", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: cfg80211: regulatory: improve invalid hints checking\n\nSyzbot keeps reporting an issue [1] that occurs when erroneous symbols\nsent from userspace get through into user_alpha2[] via\nregulatory_hint_user() call. Such invalid regulatory hints should be\nrejected.\n\nWhile a sanity check from commit 47caf685a685 (\"cfg80211: regulatory:\nreject invalid hints\") looks to be enough to deter these very cases,\nthere is a way to get around it due to 2 reasons.\n\n1) The way isalpha() works, symbols other than latin lower and\nupper letters may be used to determine a country/domain.\nFor instance, greek letters will also be considered upper/lower\nletters and for such characters isalpha() will return true as well.\nHowever, ISO-3166-1 alpha2 codes should only hold latin\ncharacters.\n\n2) While processing a user regulatory request, between\nreg_process_hint_user() and regulatory_hint_user() there happens to\nbe a call to queue_regulatory_request() which modifies letters in\nrequest->alpha2[] with toupper(). This works fine for latin symbols,\nless so for weird letter characters from the second part of _ctype[].\n\nSyzbot triggers a warning in is_user_regdom_saved() by first sending\nover an unexpected non-latin letter that gets malformed by toupper()\ninto a character that ends up failing isalpha() check.\n\nPrevent this by enhancing is_an_alpha2() to ensure that incoming\nsymbols are latin letters and nothing else.\n\n[1] Syzbot report:\n------------[ cut here ]------------\nUnexpected user alpha2: A\ufffd\nWARNING: CPU: 1 PID: 964 at net/wireless/reg.c:442 is_user_regdom_saved net/wireless/reg.c:440 [inline]\nWARNING: CPU: 1 PID: 964 at net/wireless/reg.c:442 restore_alpha2 net/wireless/reg.c:3424 [inline]\nWARNING: CPU: 1 PID: 964 at net/wireless/reg.c:442 restore_regulatory_settings+0x3c0/0x1e50 net/wireless/reg.c:3516\nModules linked in:\nCPU: 1 UID: 0 PID: 964 Comm: kworker/1:2 Not tainted 6.12.0-rc5-syzkaller-00044-gc1e939a21eb1 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 09/13/2024\nWorkqueue: events_power_efficient crda_timeout_work\nRIP: 0010:is_user_regdom_saved net/wireless/reg.c:440 [inline]\nRIP: 0010:restore_alpha2 net/wireless/reg.c:3424 [inline]\nRIP: 0010:restore_regulatory_settings+0x3c0/0x1e50 net/wireless/reg.c:3516\n...\nCall Trace:\n <TASK>\n crda_timeout_work+0x27/0x50 net/wireless/reg.c:542\n process_one_work kernel/workqueue.c:3229 [inline]\n process_scheduled_works+0xa65/0x1850 kernel/workqueue.c:3310\n worker_thread+0x870/0xd30 kernel/workqueue.c:3391\n kthread+0x2f2/0x390 kernel/kthread.c:389\n ret_from_fork+0x4d/0x80 arch/x86/kernel/process.c:147\n ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:244\n </TASK>"}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: wifi: cfg80211: regulatory: improve invalid hints checking Syzbot sigue reportando un problema [1] que ocurre cuando s\u00edmbolos err\u00f3neos enviados desde el espacio de usuario se introducen en user_alpha2[] mediante la llamada regulatory_hint_user(). Estas sugerencias regulatorias inv\u00e1lidas deben rechazarse. Si bien una comprobaci\u00f3n de seguridad del commit 47caf685a685 (\"cfg80211: regulatory: reject invalid hints\") parece ser suficiente para evitar estos casos, existe una forma de evitarla por dos razones: 1) El funcionamiento de isalpha() permite usar s\u00edmbolos distintos de las letras latinas may\u00fasculas y min\u00fasculas para determinar un pa\u00eds o dominio. Por ejemplo, las letras griegas tambi\u00e9n se considerar\u00e1n may\u00fasculas y min\u00fasculas, y para estos caracteres isalpha() tambi\u00e9n devolver\u00e1 verdadero. Sin embargo, los c\u00f3digos ISO-3166-1 alpha2 solo deben contener caracteres latinos. 2) Al procesar una solicitud regulatoria de usuario, entre reg_process_hint_user() y regulatory_hint_user() se produce una llamada a queue_regulatory_request() que modifica las letras en request-&gt;alpha2[] con toupper(). Esto funciona correctamente con s\u00edmbolos latinos, pero no tanto con caracteres de letras extra\u00f1as de la segunda parte de _ctype[]. Syzbot genera una advertencia en is_user_regdom_saved() al enviar primero una letra no latina inesperada que toupper() malforma en un car\u00e1cter que falla la comprobaci\u00f3n de isalpha(). Para evitar esto, mejore is_an_alpha2() para garantizar que los s\u00edmbolos entrantes sean \u00fanicamente letras latinas. [1] Informe de Syzbot: ------------[ cortar aqu\u00ed ]------------ Usuario inesperado alpha2: A? ADVERTENCIA: CPU: 1 PID: 964 en net/wireless/reg.c:442 is_user_regdom_saved net/wireless/reg.c:440 [en l\u00ednea] ADVERTENCIA: CPU: 1 PID: 964 en net/wireless/reg.c:442 restore_alpha2 net/wireless/reg.c:3424 [en l\u00ednea] ADVERTENCIA: CPU: 1 PID: 964 en net/wireless/reg.c:442 restore_regulatory_settings+0x3c0/0x1e50 net/wireless/reg.c:3516 M\u00f3dulos vinculados: CPU: 1 UID: 0 PID: 964 Comm: kworker/1:2 No contaminado 6.12.0-rc5-syzkaller-00044-gc1e939a21eb1 #0 Nombre del hardware: Google Google Compute Engine/Google Compute Engine, BIOS Google 13/09/2024 Cola de trabajo: events_power_efficient crda_timeout_work RIP: 0010:is_user_regdom_saved net/wireless/reg.c:440 [en l\u00ednea] RIP: 0010:restore_alpha2 net/wireless/reg.c:3424 [en l\u00ednea] RIP: 0010:restore_regulatory_settings+0x3c0/0x1e50 net/wireless/reg.c:3516 ... Rastreo de llamadas:  crda_timeout_work+0x27/0x50 net/wireless/reg.c:542 process_one_work kernel/workqueue.c:3229 [inline] process_scheduled_works+0xa65/0x1850 kernel/workqueue.c:3310 worker_thread+0x870/0xd30 kernel/workqueue.c:3391 kthread+0x2f2/0x390 kernel/kthread.c:389 ret_from_fork+0x4d/0x80 arch/x86/kernel/process.c:147 ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:244  "}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/17aa34c84867f6cd181a5743e1c647e7766962a6", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/35ef07112b61b06eb30683a6563c9f6378c02476", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/59b348be7597c4a9903cb003c69e37df20c04a30", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/62b1a9bbfebba4b4c2bb6c1ede9ef7ecee7a9ff6", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/6a5e3b23054cee3b92683d1467e3fa83921f5622", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/be7c5f00aa7f1344293e4d48d0e12be83a2f223d", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/da3f599517ef2ea851208df3229d07728d238dc5", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/f4112cb477c727a65787a4065a75ca593bb5b2f4", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {}, "configurations": {"CVE_data_version": "4.0", "nodes": []}}