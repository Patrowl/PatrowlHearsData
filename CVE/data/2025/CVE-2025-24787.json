{"publishedDate": "2025-02-06T19:15Z", "lastModifiedDate": "2025-02-06T20:15Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2025-24787", "ASSIGNER": "security-advisories@github.com"}, "description": {"description_data": [{"lang": "en", "value": "WhoDB is an open source database management tool. In affected versions the application is vulnerable to parameter injection in database connection strings, which allows an attacker to read local files on the machine the application is running on. The application uses string concatenation to build database connection URIs which are then passed to corresponding libraries responsible for setting up the database connections. This string concatenation is done unsafely and without escaping or encoding the user input. This allows an user, in many cases, to inject arbitrary parameters into the URI string. These parameters can be potentially dangerous depending on the libraries used. One of these dangerous parameters is `allowAllFiles` in the library `github.com/go-sql-driver/mysql`. Should this be set to `true`, the library enables running the `LOAD DATA LOCAL INFILE` query on any file on the host machine (in this case, the machine that WhoDB is running on). By injecting `&allowAllFiles=true` into the connection URI and connecting to any MySQL server (such as an attacker-controlled one), the attacker is able to read local files. This issue has been addressed in version 0.45.0 and all users are advised to upgrade. There are no known workarounds for this vulnerability."}, {"lang": "es", "value": "WhoDB es una herramienta de gesti\u00f3n de bases de datos de c\u00f3digo abierto. En las versiones afectadas, la aplicaci\u00f3n es vulnerable a la inyecci\u00f3n de par\u00e1metros en las cadenas de conexi\u00f3n de la base de datos, lo que permite a un atacante leer archivos locales en la m\u00e1quina en la que se ejecuta la aplicaci\u00f3n. La aplicaci\u00f3n utiliza la concatenaci\u00f3n de cadenas para crear las URI de conexi\u00f3n a la base de datos que luego se pasan a las librer\u00edas correspondientes responsables de configurar las conexiones a la base de datos. Esta concatenaci\u00f3n de cadenas se realiza de forma insegura y sin escapar ni codificar la entrada del usuario. Esto permite a un usuario, en muchos casos, inyectar par\u00e1metros arbitrarios en la cadena URI. Estos par\u00e1metros pueden ser potencialmente peligrosos seg\u00fan las librer\u00edas utilizadas. Uno de estos par\u00e1metros peligrosos es `allowAllFiles` en la librer\u00eda `github.com/go-sql-driver/mysql`. Si se establece en `true`, la librer\u00eda permite ejecutar la consulta `LOAD DATA LOCAL INFILE` en cualquier archivo en la m\u00e1quina host (en este caso, la m\u00e1quina en la que se ejecuta WhoDB). Al inyectar `&amp;allowAllFiles=true` en la URI de conexi\u00f3n y conectarse a cualquier servidor MySQL (como uno controlado por el atacante), el atacante puede leer archivos locales. Este problema se ha solucionado en la versi\u00f3n 0.45.0 y se recomienda a todos los usuarios que actualicen la versi\u00f3n. No se conocen workarounds para esta vulnerabilidad."}]}, "references": {"reference_data": [{"url": "https://github.com/clidey/whodb/security/advisories/GHSA-c7w4-9wv8-7x7c", "name": "", "refsource": "", "tags": []}, {"url": "https://github.com/go-sql-driver/mysql/blob/7403860363ca112af503b4612568c3096fecb466/infile.go#L128", "name": "", "refsource": "", "tags": []}, {"url": "https://github.com/clidey/whodb/security/advisories/GHSA-c7w4-9wv8-7x7c", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-943"}]}]}}, "impact": {"baseMetricV3": {"exploitabilityScore": 3.9, "impactScore": 4.0, "cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:N/A:N", "baseScore": 8.6, "baseSeverity": "HIGH", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE"}}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}}