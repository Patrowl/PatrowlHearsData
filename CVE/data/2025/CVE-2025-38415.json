{"publishedDate": "2025-07-25T14:15Z", "lastModifiedDate": "2025-07-25T15:29Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2025-38415", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nSquashfs: check return result of sb_min_blocksize\n\nSyzkaller reports an \"UBSAN: shift-out-of-bounds in squashfs_bio_read\" bug.\n\nSyzkaller forks multiple processes which after mounting the Squashfs\nfilesystem, issues an ioctl(\"/dev/loop0\", LOOP_SET_BLOCK_SIZE, 0x8000). \nNow if this ioctl occurs at the same time another process is in the\nprocess of mounting a Squashfs filesystem on /dev/loop0, the failure\noccurs.  When this happens the following code in squashfs_fill_super()\nfails.\n\n----\nmsblk->devblksize = sb_min_blocksize(sb, SQUASHFS_DEVBLK_SIZE);\nmsblk->devblksize_log2 = ffz(~msblk->devblksize);\n----\n\nsb_min_blocksize() returns 0, which means msblk->devblksize is set to 0.\n\nAs a result, ffz(~msblk->devblksize) returns 64, and msblk->devblksize_log2\nis set to 64.\n\nThis subsequently causes the\n\nUBSAN: shift-out-of-bounds in fs/squashfs/block.c:195:36\nshift exponent 64 is too large for 64-bit type 'u64' (aka\n'unsigned long long')\n\nThis commit adds a check for a 0 return by sb_min_blocksize()."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: Squashfs: comprobar el resultado devuelto de sb_min_blocksize. Syzkaller informa del error \"UBSAN: desplazamiento fuera de los l\u00edmites en squashfs_bio_read\". Syzkaller bifurca varios procesos que, tras montar el sistema de archivos Squashfs, emiten una instrucci\u00f3n ioctl(\"/dev/loop0\", LOOP_SET_BLOCK_SIZE, 0x8000). Si esta instrucci\u00f3n ioctl se produce al mismo tiempo que otro proceso est\u00e1 montando un sistema de archivos Squashfs en /dev/loop0, se produce el fallo. En este caso, el siguiente c\u00f3digo en squashfs_fill_super() falla: ---- msblk-&gt;devblksize = sb_min_blocksize(sb, SQUASHFS_DEVBLK_SIZE); msblk-&gt;devblksize_log2 = ffz(~msblk-&gt;devblksize); ---- sb_min_blocksize() devuelve 0, lo que significa que msblk-&gt;devblksize est\u00e1 establecido en 0. Como resultado, ffz(~msblk-&gt;devblksize) devuelve 64 y msblk-&gt;devblksize_log2 est\u00e1 establecido en 64. Esto posteriormente provoca el UBSAN: shift-out-of-bounds en fs/squashfs/block.c:195:36 el exponente de desplazamiento 64 es demasiado grande para el tipo de 64 bits 'u64' (tambi\u00e9n conocido como 'unsigned long long') Esta confirmaci\u00f3n agrega una comprobaci\u00f3n para un retorno de 0 por sb_min_blocksize()."}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/0aff95d9bc7fb5400ca8af507429c4b067bdb425", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/295ab18c2dbce8d0ac6ecf7c5187e16e1ac8b282", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/4f99357dadbf9c979ad737156ad4c37fadf7c56b", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/549f9e3d7b60d53808c98b9fde49b4f46d0524a5", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/5c51aa862cbeed2f3887f0382a2708956710bd68", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/6abf6b78c6fb112eee495f5636ffcc350dd2ce25", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/734aa85390ea693bb7eaf2240623d41b03705c84", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/db7096ea160e40d78c67fce52e7cc51bde049497", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {}, "configurations": {"CVE_data_version": "4.0", "nodes": []}}