{"publishedDate": "2025-03-09T12:09Z", "lastModifiedDate": "2025-03-09T17:02Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "5.1", "CVE_data_meta": {"ID": "CVE-2025-27636", "ASSIGNER": "apache"}, "description": {"description_data": [{"lang": "en", "supportingMedia": [{"base64": false, "type": "text/html", "value": "<p>Bypass/Injection vulnerability in Apache Camel-Bean component under particular conditions.</p><p>This issue affects Apache Camel: from 4.10.0 through &lt;= 4.10.1, from 4.8.0 through &lt;= 4.8.4, from 3.10.0 through &lt;= 3.22.3.</p><p>Users are recommended to upgrade to version 4.10.2 for 4.10.x LTS, 4.8.5 for 4.8.x LTS and 3.22.4 for 3.x releases.</p><div>This vulnerability is only present in the following situation. The user is using one of the following HTTP Servers via one the of the following Camel components</div><ul><li><span style=\"background-color: rgb(255, 255, 255);\">camel-servlet</span></li><li><span style=\"background-color: rgb(255, 255, 255);\">camel-jetty</span></li><li><span style=\"background-color: rgb(255, 255, 255);\">camel-undertow</span></li><li><span style=\"background-color: rgb(255, 255, 255);\">camel-platform-http</span></li><li><span style=\"background-color: rgb(255, 255, 255);\">camel-netty-http</span></li></ul>and in the route, the exchange will be routed to a camel-bean producer. So ONLY camel-bean component is affected. In particular:&nbsp;<br><br><ol><li><span style=\"background-color: rgb(255, 255, 255);\">The bean invocation (is only affected if you use any of the above&nbsp;</span><span style=\"background-color: rgb(255, 255, 255);\">together with camel-bean component).<br></span></li><li><span style=\"background-color: rgb(255, 255, 255);\">The bean that can be called, has&nbsp;</span><span style=\"background-color: rgb(255, 255, 255);\">more than 1 method implemented.</span></li></ol>In these conditions an attacker could be able to forge a Camel header name and make the bean component invoking other methods in the same bean.<br><br><div>The vulnerability arises due to a bug in the default filtering mechanism that only blocks headers starting with \"Camel\", \"camel\", or \"org.apache.camel.\".&nbsp;</div><br><div><span style=\"background-color: var(--wht);\">Mitigation:&nbsp;</span>You can easily work around this in your Camel applications by removing the&nbsp;headers in your Camel routes. There are many ways of doing this, also&nbsp;globally or per route. This means you could use the removeHeaders EIP, to filter out anything like \"cAmel, cAMEL\" etc, or in general everything not starting with \"Camel\", \"camel\" or \"org.apache.camel.\".&nbsp;<br></div><br>"}], "value": "Bypass/Injection vulnerability in Apache Camel-Bean component under particular conditions.\n\nThis issue affects Apache Camel: from 4.10.0 through <= 4.10.1, from 4.8.0 through <= 4.8.4, from 3.10.0 through <= 3.22.3.\n\nUsers are recommended to upgrade to version 4.10.2 for 4.10.x LTS, 4.8.5 for 4.8.x LTS and 3.22.4 for 3.x releases.\n\nThis vulnerability is only present in the following situation. The user is using one of the following HTTP Servers via one the of the following Camel components\n\n  *  camel-servlet\n  *  camel-jetty\n  *  camel-undertow\n  *  camel-platform-http\n  *  camel-netty-http\n\n\nand in the route, the exchange will be routed to a camel-bean producer. So ONLY camel-bean component is affected. In particular:\u00a0\n\n  *  The bean invocation (is only affected if you use any of the above\u00a0together with camel-bean component).\n\n  *  The bean that can be called, has\u00a0more than 1 method implemented.\nIn these conditions an attacker could be able to forge a Camel header name and make the bean component invoking other methods in the same bean.\n\nThe vulnerability arises due to a bug in the default filtering mechanism that only blocks headers starting with \"Camel\", \"camel\", or \"org.apache.camel.\".\u00a0\n\n\nMitigation:\u00a0You can easily work around this in your Camel applications by removing the\u00a0headers in your Camel routes. There are many ways of doing this, also\u00a0globally or per route. This means you could use the removeHeaders EIP, to filter out anything like \"cAmel, cAMEL\" etc, or in general everything not starting with \"Camel\", \"camel\" or \"org.apache.camel.\"."}]}, "references": {"reference_data": [{"tags": ["vendor-advisory"], "url": "https://lists.apache.org/thread/l3zcg3vts88bmc7w8172wkgw610y693z"}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:a:apache software foundation:apache camel:4.8.5:*:*:*:*:*:*:*", "cpe_name": []}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:a:apache software foundation:apache camel:4.10.2:*:*:*:*:*:*:*", "cpe_name": []}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:a:apache software foundation:apache camel:3.22.4:*:*:*:*:*:*:*", "cpe_name": []}]}]}}