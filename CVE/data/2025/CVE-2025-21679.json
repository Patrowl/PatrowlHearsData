{"publishedDate": "2025-01-31T12:15Z", "lastModifiedDate": "2025-01-31T12:15Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2025-21679", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: add the missing error handling inside get_canonical_dev_path\n\nInside function get_canonical_dev_path(), we call d_path() to get the\nfinal device path.\n\nBut d_path() can return error, and in that case the next strscpy() call\nwill trigger an invalid memory access.\n\nAdd back the missing error handling for d_path()."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: btrfs: agregar la gesti\u00f3n de errores faltante dentro de get_canonical_dev_path Dentro de la funci\u00f3n get_canonical_dev_path(), llamamos a d_path() para obtener la ruta final del dispositivo. Pero d_path() puede devolver un error y, en ese caso, la siguiente llamada a strscpy() activar\u00e1 un acceso a memoria no v\u00e1lido. Agregue nuevamente la gesti\u00f3n de errores faltante para d_path()."}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/d0fb5741932b831eded49bfaaf33353e96200d6d", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/fe4de594f7a2e9bc49407de60fbd20809fad4192", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {}, "configurations": {"CVE_data_version": "4.0", "nodes": []}}