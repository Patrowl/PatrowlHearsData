{"publishedDate": "2025-05-01T14:15Z", "lastModifiedDate": "2025-05-02T13:53Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2025-37760", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/vma: add give_up_on_oom option on modify/merge, use in uffd release\n\nCurrently, if a VMA merge fails due to an OOM condition arising on commit\nmerge or a failure to duplicate anon_vma's, we report this so the caller\ncan handle it.\n\nHowever there are cases where the caller is only ostensibly trying a\nmerge, and doesn't mind if it fails due to this condition.\n\nSince we do not want to introduce an implicit assumption that we only\nactually modify VMAs after OOM conditions might arise, add a 'give up on\noom' option and make an explicit contract that, should this flag be set, we\nabsolutely will not modify any VMAs should OOM arise and just bail out.\n\nSince it'd be very unusual for a user to try to vma_modify() with this flag\nset but be specifying a range within a VMA which ends up being split (which\ncan fail due to rlimit issues, not only OOM), we add a debug warning for\nthis condition.\n\nThe motivating reason for this is uffd release - syzkaller (and Pedro\nFalcato's VERY astute analysis) found a way in which an injected fault on\nallocation, triggering an OOM condition on commit merge, would result in\nuffd code becoming confused and treating an error value as if it were a VMA\npointer.\n\nTo avoid this, we make use of this new VMG flag to ensure that this never\noccurs, utilising the fact that, should we be clearing entire VMAs, we do\nnot wish an OOM event to be reported to us.\n\nMany thanks to Pedro Falcato for his excellent analysis and Jann Horn for\nhis insightful and intelligent analysis of the situation, both of whom were\ninstrumental in this fix."}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: mm/vma: a\u00f1adir la opci\u00f3n give_up_on_oom en modificar/fusionar, usar en la versi\u00f3n uffd Actualmente, si una fusi\u00f3n de VMA falla debido a una condici\u00f3n OOM que surge en la fusi\u00f3n de confirmaci\u00f3n o un fallo al duplicar anon_vma, informamos de ello para que el llamador pueda gestionarlo. Sin embargo, hay casos en los que el llamador solo est\u00e1 intentando una fusi\u00f3n ostensiblemente y no le importa si falla debido a esta condici\u00f3n. Dado que no queremos introducir una suposici\u00f3n impl\u00edcita de que solo modificamos realmente los VMA despu\u00e9s de que puedan surgir condiciones OOM, agregue una opci\u00f3n 'renunciar a oom' y haga un contrato expl\u00edcito de que, si se establece este indicador, no modificaremos en absoluto ning\u00fan VMA si surge OOM y simplemente nos retiraremos. Dado que ser\u00eda muy inusual que un usuario intentara usar vma_modify() con este indicador activado, pero especificando un rango dentro de un VMA que termina dividi\u00e9ndose (lo cual puede fallar debido a problemas con rlimit, no solo por OOM), a\u00f1adimos una advertencia de depuraci\u00f3n para esta condici\u00f3n. El motivo es la versi\u00f3n de uffd: syzkaller (y el astuto an\u00e1lisis de Pedro Falcato) encontr\u00f3 una forma en la que un fallo inyectado en la asignaci\u00f3n, que desencadena una condici\u00f3n OOM al fusionar las confirmaciones, provocaba que el c\u00f3digo de uffd se confundiera y tratara un valor de error como si fuera un puntero a un VMA. Para evitar esto, utilizamos este nuevo indicador VMG para asegurarnos de que esto nunca ocurra, aprovechando que, si borramos VMAs completas, no queremos que se nos informe de un evento OOM. Muchas gracias a Pedro Falcato por su excelente an\u00e1lisis y a Jann Horn por su perspicaz e inteligente an\u00e1lisis de la situaci\u00f3n, ambos fundamentales en esta soluci\u00f3n."}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/41e6ddcaa0f18dda4c3fadf22533775a30d6f72f", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b906c1ad25adce6ff35be19b65a1aa7d960fe1d7", "name": "", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/c103a75c61648203d731e3b97a6fbeea4003cb15", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {}, "configurations": {"CVE_data_version": "4.0", "nodes": []}}