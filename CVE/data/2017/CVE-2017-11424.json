{"publishedDate": "2017-08-24T16:29Z", "lastModifiedDate": "2025-04-20T01:37Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2017-11424", "ASSIGNER": "security@duo.com"}, "description": {"description_data": [{"lang": "en", "value": "In PyJWT 1.5.0 and below the `invalid_strings` check in `HMACAlgorithm.prepare_key` does not account for all PEM encoded public keys. Specifically, the PKCS1 PEM encoded format would be allowed because it is prefaced with the string `-----BEGIN RSA PUBLIC KEY-----` which is not accounted for. This enables symmetric/asymmetric key confusion attacks against users using the PKCS1 PEM encoded public keys, which would allow an attacker to craft JWTs from scratch."}, {"lang": "es", "value": "En PyJWT 1.5.0 y anteriores, la comprobaci\u00f3n `invalid_strings` en `HMACAlgorithm.prepare_key` no da cuenta de todas las claves p\u00fablicas codificadas PEM. Espec\u00edficamente, el formato codificado PKCS1 PEM se permitir\u00eda porque va precedido por la cadena `-----BEGIN RSA PUBLIC KEY-----`, la cual no se tiene en cuenta. Esto permite ataques sim\u00e9tricos/asim\u00e9tricos de confusi\u00f3n de claves contra usuarios que empleen las claves p\u00fablicas PKCS1 PEM, que permitir\u00edan que un atacante manipulase JWT desde cero."}]}, "references": {"reference_data": [{"url": "http://www.debian.org/security/2017/dsa-3979", "name": "", "refsource": "", "tags": ["Third Party Advisory"]}, {"url": "https://github.com/jpadilla/pyjwt/pull/277", "name": "", "refsource": "", "tags": ["Issue Tracking", "Patch", "Third Party Advisory"]}, {"url": "http://www.debian.org/security/2017/dsa-3979", "name": "", "refsource": "", "tags": ["Third Party Advisory"]}, {"url": "https://github.com/jpadilla/pyjwt/pull/277", "name": "", "refsource": "", "tags": ["Issue Tracking", "Patch", "Third Party Advisory"]}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}]}}, "impact": {"baseMetricV2": {"cvssV2": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "baseScore": 5.0, "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE"}, "exploitabilityScore": 10.0, "impactScore": 2.9, "severity": "MEDIUM", "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}, "baseMetricV3": {"exploitabilityScore": 3.9, "impactScore": 3.6, "cvssV3": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N", "baseScore": 7.5, "baseSeverity": "HIGH", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "NONE"}}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "negate": false, "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:a:pyjwt_project:pyjwt:*:*:*:*:*:*:*:*", "matchCriteriaId": "2ED2491D-3EA6-4348-BABC-A1752F717260", "cpe_name": [], "versionEndIncluding": "1.5.0"}]}, {"operator": "OR", "negate": false, "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:o:debian:debian_linux:8.0:*:*:*:*:*:*:*", "matchCriteriaId": "C11E6FB0-C8C0-4527-9AA0-CB9B316F8F43", "cpe_name": []}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:debian:debian_linux:9.0:*:*:*:*:*:*:*", "matchCriteriaId": "DEECE5FC-CACF-4496-A3E7-164736409252", "cpe_name": []}]}]}}