{"publishedDate": "2021-09-17T21:15Z", "lastModifiedDate": "2024-11-21T06:18Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2021-39218", "ASSIGNER": "security-advisories@github.com"}, "description": {"description_data": [{"lang": "en", "value": "Wasmtime is an open source runtime for WebAssembly & WASI. In Wasmtime from version 0.26.0 and before version 0.30.0 is affected by a memory unsoundness vulnerability. There was an invalid free and out-of-bounds read and write bug when running Wasm that uses `externref`s in Wasmtime. To trigger this bug, Wasmtime needs to be running Wasm that uses `externref`s, the host creates non-null `externrefs`, Wasmtime performs a garbage collection (GC), and there has to be a Wasm frame on the stack that is at a GC safepoint where there are no live references at this safepoint, and there is a safepoint with live references earlier in this frame's function. Under this scenario, Wasmtime would incorrectly use the GC stack map for the safepoint from earlier in the function instead of the empty safepoint. This would result in Wasmtime treating arbitrary stack slots as `externref`s that needed to be rooted for GC. At the *next* GC, it would be determined that nothing was referencing these bogus `externref`s (because nothing could ever reference them, because they are not really `externref`s) and then Wasmtime would deallocate them and run `<ExternRef as Drop>::drop` on them. This results in a free of memory that is not necessarily on the heap (and shouldn't be freed at this moment even if it was), as well as potential out-of-bounds reads and writes. Even though support for `externref`s (via the reference types proposal) is enabled by default, unless you are creating non-null `externref`s in your host code or explicitly triggering GCs, you cannot be affected by this bug. We have reason to believe that the effective impact of this bug is relatively small because usage of `externref` is currently quite rare. This bug has been patched and users should upgrade to Wasmtime version 0.30.0. If you cannot upgrade Wasmtime at this time, you can avoid this bug by disabling the reference types proposal by passing `false` to `wasmtime::Config::wasm_reference_types`."}, {"lang": "es", "value": "Wasmtime es un runtime de c\u00f3digo abierto para WebAssembly y WASI. En Wasmtime desde la versi\u00f3n 0.26.0 y versiones anteriores a 0.30.0, est\u00e1 afectado por una vulnerabilidad por falta de memoria. Se presentaba un error de lectura y escritura no v\u00e1lida y fuera de l\u00edmites cuando se ejecutaba Wasm que usa \"externref\"s en Wasmtime. Para desencadenar este fallo, Wasmtime necesita estar ejecutando Wasm que usa \"externref\"s, el host crea \"externrefs\" no nulos, Wasmtime lleva a cabo una recolecci\u00f3n de basura (GC), y tiene que presentar un marco Wasm en la pila que est\u00e1 en un punto de seguridad de GC donde no hay referencias vivas en este punto de seguridad, y presenta un punto de seguridad con referencias vivas antes en la funci\u00f3n de este marco. Bajo este escenario, Wasmtime usar\u00eda incorrectamente el mapa de pila de la GC para el punto de seguridad de antes en la funci\u00f3n en lugar del punto de seguridad vac\u00edo. Esto resultar\u00eda en que Wasmtime tratara ranuras de pila arbitrarias como \"externref\"s que deb\u00edan ser enraizadas para la GC. En la *next* GC, se determinar\u00eda que nada hac\u00eda referencia a estas falsas \"externref\"s (porque nada podr\u00eda hacer referencia a ellas, ya que no son realmente \"externref\"s) y entonces Wasmtime las desasignar\u00eda y ejecutar\u00eda \"(ExternRef as Drop)::drop\" sobre ellas. Esto resulta en una liberaci\u00f3n de memoria que no est\u00e1 necesariamente en la pila (y no deber\u00eda ser liberada en este momento incluso si lo estuviera), as\u00ed como potenciales lecturas y escrituras fuera de l\u00edmites. Aunque el soporte para \"externref\"s (por medio de la propuesta de tipos de referencia) est\u00e1 habilitado por defecto, a menos que est\u00e9s creando \"externref\"s no nulos en tu c\u00f3digo anfitri\u00f3n o activando expl\u00edcitamente GCs, no puedes ser afectado por este error. Tenemos razones para creer que el impacto efectivo de este bug es relativamente peque\u00f1o porque el uso de \"externref\" es actualmente bastante raro. Este bug ha sido parcheado y los usuarios deber\u00edan actualizar a la versi\u00f3n 0.30.0 de Wasmtime. Si no puedes actualizar Wasmtime en este momento, puedes evitar este bug al desactivar la propuesta de tipos de referencia pasando \"false\" a \"wasmtime::Config::wasm_reference_types\""}]}, "references": {"reference_data": [{"url": "https://crates.io/crates/wasmtime", "name": "", "refsource": "", "tags": ["Product", "Third Party Advisory"]}, {"url": "https://github.com/bytecodealliance/wasmtime/commit/398a73f0dd862dbe703212ebae8e34036a18c11c", "name": "", "refsource": "", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-4873-36h9-wv49", "name": "", "refsource": "", "tags": ["Third Party Advisory"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/WAVBRYDDUIY2ZR3K3FO4BVYJKIMJ5TP7/", "name": "", "refsource": "", "tags": []}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/Z2Z33FTXFQ6EOINVEQIP4DFBG53G5XIY/", "name": "", "refsource": "", "tags": []}, {"url": "https://crates.io/crates/wasmtime", "name": "", "refsource": "", "tags": ["Product", "Third Party Advisory"]}, {"url": "https://github.com/bytecodealliance/wasmtime/commit/398a73f0dd862dbe703212ebae8e34036a18c11c", "name": "", "refsource": "", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-4873-36h9-wv49", "name": "", "refsource": "", "tags": ["Third Party Advisory"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/WAVBRYDDUIY2ZR3K3FO4BVYJKIMJ5TP7/", "name": "", "refsource": "", "tags": []}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/Z2Z33FTXFQ6EOINVEQIP4DFBG53G5XIY/", "name": "", "refsource": "", "tags": []}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-125"}, {"lang": "en", "value": "CWE-590"}, {"lang": "en", "value": "CWE-787"}]}]}}, "impact": {"baseMetricV2": {"cvssV2": {"version": "2.0", "vectorString": "AV:L/AC:M/Au:N/C:N/I:P/A:P", "baseScore": 3.3, "accessVector": "LOCAL", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL"}, "exploitabilityScore": 3.4, "impactScore": 4.9, "severity": "LOW", "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}, "baseMetricV3": {"exploitabilityScore": 1.0, "impactScore": 5.2, "cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:H/A:H", "baseScore": 6.3, "baseSeverity": "MEDIUM", "attackVector": "LOCAL", "attackComplexity": "HIGH", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "HIGH"}}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "negate": false, "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:a:bytecodealliance:wasmtime:*:*:*:*:*:rust:*:*", "matchCriteriaId": "9D31302E-6D4C-434D-ABF7-B898B206E1AA", "cpe_name": [], "versionStartIncluding": "0.26.0", "versionEndExcluding": "0.30.0"}]}, {"operator": "OR", "negate": false, "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:o:fedoraproject:fedora:34:*:*:*:*:*:*:*", "matchCriteriaId": "A930E247-0B43-43CB-98FF-6CE7B8189835", "cpe_name": []}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:fedoraproject:fedora:35:*:*:*:*:*:*:*", "matchCriteriaId": "80E516C0-98A4-4ADE-B69F-66A772E2BAAA", "cpe_name": []}]}]}}