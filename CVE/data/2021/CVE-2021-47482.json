{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2021-47482", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/07533f1a673ce1126d0a72ef1e4b5eaaa3dd6d20", "name": "https://git.kernel.org/stable/c/07533f1a673ce1126d0a72ef1e4b5eaaa3dd6d20", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/07533f1a673ce1126d0a72ef1e4b5eaaa3dd6d20", "name": "https://git.kernel.org/stable/c/07533f1a673ce1126d0a72ef1e4b5eaaa3dd6d20", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/0c6b199f09be489c48622537a550787fc80aea73", "name": "https://git.kernel.org/stable/c/0c6b199f09be489c48622537a550787fc80aea73", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/0c6b199f09be489c48622537a550787fc80aea73", "name": "https://git.kernel.org/stable/c/0c6b199f09be489c48622537a550787fc80aea73", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/6422e8471890273994fe8cc6d452b0dcd2c9483e", "name": "https://git.kernel.org/stable/c/6422e8471890273994fe8cc6d452b0dcd2c9483e", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/6422e8471890273994fe8cc6d452b0dcd2c9483e", "name": "https://git.kernel.org/stable/c/6422e8471890273994fe8cc6d452b0dcd2c9483e", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/6f68cd634856f8ca93bafd623ba5357e0f648c68", "name": "https://git.kernel.org/stable/c/6f68cd634856f8ca93bafd623ba5357e0f648c68", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/6f68cd634856f8ca93bafd623ba5357e0f648c68", "name": "https://git.kernel.org/stable/c/6f68cd634856f8ca93bafd623ba5357e0f648c68", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/a8f7359259dd5923adc6129284fdad12fc5db347", "name": "https://git.kernel.org/stable/c/a8f7359259dd5923adc6129284fdad12fc5db347", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/a8f7359259dd5923adc6129284fdad12fc5db347", "name": "https://git.kernel.org/stable/c/a8f7359259dd5923adc6129284fdad12fc5db347", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b0a2cd38553c77928ef1646ed1518486b1e70ae8", "name": "https://git.kernel.org/stable/c/b0a2cd38553c77928ef1646ed1518486b1e70ae8", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b0a2cd38553c77928ef1646ed1518486b1e70ae8", "name": "https://git.kernel.org/stable/c/b0a2cd38553c77928ef1646ed1518486b1e70ae8", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/e50f957652190b5a88a8ebce7e5ab14ebd0d3f00", "name": "https://git.kernel.org/stable/c/e50f957652190b5a88a8ebce7e5ab14ebd0d3f00", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/e50f957652190b5a88a8ebce7e5ab14ebd0d3f00", "name": "https://git.kernel.org/stable/c/e50f957652190b5a88a8ebce7e5ab14ebd0d3f00", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/fbf150b16a3635634b7dfb7f229d8fcd643c6c51", "name": "https://git.kernel.org/stable/c/fbf150b16a3635634b7dfb7f229d8fcd643c6c51", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/fbf150b16a3635634b7dfb7f229d8fcd643c6c51", "name": "https://git.kernel.org/stable/c/fbf150b16a3635634b7dfb7f229d8fcd643c6c51", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: batman-adv: fix error handling\n\nSyzbot reported ODEBUG warning in batadv_nc_mesh_free(). The problem was\nin wrong error handling in batadv_mesh_init().\n\nBefore this patch batadv_mesh_init() was calling batadv_mesh_free() in case\nof any batadv_*_init() calls failure. This approach may work well, when\nthere is some kind of indicator, which can tell which parts of batadv are\ninitialized; but there isn't any.\n\nAll written above lead to cleaning up uninitialized fields. Even if we hide\nODEBUG warning by initializing bat_priv->nc.work, syzbot was able to hit\nGPF in batadv_nc_purge_paths(), because hash pointer in still NULL. [1]\n\nTo fix these bugs we can unwind batadv_*_init() calls one by one.\nIt is good approach for 2 reasons: 1) It fixes bugs on error handling\npath 2) It improves the performance, since we won't call unneeded\nbatadv_*_free() functions.\n\nSo, this patch makes all batadv_*_init() clean up all allocated memory\nbefore returning with an error to no call correspoing batadv_*_free()\nand open-codes batadv_mesh_free() with proper order to avoid touching\nuninitialized fields."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-05-22T09:15Z", "lastModifiedDate": "2024-11-21T06:36Z"}