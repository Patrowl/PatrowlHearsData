{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2021-29504", "ASSIGNER": "security-advisories@github.com"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://github.com/wp-cli/checksum-command/pull/86", "name": "https://github.com/wp-cli/checksum-command/pull/86", "refsource": "", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/wp-cli/checksum-command/pull/86", "name": "https://github.com/wp-cli/checksum-command/pull/86", "refsource": "", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/wp-cli/config-command/pull/128", "name": "https://github.com/wp-cli/config-command/pull/128", "refsource": "", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/wp-cli/config-command/pull/128", "name": "https://github.com/wp-cli/config-command/pull/128", "refsource": "", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/wp-cli/core-command/pull/186", "name": "https://github.com/wp-cli/core-command/pull/186", "refsource": "", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/wp-cli/core-command/pull/186", "name": "https://github.com/wp-cli/core-command/pull/186", "refsource": "", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/wp-cli/extension-command/pull/287", "name": "https://github.com/wp-cli/extension-command/pull/287", "refsource": "", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/wp-cli/extension-command/pull/287", "name": "https://github.com/wp-cli/extension-command/pull/287", "refsource": "", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/wp-cli/package-command/pull/138", "name": "https://github.com/wp-cli/package-command/pull/138", "refsource": "", "tags": ["Third Party Advisory"]}, {"url": "https://github.com/wp-cli/package-command/pull/138", "name": "https://github.com/wp-cli/package-command/pull/138", "refsource": "", "tags": ["Third Party Advisory"]}, {"url": "https://github.com/wp-cli/wp-cli/pull/5523", "name": "https://github.com/wp-cli/wp-cli/pull/5523", "refsource": "", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/wp-cli/wp-cli/pull/5523", "name": "https://github.com/wp-cli/wp-cli/pull/5523", "refsource": "", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/wp-cli/wp-cli/security/advisories/GHSA-rwgm-f83r-v3qj", "name": "https://github.com/wp-cli/wp-cli/security/advisories/GHSA-rwgm-f83r-v3qj", "refsource": "", "tags": ["Third Party Advisory"]}, {"url": "https://github.com/wp-cli/wp-cli/security/advisories/GHSA-rwgm-f83r-v3qj", "name": "https://github.com/wp-cli/wp-cli/security/advisories/GHSA-rwgm-f83r-v3qj", "refsource": "", "tags": ["Third Party Advisory"]}]}, "description": {"description_data": [{"lang": "en", "value": "WP-CLI is the command-line interface for WordPress. An improper error handling in HTTPS requests management in WP-CLI version 0.12.0 and later allows remote attackers able to intercept the communication to remotely disable the certificate verification on WP-CLI side, gaining full control over the communication content, including the ability to impersonate update servers and push malicious updates towards WordPress instances controlled by the vulnerable WP-CLI agent, or push malicious updates toward WP-CLI itself. The vulnerability stems from the fact that the default behavior of `WP_CLI\\Utils\\http_request()` when encountering a TLS handshake error is to disable certificate validation and retry the same request. The default behavior has been changed with version 2.5.0 of WP-CLI and the `wp-cli/wp-cli` framework (via https://github.com/wp-cli/wp-cli/pull/5523) so that the `WP_CLI\\Utils\\http_request()` method accepts an `$insecure` option that is `false` by default and consequently that a TLS handshake failure is a hard error by default. This new default is a breaking change and ripples through to all consumers of `WP_CLI\\Utils\\http_request()`, including those in separate WP-CLI bundled or third-party packages. https://github.com/wp-cli/wp-cli/pull/5523 has also added an `--insecure` flag to the `cli update` command to counter this breaking change. There is no direct workaround for the default insecure behavior of `wp-cli/wp-cli` versions before 2.5.0. The workaround for dealing with the breaking change in the commands directly affected by the new secure default behavior is to add the `--insecure` flag to manually opt-in to the previous insecure behavior."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:a:wp-cli:wp-cli:*:*:*:*:*:*:*:*", "versionStartIncluding": "0.12.0", "versionEndExcluding": "2.5.0", "cpe_name": []}]}]}, "impact": {"baseMetricV3": {"cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 7.4, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.2, "impactScore": 5.2}, "baseMetricV2": {"cvssV2": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "severity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}}, "publishedDate": "2021-06-07T21:15Z", "lastModifiedDate": "2024-11-21T06:01Z"}