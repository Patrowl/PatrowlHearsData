{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2021-46912", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-476"}]}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/1ccdf1bed140820240e383ba0accc474ffc7f006", "name": "https://git.kernel.org/stable/c/1ccdf1bed140820240e383ba0accc474ffc7f006", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/1ccdf1bed140820240e383ba0accc474ffc7f006", "name": "https://git.kernel.org/stable/c/1ccdf1bed140820240e383ba0accc474ffc7f006", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/35d7491e2f77ce480097cabcaf93ed409e916e12", "name": "https://git.kernel.org/stable/c/35d7491e2f77ce480097cabcaf93ed409e916e12", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/35d7491e2f77ce480097cabcaf93ed409e916e12", "name": "https://git.kernel.org/stable/c/35d7491e2f77ce480097cabcaf93ed409e916e12", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/97684f0970f6e112926de631fdd98d9693c7e5c1", "name": "https://git.kernel.org/stable/c/97684f0970f6e112926de631fdd98d9693c7e5c1", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/97684f0970f6e112926de631fdd98d9693c7e5c1", "name": "https://git.kernel.org/stable/c/97684f0970f6e112926de631fdd98d9693c7e5c1", "refsource": "", "tags": ["Patch"]}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: Make tcp_allowed_congestion_control readonly in non-init netns\n\nCurrently, tcp_allowed_congestion_control is global and writable;\nwriting to it in any net namespace will leak into all other net\nnamespaces.\n\ntcp_available_congestion_control and tcp_allowed_congestion_control are\nthe only sysctls in ipv4_net_table (the per-netns sysctl table) with a\nNULL data pointer; their handlers (proc_tcp_available_congestion_control\nand proc_allowed_congestion_control) have no other way of referencing a\nstruct net. Thus, they operate globally.\n\nBecause ipv4_net_table does not use designated initializers, there is no\neasy way to fix up this one \"bad\" table entry. However, the data pointer\nupdating logic shouldn't be applied to NULL pointers anyway, so we\ninstead force these entries to be read-only.\n\nThese sysctls used to exist in ipv4_table (init-net only), but they were\nmoved to the per-net ipv4_net_table, presumably without realizing that\ntcp_allowed_congestion_control was writable and thus introduced a leak.\n\nBecause the intent of that commit was only to know (i.e. read) \"which\ncongestion algorithms are available or allowed\", this read-only solution\nshould be sufficient.\n\nThe logic added in recent commit\n31c4d2f160eb: (\"net: Ensure net namespace isolation of sysctls\")\ndoes not and cannot check for NULL data pointers, because\nother table entries (e.g. /proc/sys/net/netfilter/nf_log/) have\n.data=NULL but use other methods (.extra2) to access the struct net."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "versionStartIncluding": "5.11.0", "versionEndExcluding": "5.11.16", "cpe_name": []}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "versionStartIncluding": "5.7.0", "versionEndExcluding": "5.10.32", "cpe_name": []}]}]}, "impact": {"baseMetricV3": {"cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 5.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.8, "impactScore": 3.6}}, "publishedDate": "2024-02-27T07:15Z", "lastModifiedDate": "2024-11-21T06:34Z"}