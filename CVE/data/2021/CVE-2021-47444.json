{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2021-47444", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/09f3946bb452918dbfb1982add56f9ffaae393dc", "name": "https://git.kernel.org/stable/c/09f3946bb452918dbfb1982add56f9ffaae393dc", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/09f3946bb452918dbfb1982add56f9ffaae393dc", "name": "https://git.kernel.org/stable/c/09f3946bb452918dbfb1982add56f9ffaae393dc", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/97794170b696856483f74b47bfb6049780d2d3a0", "name": "https://git.kernel.org/stable/c/97794170b696856483f74b47bfb6049780d2d3a0", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/97794170b696856483f74b47bfb6049780d2d3a0", "name": "https://git.kernel.org/stable/c/97794170b696856483f74b47bfb6049780d2d3a0", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/a7b45024f66f9ec769e8dbb1a51ae83cd05929c7", "name": "https://git.kernel.org/stable/c/a7b45024f66f9ec769e8dbb1a51ae83cd05929c7", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/a7b45024f66f9ec769e8dbb1a51ae83cd05929c7", "name": "https://git.kernel.org/stable/c/a7b45024f66f9ec769e8dbb1a51ae83cd05929c7", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/edid: In connector_bad_edid() cap num_of_ext by num_blocks read\n\nIn commit e11f5bd8228f (\"drm: Add support for DP 1.4 Compliance edid\ncorruption test\") the function connector_bad_edid() started assuming\nthat the memory for the EDID passed to it was big enough to hold\n`edid[0x7e] + 1` blocks of data (1 extra for the base block). It\ncompletely ignored the fact that the function was passed `num_blocks`\nwhich indicated how much memory had been allocated for the EDID.\n\nLet's fix this by adding a bounds check.\n\nThis is important for handling the case where there's an error in the\nfirst block of the EDID. In that case we will call\nconnector_bad_edid() without having re-allocated memory based on\n`edid[0x7e]`."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-05-22T07:15Z", "lastModifiedDate": "2024-11-21T06:36Z"}