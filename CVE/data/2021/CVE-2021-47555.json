{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2021-47555", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/01d9cc2dea3fde3bad6d27f464eff463496e2b00", "name": "https://git.kernel.org/stable/c/01d9cc2dea3fde3bad6d27f464eff463496e2b00", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/01d9cc2dea3fde3bad6d27f464eff463496e2b00", "name": "https://git.kernel.org/stable/c/01d9cc2dea3fde3bad6d27f464eff463496e2b00", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/5e44178864b38dd70b877985abd7d86fdb95f27d", "name": "https://git.kernel.org/stable/c/5e44178864b38dd70b877985abd7d86fdb95f27d", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/5e44178864b38dd70b877985abd7d86fdb95f27d", "name": "https://git.kernel.org/stable/c/5e44178864b38dd70b877985abd7d86fdb95f27d", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/6e800ee43218a56acc93676bbb3d93b74779e555", "name": "https://git.kernel.org/stable/c/6e800ee43218a56acc93676bbb3d93b74779e555", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/6e800ee43218a56acc93676bbb3d93b74779e555", "name": "https://git.kernel.org/stable/c/6e800ee43218a56acc93676bbb3d93b74779e555", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/f7fc72a508cf115c273a7a29350069def1041890", "name": "https://git.kernel.org/stable/c/f7fc72a508cf115c273a7a29350069def1041890", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/f7fc72a508cf115c273a7a29350069def1041890", "name": "https://git.kernel.org/stable/c/f7fc72a508cf115c273a7a29350069def1041890", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: vlan: fix underflow for the real_dev refcnt\n\nInject error before dev_hold(real_dev) in register_vlan_dev(),\nand execute the following testcase:\n\nip link add dev dummy1 type dummy\nip link add name dummy1.100 link dummy1 type vlan id 100\nip link del dev dummy1\n\nWhen the dummy netdevice is removed, we will get a WARNING as following:\n\n=======================================================================\nrefcount_t: decrement hit 0; leaking memory.\nWARNING: CPU: 2 PID: 0 at lib/refcount.c:31 refcount_warn_saturate+0xbf/0x1e0\n\nand an endless loop of:\n\n=======================================================================\nunregister_netdevice: waiting for dummy1 to become free. Usage count = -1073741824\n\nThat is because dev_put(real_dev) in vlan_dev_free() be called without\ndev_hold(real_dev) in register_vlan_dev(). It makes the refcnt of real_dev\nunderflow.\n\nMove the dev_hold(real_dev) to vlan_dev_init() which is the call-back of\nndo_init(). That makes dev_hold() and dev_put() for vlan's real_dev\nsymmetrical."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-05-24T15:15Z", "lastModifiedDate": "2024-11-21T06:36Z"}