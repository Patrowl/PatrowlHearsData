{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2021-47416", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/064c2616234a7394867c924b5c1303974f3a4f4d", "name": "https://git.kernel.org/stable/c/064c2616234a7394867c924b5c1303974f3a4f4d", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/064c2616234a7394867c924b5c1303974f3a4f4d", "name": "https://git.kernel.org/stable/c/064c2616234a7394867c924b5c1303974f3a4f4d", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/0d2dd40a7be61b89a7c99dae8ee96389d27b413a", "name": "https://git.kernel.org/stable/c/0d2dd40a7be61b89a7c99dae8ee96389d27b413a", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/0d2dd40a7be61b89a7c99dae8ee96389d27b413a", "name": "https://git.kernel.org/stable/c/0d2dd40a7be61b89a7c99dae8ee96389d27b413a", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/2250392d930bd0d989f24d355d6355b0150256e7", "name": "https://git.kernel.org/stable/c/2250392d930bd0d989f24d355d6355b0150256e7", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/2250392d930bd0d989f24d355d6355b0150256e7", "name": "https://git.kernel.org/stable/c/2250392d930bd0d989f24d355d6355b0150256e7", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/2397b9e118721292429fea8807a698e71b94795f", "name": "https://git.kernel.org/stable/c/2397b9e118721292429fea8807a698e71b94795f", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/2397b9e118721292429fea8807a698e71b94795f", "name": "https://git.kernel.org/stable/c/2397b9e118721292429fea8807a698e71b94795f", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/25e9f88c7e3cc35f5e3d3db199660d28a15df639", "name": "https://git.kernel.org/stable/c/25e9f88c7e3cc35f5e3d3db199660d28a15df639", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/25e9f88c7e3cc35f5e3d3db199660d28a15df639", "name": "https://git.kernel.org/stable/c/25e9f88c7e3cc35f5e3d3db199660d28a15df639", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/414bb4ead1362ef2c8592db723c017258f213988", "name": "https://git.kernel.org/stable/c/414bb4ead1362ef2c8592db723c017258f213988", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/414bb4ead1362ef2c8592db723c017258f213988", "name": "https://git.kernel.org/stable/c/414bb4ead1362ef2c8592db723c017258f213988", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/ca6e11c337daf7925ff8a2aac8e84490a8691905", "name": "https://git.kernel.org/stable/c/ca6e11c337daf7925ff8a2aac8e84490a8691905", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/ca6e11c337daf7925ff8a2aac8e84490a8691905", "name": "https://git.kernel.org/stable/c/ca6e11c337daf7925ff8a2aac8e84490a8691905", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/f4f502a04ee1e543825af78f47eb7785015cd9f6", "name": "https://git.kernel.org/stable/c/f4f502a04ee1e543825af78f47eb7785015cd9f6", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/f4f502a04ee1e543825af78f47eb7785015cd9f6", "name": "https://git.kernel.org/stable/c/f4f502a04ee1e543825af78f47eb7785015cd9f6", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nphy: mdio: fix memory leak\n\nSyzbot reported memory leak in MDIO bus interface, the problem was in\nwrong state logic.\n\nMDIOBUS_ALLOCATED indicates 2 states:\n\t1. Bus is only allocated\n\t2. Bus allocated and __mdiobus_register() fails, but\n\t   device_register() was called\n\nIn case of device_register() has been called we should call put_device()\nto correctly free the memory allocated for this device, but mdiobus_free()\ncalls just kfree(dev) in case of MDIOBUS_ALLOCATED state\n\nTo avoid this behaviour we need to set bus->state to MDIOBUS_UNREGISTERED\n_before_ calling device_register(), because put_device() should be\ncalled even in case of device_register() failure."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-05-21T15:15Z", "lastModifiedDate": "2024-11-21T06:36Z"}