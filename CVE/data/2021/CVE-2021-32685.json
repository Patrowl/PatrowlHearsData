{"publishedDate": "2021-06-16T01:15Z", "lastModifiedDate": "2024-11-21T06:07Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2021-32685", "ASSIGNER": "security-advisories@github.com"}, "description": {"description_data": [{"lang": "en", "value": "tEnvoy contains the PGP, NaCl, and PBKDF2 in node.js and the browser (hashing, random, encryption, decryption, signatures, conversions), used by TogaTech.org. In versions prior to 7.0.3, the `verifyWithMessage` method of `tEnvoyNaClSigningKey` always returns `true` for any signature that has a SHA-512 hash matching the SHA-512 hash of the message even if the signature was invalid. This issue is patched in version 7.0.3. As a workaround: In `tenvoy.js` under the `verifyWithMessage` method definition within the `tEnvoyNaClSigningKey` class, ensure that the return statement call to `this.verify` ends in `.verified`."}, {"lang": "es", "value": "tEnvoy contiene el PGP, NaCl, y PBKDF2 en el archivo node.js y el navegador (hashing, aleatorio, cifrado, descifrado, firmas, conversiones), usado por TogaTech.org. En versiones anteriores a 7.0.3, el m\u00e9todo \"verifyWithMessage\" del par\u00e1metro \"tEnvoyNaClSigningKey\" siempre devuelve \"true\" para cualquier firma que tenga un hash SHA-512 que coincida con el hash SHA-512 del mensaje, incluso si la firma no es v\u00e1lida. Este problema se ha corregido en la versi\u00f3n 7.0.3. Como soluci\u00f3n: En \"tenvoy.js\", en la definici\u00f3n del m\u00e9todo \"verifyWithMessage\" dentro de la clase \"tEnvoyNaClSigningKey\", aseg\u00farese de que la llamada a la sentencia return de \"this.verify\" termine en \".verified\""}]}, "references": {"reference_data": [{"url": "https://github.com/TogaTech/tEnvoy/commit/a121b34a45e289d775c62e58841522891dee686b", "name": "", "refsource": "", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/TogaTech/tEnvoy/releases/tag/v7.0.3", "name": "", "refsource": "", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://github.com/TogaTech/tEnvoy/security/advisories/GHSA-7r96-8g3x-g36m", "name": "", "refsource": "", "tags": ["Third Party Advisory"]}, {"url": "https://github.com/TogaTech/tEnvoy/commit/a121b34a45e289d775c62e58841522891dee686b", "name": "", "refsource": "", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/TogaTech/tEnvoy/releases/tag/v7.0.3", "name": "", "refsource": "", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://github.com/TogaTech/tEnvoy/security/advisories/GHSA-7r96-8g3x-g36m", "name": "", "refsource": "", "tags": ["Third Party Advisory"]}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-347"}]}]}}, "impact": {"baseMetricV2": {"cvssV2": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "baseScore": 7.5, "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL"}, "exploitabilityScore": 10.0, "impactScore": 6.4, "severity": "HIGH", "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}, "baseMetricV3": {"exploitabilityScore": 3.9, "impactScore": 5.9, "cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "baseScore": 9.8, "baseSeverity": "CRITICAL", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH"}}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "negate": false, "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:a:togatech:tenvoy:*:*:*:*:*:node.js:*:*", "matchCriteriaId": "DE588619-F621-4DF3-9A31-2FE424EBBB4B", "cpe_name": [], "versionEndExcluding": "7.0.3"}]}]}}