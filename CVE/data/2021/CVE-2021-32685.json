{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2021-32685", "ASSIGNER": "security-advisories@github.com"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://github.com/TogaTech/tEnvoy/commit/a121b34a45e289d775c62e58841522891dee686b", "name": "https://github.com/TogaTech/tEnvoy/commit/a121b34a45e289d775c62e58841522891dee686b", "refsource": "", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/TogaTech/tEnvoy/commit/a121b34a45e289d775c62e58841522891dee686b", "name": "https://github.com/TogaTech/tEnvoy/commit/a121b34a45e289d775c62e58841522891dee686b", "refsource": "", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/TogaTech/tEnvoy/releases/tag/v7.0.3", "name": "https://github.com/TogaTech/tEnvoy/releases/tag/v7.0.3", "refsource": "", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://github.com/TogaTech/tEnvoy/releases/tag/v7.0.3", "name": "https://github.com/TogaTech/tEnvoy/releases/tag/v7.0.3", "refsource": "", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://github.com/TogaTech/tEnvoy/security/advisories/GHSA-7r96-8g3x-g36m", "name": "https://github.com/TogaTech/tEnvoy/security/advisories/GHSA-7r96-8g3x-g36m", "refsource": "", "tags": ["Third Party Advisory"]}, {"url": "https://github.com/TogaTech/tEnvoy/security/advisories/GHSA-7r96-8g3x-g36m", "name": "https://github.com/TogaTech/tEnvoy/security/advisories/GHSA-7r96-8g3x-g36m", "refsource": "", "tags": ["Third Party Advisory"]}]}, "description": {"description_data": [{"lang": "en", "value": "tEnvoy contains the PGP, NaCl, and PBKDF2 in node.js and the browser (hashing, random, encryption, decryption, signatures, conversions), used by TogaTech.org. In versions prior to 7.0.3, the `verifyWithMessage` method of `tEnvoyNaClSigningKey` always returns `true` for any signature that has a SHA-512 hash matching the SHA-512 hash of the message even if the signature was invalid. This issue is patched in version 7.0.3. As a workaround: In `tenvoy.js` under the `verifyWithMessage` method definition within the `tEnvoyNaClSigningKey` class, ensure that the return statement call to `this.verify` ends in `.verified`."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:a:togatech:tenvoy:*:*:*:*:*:node.js:*:*", "versionEndExcluding": "7.0.3", "cpe_name": []}]}]}, "impact": {"baseMetricV3": {"cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}, "baseMetricV2": {"cvssV2": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "severity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}}, "publishedDate": "2021-06-16T01:15Z", "lastModifiedDate": "2024-11-21T06:07Z"}