{"publishedDate": "2021-04-05T19:15Z", "lastModifiedDate": "2024-11-21T05:52Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2021-24208", "ASSIGNER": "contact@wpscan.com"}, "description": {"description_data": [{"lang": "en", "value": "The editor of the WP Page Builder WordPress plugin before 1.2.4 allows lower-privileged users to insert unfiltered HTML, including JavaScript, into pages via the \u201cRaw HTML\u201d widget and the \u201cCustom HTML\u201d widgets (though the custom HTML widget requires sending a crafted request - it appears that this widget uses some form of client side validation but not server side validation), all of which are added via the \u201cpage_builder_data\u201d parameter when performing the \u201cwppb_page_save\u201d AJAX action. It is also possible to insert malicious JavaScript via the \u201cwppb_page_css\u201d parameter (this can be done by closing out the style tag and opening a script tag) when performing the \u201cwppb_page_save\u201d AJAX action."}, {"lang": "es", "value": "El editor del plugin de WordPress WP Page Builder versiones anteriores a 1.2.4, permite a usuarios menos privilegiados insertar HTML sin filtrar, incluido JavaScript, en las p\u00e1ginas por medio del widget \"Raw HTML\" y los widgets \"Custom HTML\" (aunque el widget HTML personalizado requiere el env\u00edo una petici\u00f3n dise\u00f1ada (parece que este widget utiliza alguna forma de comprobaci\u00f3n del lado del cliente pero no del lado del servidor), todos los cuales son agregados por medio del par\u00e1metro \"page_builder_data\" al realizar la acci\u00f3n AJAX \"wppb_page_save\".&#xa0;Tambi\u00e9n es posible insertar JavaScript malicioso por medio del par\u00e1metro \"wppb_page_css\" (esto puede ser realizado al cerrar la etiqueta de estilo y abriendo una etiqueta de script) cuando se lleva a cabo la acci\u00f3n AJAX  \"wppb_page_save\""}]}, "references": {"reference_data": [{"url": "https://wpscan.com/vulnerability/c20e243d-b0de-4ae5-9a0d-b9d02c9b8141", "name": "", "refsource": "", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://www.themeum.com/wp-page-builder-updated-v1-2-4/", "name": "", "refsource": "", "tags": ["Patch", "Vendor Advisory"]}, {"url": "https://wpscan.com/vulnerability/c20e243d-b0de-4ae5-9a0d-b9d02c9b8141", "name": "", "refsource": "", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://www.themeum.com/wp-page-builder-updated-v1-2-4/", "name": "", "refsource": "", "tags": ["Patch", "Vendor Advisory"]}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-79"}]}]}}, "impact": {"baseMetricV2": {"cvssV2": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "baseScore": 3.5, "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE"}, "exploitabilityScore": 6.8, "impactScore": 2.9, "severity": "LOW", "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}, "baseMetricV3": {"exploitabilityScore": 2.3, "impactScore": 2.7, "cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "baseScore": 5.4, "baseSeverity": "MEDIUM", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE"}}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "negate": false, "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:a:themeum:wp_page_builder:*:*:*:*:*:wordpress:*:*", "matchCriteriaId": "47020215-1D45-40AC-A57A-65F118C6510E", "cpe_name": [], "versionEndExcluding": "1.2.4"}]}]}}