{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2021-47483", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/1cead23c1c0bc766dacb900a3b0269f651ad596f", "name": "https://git.kernel.org/stable/c/1cead23c1c0bc766dacb900a3b0269f651ad596f", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/1cead23c1c0bc766dacb900a3b0269f651ad596f", "name": "https://git.kernel.org/stable/c/1cead23c1c0bc766dacb900a3b0269f651ad596f", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/36e911a16b377bde0ad91a8c679069d0d310b1a6", "name": "https://git.kernel.org/stable/c/36e911a16b377bde0ad91a8c679069d0d310b1a6", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/36e911a16b377bde0ad91a8c679069d0d310b1a6", "name": "https://git.kernel.org/stable/c/36e911a16b377bde0ad91a8c679069d0d310b1a6", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/3dae1a4eced3ee733d7222e69b8a55caf2d61091", "name": "https://git.kernel.org/stable/c/3dae1a4eced3ee733d7222e69b8a55caf2d61091", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/3dae1a4eced3ee733d7222e69b8a55caf2d61091", "name": "https://git.kernel.org/stable/c/3dae1a4eced3ee733d7222e69b8a55caf2d61091", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/50cc1462a668dc62949a1127388bc3af785ce047", "name": "https://git.kernel.org/stable/c/50cc1462a668dc62949a1127388bc3af785ce047", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/50cc1462a668dc62949a1127388bc3af785ce047", "name": "https://git.kernel.org/stable/c/50cc1462a668dc62949a1127388bc3af785ce047", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/55e6d8037805b3400096d621091dfbf713f97e83", "name": "https://git.kernel.org/stable/c/55e6d8037805b3400096d621091dfbf713f97e83", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/55e6d8037805b3400096d621091dfbf713f97e83", "name": "https://git.kernel.org/stable/c/55e6d8037805b3400096d621091dfbf713f97e83", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/758ced2c3878ff789801e6fee808e185c5cf08d6", "name": "https://git.kernel.org/stable/c/758ced2c3878ff789801e6fee808e185c5cf08d6", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/758ced2c3878ff789801e6fee808e185c5cf08d6", "name": "https://git.kernel.org/stable/c/758ced2c3878ff789801e6fee808e185c5cf08d6", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/e72dce9afbdbfa70d9b44f5908a50ff6c4858999", "name": "https://git.kernel.org/stable/c/e72dce9afbdbfa70d9b44f5908a50ff6c4858999", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/e72dce9afbdbfa70d9b44f5908a50ff6c4858999", "name": "https://git.kernel.org/stable/c/e72dce9afbdbfa70d9b44f5908a50ff6c4858999", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/fc081477b47dfc3a6cb50a96087fc29674013fc2", "name": "https://git.kernel.org/stable/c/fc081477b47dfc3a6cb50a96087fc29674013fc2", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/fc081477b47dfc3a6cb50a96087fc29674013fc2", "name": "https://git.kernel.org/stable/c/fc081477b47dfc3a6cb50a96087fc29674013fc2", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nregmap: Fix possible double-free in regcache_rbtree_exit()\n\nIn regcache_rbtree_insert_to_block(), when 'present' realloc failed,\nthe 'blk' which is supposed to assign to 'rbnode->block' will be freed,\nso 'rbnode->block' points a freed memory, in the error handling path of\nregcache_rbtree_init(), 'rbnode->block' will be freed again in\nregcache_rbtree_exit(), KASAN will report double-free as follows:\n\nBUG: KASAN: double-free or invalid-free in kfree+0xce/0x390\nCall Trace:\n slab_free_freelist_hook+0x10d/0x240\n kfree+0xce/0x390\n regcache_rbtree_exit+0x15d/0x1a0\n regcache_rbtree_init+0x224/0x2c0\n regcache_init+0x88d/0x1310\n __regmap_init+0x3151/0x4a80\n __devm_regmap_init+0x7d/0x100\n madera_spi_probe+0x10f/0x333 [madera_spi]\n spi_probe+0x183/0x210\n really_probe+0x285/0xc30\n\nTo fix this, moving up the assignment of rbnode->block to immediately after\nthe reallocation has succeeded so that the data structure stays valid even\nif the second reallocation fails."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-05-22T09:15Z", "lastModifiedDate": "2024-11-21T06:36Z"}