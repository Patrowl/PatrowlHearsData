{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2021-46966", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/1d53ca5d131074c925ce38361fb0376d3bf7e394", "name": "https://git.kernel.org/stable/c/1d53ca5d131074c925ce38361fb0376d3bf7e394", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/1d53ca5d131074c925ce38361fb0376d3bf7e394", "name": "https://git.kernel.org/stable/c/1d53ca5d131074c925ce38361fb0376d3bf7e394", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/62dc2440ebb552aa0d7f635e1697e077d9d21203", "name": "https://git.kernel.org/stable/c/62dc2440ebb552aa0d7f635e1697e077d9d21203", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/62dc2440ebb552aa0d7f635e1697e077d9d21203", "name": "https://git.kernel.org/stable/c/62dc2440ebb552aa0d7f635e1697e077d9d21203", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/72814a94c38a33239793f7622cec6ace1e540c4b", "name": "https://git.kernel.org/stable/c/72814a94c38a33239793f7622cec6ace1e540c4b", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/72814a94c38a33239793f7622cec6ace1e540c4b", "name": "https://git.kernel.org/stable/c/72814a94c38a33239793f7622cec6ace1e540c4b", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/8b04d57f30caf76649d0567551589af9a66ca9be", "name": "https://git.kernel.org/stable/c/8b04d57f30caf76649d0567551589af9a66ca9be", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/8b04d57f30caf76649d0567551589af9a66ca9be", "name": "https://git.kernel.org/stable/c/8b04d57f30caf76649d0567551589af9a66ca9be", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/90575d1d9311b753cf1718f4ce9061ddda7dfd23", "name": "https://git.kernel.org/stable/c/90575d1d9311b753cf1718f4ce9061ddda7dfd23", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/90575d1d9311b753cf1718f4ce9061ddda7dfd23", "name": "https://git.kernel.org/stable/c/90575d1d9311b753cf1718f4ce9061ddda7dfd23", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/a5b26a2e362f572d87e9fd35435680e557052a17", "name": "https://git.kernel.org/stable/c/a5b26a2e362f572d87e9fd35435680e557052a17", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/a5b26a2e362f572d87e9fd35435680e557052a17", "name": "https://git.kernel.org/stable/c/a5b26a2e362f572d87e9fd35435680e557052a17", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b7a5baaae212a686ceb812c32fceed79c03c0234", "name": "https://git.kernel.org/stable/c/b7a5baaae212a686ceb812c32fceed79c03c0234", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/b7a5baaae212a686ceb812c32fceed79c03c0234", "name": "https://git.kernel.org/stable/c/b7a5baaae212a686ceb812c32fceed79c03c0234", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/e483bb9a991bdae29a0caa4b3a6d002c968f94aa", "name": "https://git.kernel.org/stable/c/e483bb9a991bdae29a0caa4b3a6d002c968f94aa", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/e483bb9a991bdae29a0caa4b3a6d002c968f94aa", "name": "https://git.kernel.org/stable/c/e483bb9a991bdae29a0caa4b3a6d002c968f94aa", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/f16737caf41fc06cfe6e49048becb09657074d4b", "name": "https://git.kernel.org/stable/c/f16737caf41fc06cfe6e49048becb09657074d4b", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/f16737caf41fc06cfe6e49048becb09657074d4b", "name": "https://git.kernel.org/stable/c/f16737caf41fc06cfe6e49048becb09657074d4b", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nACPI: custom_method: fix potential use-after-free issue\n\nIn cm_write(), buf is always freed when reaching the end of the\nfunction.  If the requested count is less than table.length, the\nallocated buffer will be freed but subsequent calls to cm_write() will\nstill try to access it.\n\nRemove the unconditional kfree(buf) at the end of the function and\nset the buf to NULL in the -EINVAL error path to match the rest of\nfunction."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-02-27T19:04Z", "lastModifiedDate": "2024-11-21T06:35Z"}