{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2021-47295", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/8d7924ce85bae64e7a67c366c7c50840f49f3a62", "name": "https://git.kernel.org/stable/c/8d7924ce85bae64e7a67c366c7c50840f49f3a62", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/8d7924ce85bae64e7a67c366c7c50840f49f3a62", "name": "https://git.kernel.org/stable/c/8d7924ce85bae64e7a67c366c7c50840f49f3a62", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/8e9662fde6d63c78eb1350f6167f64c9d71a865b", "name": "https://git.kernel.org/stable/c/8e9662fde6d63c78eb1350f6167f64c9d71a865b", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/8e9662fde6d63c78eb1350f6167f64c9d71a865b", "name": "https://git.kernel.org/stable/c/8e9662fde6d63c78eb1350f6167f64c9d71a865b", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/cac71d27745f92ee13f0ecc668ffe151a4a9c9b1", "name": "https://git.kernel.org/stable/c/cac71d27745f92ee13f0ecc668ffe151a4a9c9b1", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/cac71d27745f92ee13f0ecc668ffe151a4a9c9b1", "name": "https://git.kernel.org/stable/c/cac71d27745f92ee13f0ecc668ffe151a4a9c9b1", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/f5051bcece50140abd1a11a2d36dc3ec5484fc32", "name": "https://git.kernel.org/stable/c/f5051bcece50140abd1a11a2d36dc3ec5484fc32", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/f5051bcece50140abd1a11a2d36dc3ec5484fc32", "name": "https://git.kernel.org/stable/c/f5051bcece50140abd1a11a2d36dc3ec5484fc32", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: sched: fix memory leak in tcindex_partial_destroy_work\n\nSyzbot reported memory leak in tcindex_set_parms(). The problem was in\nnon-freed perfect hash in tcindex_partial_destroy_work().\n\nIn tcindex_set_parms() new tcindex_data is allocated and some fields from\nold one are copied to new one, but not the perfect hash. Since\ntcindex_partial_destroy_work() is the destroy function for old\ntcindex_data, we need to free perfect hash to avoid memory leak."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-05-21T15:15Z", "lastModifiedDate": "2024-11-21T06:35Z"}