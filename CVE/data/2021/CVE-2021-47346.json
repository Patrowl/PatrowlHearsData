{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2021-47346", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/0115687be7b13993066aef602253a53d55f5b11f", "name": "https://git.kernel.org/stable/c/0115687be7b13993066aef602253a53d55f5b11f", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/0115687be7b13993066aef602253a53d55f5b11f", "name": "https://git.kernel.org/stable/c/0115687be7b13993066aef602253a53d55f5b11f", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/04bd77ef4f4d9fc6102023b85f4590fc2130aac5", "name": "https://git.kernel.org/stable/c/04bd77ef4f4d9fc6102023b85f4590fc2130aac5", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/04bd77ef4f4d9fc6102023b85f4590fc2130aac5", "name": "https://git.kernel.org/stable/c/04bd77ef4f4d9fc6102023b85f4590fc2130aac5", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/35c1c4bd2d59ad734129d4e232af9d1098023918", "name": "https://git.kernel.org/stable/c/35c1c4bd2d59ad734129d4e232af9d1098023918", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/35c1c4bd2d59ad734129d4e232af9d1098023918", "name": "https://git.kernel.org/stable/c/35c1c4bd2d59ad734129d4e232af9d1098023918", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/5fae8a946ac2df879caf3f79a193d4766d00239b", "name": "https://git.kernel.org/stable/c/5fae8a946ac2df879caf3f79a193d4766d00239b", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/5fae8a946ac2df879caf3f79a193d4766d00239b", "name": "https://git.kernel.org/stable/c/5fae8a946ac2df879caf3f79a193d4766d00239b", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/733d4d95c0101d5f277b8e4910411d016e49a9dc", "name": "https://git.kernel.org/stable/c/733d4d95c0101d5f277b8e4910411d016e49a9dc", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/733d4d95c0101d5f277b8e4910411d016e49a9dc", "name": "https://git.kernel.org/stable/c/733d4d95c0101d5f277b8e4910411d016e49a9dc", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/ef0a06acc6b16388640ad367eedfa2a17f1945db", "name": "https://git.kernel.org/stable/c/ef0a06acc6b16388640ad367eedfa2a17f1945db", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/ef0a06acc6b16388640ad367eedfa2a17f1945db", "name": "https://git.kernel.org/stable/c/ef0a06acc6b16388640ad367eedfa2a17f1945db", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\ncoresight: tmc-etf: Fix global-out-of-bounds in tmc_update_etf_buffer()\n\ncommit 6f755e85c332 (\"coresight: Add helper for inserting synchronization\npackets\") removed trailing '\\0' from barrier_pkt array and updated the\ncall sites like etb_update_buffer() to have proper checks for barrier_pkt\nsize before read but missed updating tmc_update_etf_buffer() which still\nreads barrier_pkt past the array size resulting in KASAN out-of-bounds\nbug. Fix this by adding a check for barrier_pkt size before accessing\nlike it is done in etb_update_buffer().\n\n BUG: KASAN: global-out-of-bounds in tmc_update_etf_buffer+0x4b8/0x698\n Read of size 4 at addr ffffffd05b7d1030 by task perf/2629\n\n Call trace:\n  dump_backtrace+0x0/0x27c\n  show_stack+0x20/0x2c\n  dump_stack+0x11c/0x188\n  print_address_description+0x3c/0x4a4\n  __kasan_report+0x140/0x164\n  kasan_report+0x10/0x18\n  __asan_report_load4_noabort+0x1c/0x24\n  tmc_update_etf_buffer+0x4b8/0x698\n  etm_event_stop+0x248/0x2d8\n  etm_event_del+0x20/0x2c\n  event_sched_out+0x214/0x6f0\n  group_sched_out+0xd0/0x270\n  ctx_sched_out+0x2ec/0x518\n  __perf_event_task_sched_out+0x4fc/0xe6c\n  __schedule+0x1094/0x16a0\n  preempt_schedule_irq+0x88/0x170\n  arm64_preempt_schedule_irq+0xf0/0x18c\n  el1_irq+0xe8/0x180\n  perf_event_exec+0x4d8/0x56c\n  setup_new_exec+0x204/0x400\n  load_elf_binary+0x72c/0x18c0\n  search_binary_handler+0x13c/0x420\n  load_script+0x500/0x6c4\n  search_binary_handler+0x13c/0x420\n  exec_binprm+0x118/0x654\n  __do_execve_file+0x77c/0xba4\n  __arm64_compat_sys_execve+0x98/0xac\n  el0_svc_common+0x1f8/0x5e0\n  el0_svc_compat_handler+0x84/0xb0\n  el0_svc_compat+0x10/0x50\n\n The buggy address belongs to the variable:\n  barrier_pkt+0x10/0x40\n\n Memory state around the buggy address:\n  ffffffd05b7d0f00: fa fa fa fa 04 fa fa fa fa fa fa fa 00 00 00 00\n  ffffffd05b7d0f80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n >ffffffd05b7d1000: 00 00 00 00 00 00 fa fa fa fa fa fa 00 00 00 03\n                                      ^\n  ffffffd05b7d1080: fa fa fa fa 00 02 fa fa fa fa fa fa 03 fa fa fa\n  ffffffd05b7d1100: fa fa fa fa 00 00 00 00 05 fa fa fa fa fa fa fa\n =================================================================="}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-05-21T15:15Z", "lastModifiedDate": "2024-11-21T06:35Z"}