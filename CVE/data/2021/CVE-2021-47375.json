{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2021-47375", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/3815fe7371d2411ce164281cef40d9fc7b323dee", "name": "https://git.kernel.org/stable/c/3815fe7371d2411ce164281cef40d9fc7b323dee", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/3815fe7371d2411ce164281cef40d9fc7b323dee", "name": "https://git.kernel.org/stable/c/3815fe7371d2411ce164281cef40d9fc7b323dee", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/488da313edf3abea7f7733efe011c96b23740ab5", "name": "https://git.kernel.org/stable/c/488da313edf3abea7f7733efe011c96b23740ab5", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/488da313edf3abea7f7733efe011c96b23740ab5", "name": "https://git.kernel.org/stable/c/488da313edf3abea7f7733efe011c96b23740ab5", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/5afedf670caf30a2b5a52da96eb7eac7dee6a9c9", "name": "https://git.kernel.org/stable/c/5afedf670caf30a2b5a52da96eb7eac7dee6a9c9", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/5afedf670caf30a2b5a52da96eb7eac7dee6a9c9", "name": "https://git.kernel.org/stable/c/5afedf670caf30a2b5a52da96eb7eac7dee6a9c9", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/677e362ba807f3aafe6f405c07e0b37244da5222", "name": "https://git.kernel.org/stable/c/677e362ba807f3aafe6f405c07e0b37244da5222", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/677e362ba807f3aafe6f405c07e0b37244da5222", "name": "https://git.kernel.org/stable/c/677e362ba807f3aafe6f405c07e0b37244da5222", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/a5f8e86192612d0183047448d8bbe7918b3f1a26", "name": "https://git.kernel.org/stable/c/a5f8e86192612d0183047448d8bbe7918b3f1a26", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/a5f8e86192612d0183047448d8bbe7918b3f1a26", "name": "https://git.kernel.org/stable/c/a5f8e86192612d0183047448d8bbe7918b3f1a26", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/d56171d9360c0170c5c5f8f7e2362a2e999eca40", "name": "https://git.kernel.org/stable/c/d56171d9360c0170c5c5f8f7e2362a2e999eca40", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/d56171d9360c0170c5c5f8f7e2362a2e999eca40", "name": "https://git.kernel.org/stable/c/d56171d9360c0170c5c5f8f7e2362a2e999eca40", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/dacfd5e4d1142bfb3809aab3634a375f6f373269", "name": "https://git.kernel.org/stable/c/dacfd5e4d1142bfb3809aab3634a375f6f373269", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/dacfd5e4d1142bfb3809aab3634a375f6f373269", "name": "https://git.kernel.org/stable/c/dacfd5e4d1142bfb3809aab3634a375f6f373269", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/ebb8d26d93c3ec3c7576c52a8373a2309423c069", "name": "https://git.kernel.org/stable/c/ebb8d26d93c3ec3c7576c52a8373a2309423c069", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/ebb8d26d93c3ec3c7576c52a8373a2309423c069", "name": "https://git.kernel.org/stable/c/ebb8d26d93c3ec3c7576c52a8373a2309423c069", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nblktrace: Fix uaf in blk_trace access after removing by sysfs\n\nThere is an use-after-free problem triggered by following process:\n\n      P1(sda)\t\t\t\tP2(sdb)\n\t\t\techo 0 > /sys/block/sdb/trace/enable\n\t\t\t  blk_trace_remove_queue\n\t\t\t    synchronize_rcu\n\t\t\t    blk_trace_free\n\t\t\t      relay_close\nrcu_read_lock\n__blk_add_trace\n  trace_note_tsk\n  (Iterate running_trace_list)\n\t\t\t        relay_close_buf\n\t\t\t\t  relay_destroy_buf\n\t\t\t\t    kfree(buf)\n    trace_note(sdb's bt)\n      relay_reserve\n        buf->offset <- nullptr deference (use-after-free) !!!\nrcu_read_unlock\n\n[  502.714379] BUG: kernel NULL pointer dereference, address:\n0000000000000010\n[  502.715260] #PF: supervisor read access in kernel mode\n[  502.715903] #PF: error_code(0x0000) - not-present page\n[  502.716546] PGD 103984067 P4D 103984067 PUD 17592b067 PMD 0\n[  502.717252] Oops: 0000 [#1] SMP\n[  502.720308] RIP: 0010:trace_note.isra.0+0x86/0x360\n[  502.732872] Call Trace:\n[  502.733193]  __blk_add_trace.cold+0x137/0x1a3\n[  502.733734]  blk_add_trace_rq+0x7b/0xd0\n[  502.734207]  blk_add_trace_rq_issue+0x54/0xa0\n[  502.734755]  blk_mq_start_request+0xde/0x1b0\n[  502.735287]  scsi_queue_rq+0x528/0x1140\n...\n[  502.742704]  sg_new_write.isra.0+0x16e/0x3e0\n[  502.747501]  sg_ioctl+0x466/0x1100\n\nReproduce method:\n  ioctl(/dev/sda, BLKTRACESETUP, blk_user_trace_setup[buf_size=127])\n  ioctl(/dev/sda, BLKTRACESTART)\n  ioctl(/dev/sdb, BLKTRACESETUP, blk_user_trace_setup[buf_size=127])\n  ioctl(/dev/sdb, BLKTRACESTART)\n\n  echo 0 > /sys/block/sdb/trace/enable &\n  // Add delay(mdelay/msleep) before kernel enters blk_trace_free()\n\n  ioctl$SG_IO(/dev/sda, SG_IO, ...)\n  // Enters trace_note_tsk() after blk_trace_free() returned\n  // Use mdelay in rcu region rather than msleep(which may schedule out)\n\nRemove blk_trace from running_list before calling blk_trace_free() by\nsysfs if blk_trace is at Blktrace_running state."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-05-21T15:15Z", "lastModifiedDate": "2024-11-21T06:36Z"}