{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2021-47190", "ASSIGNER": "cve@kernel.org"}, "problemtype": {"problemtype_data": [{"description": []}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/11589d3144bc4e272e0aae46ce8156162e99babc", "name": "https://git.kernel.org/stable/c/11589d3144bc4e272e0aae46ce8156162e99babc", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/11589d3144bc4e272e0aae46ce8156162e99babc", "name": "https://git.kernel.org/stable/c/11589d3144bc4e272e0aae46ce8156162e99babc", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/4924b1f7c46711762fd0e65c135ccfbcfd6ded1f", "name": "https://git.kernel.org/stable/c/4924b1f7c46711762fd0e65c135ccfbcfd6ded1f", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/4924b1f7c46711762fd0e65c135ccfbcfd6ded1f", "name": "https://git.kernel.org/stable/c/4924b1f7c46711762fd0e65c135ccfbcfd6ded1f", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/642fc22210a5e59d40b1e4d56d21ec3effd401f2", "name": "https://git.kernel.org/stable/c/642fc22210a5e59d40b1e4d56d21ec3effd401f2", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/642fc22210a5e59d40b1e4d56d21ec3effd401f2", "name": "https://git.kernel.org/stable/c/642fc22210a5e59d40b1e4d56d21ec3effd401f2", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/ab7c3d8d81c511ddfb27823fb07081c96422b56e", "name": "https://git.kernel.org/stable/c/ab7c3d8d81c511ddfb27823fb07081c96422b56e", "refsource": "", "tags": []}, {"url": "https://git.kernel.org/stable/c/ab7c3d8d81c511ddfb27823fb07081c96422b56e", "name": "https://git.kernel.org/stable/c/ab7c3d8d81c511ddfb27823fb07081c96422b56e", "refsource": "", "tags": []}]}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nperf bpf: Avoid memory leak from perf_env__insert_btf()\n\nperf_env__insert_btf() doesn't insert if a duplicate BTF id is\nencountered and this causes a memory leak. Modify the function to return\na success/error value and then free the memory if insertion didn't\nhappen.\n\nv2. Adds a return -1 when the insertion error occurs in\n    perf_env__fetch_btf. This doesn't affect anything as the result is\n    never checked."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": []}, "impact": {}, "publishedDate": "2024-04-10T19:15Z", "lastModifiedDate": "2024-11-21T06:35Z"}