{"publishedDate": "2020-09-25T19:15Z", "lastModifiedDate": "2024-11-21T05:05Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2020-15214", "ASSIGNER": "security-advisories@github.com"}, "description": {"description_data": [{"lang": "en", "value": "In TensorFlow Lite before versions 2.2.1 and 2.3.1, models using segment sum can trigger a write out bounds / segmentation fault if the segment ids are not sorted. Code assumes that the segment ids are in increasing order, using the last element of the tensor holding them to determine the dimensionality of output tensor. This results in allocating insufficient memory for the output tensor and in a write outside the bounds of the output array. This usually results in a segmentation fault, but depending on runtime conditions it can provide for a write gadget to be used in future memory corruption-based exploits. The issue is patched in commit 204945b19e44b57906c9344c0d00120eeeae178a and is released in TensorFlow versions 2.2.1, or 2.3.1. A potential workaround would be to add a custom `Verifier` to the model loading code to ensure that the segment ids are sorted, although this only handles the case when the segment ids are stored statically in the model. A similar validation could be done if the segment ids are generated at runtime between inference steps. If the segment ids are generated as outputs of a tensor during inference steps, then there are no possible workaround and users are advised to upgrade to patched code."}, {"lang": "es", "value": "En TensorFlow Lite versiones anteriores a 2.2.1 y 2.3.1, los modelos que utilizan la suma de segmentos pueden desencadenar un fallo de segmentaci\u00f3n y una escritura fuera de l\u00edmites si los ids de segmento no est\u00e1n ordenados. El c\u00f3digo asume que los ids de segmento est\u00e1n en orden creciente, usando el \u00faltimo elemento del tensor que los conserva para determinar la dimensionalidad del tensor de salida. Esto resulta en una asignaci\u00f3n de memoria insuficiente para el tensor de salida y una escritura fuera de l\u00edmites de la matriz de salida. Esto usualmente, resulta en un fallo de segmentaci\u00f3n, pero dependiendo de las condiciones del tiempo de ejecuci\u00f3n, puede proporcionar un gadget de escritura que se usar\u00e1 en futuras explotaciones basadas ??en una corrupci\u00f3n de la memoria. El problema es parcheado en el commit 204945b19e44b57906c9344c0d00120eeeae178a y es publicado en TensorFlow versiones 2.2.1 o 2.3.1. Una soluci\u00f3n alternativa potencial ser\u00eda agregar un \"Verifier\" personalizado al c\u00f3digo de carga del modelo para asegurar que los ids de segmento est\u00e9n ordenados, aunque esto solo maneja el caso cuando los ids de segmento son almacenados est\u00e1ticamente en el modelo. Una comprobaci\u00f3n similar podr\u00eda ser realizada si los ids de segmento se generan en el tiempo de ejecuci\u00f3n entre los pasos de inferencia. Si los ids de segmento son generados como salidas de un tensor durante los pasos de inferencia, entonces no existe una posible soluci\u00f3n alternativa y se recomienda a los usuarios actualizar al c\u00f3digo parcheado"}]}, "references": {"reference_data": [{"url": "https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a", "name": "", "refsource": "", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1", "name": "", "refsource": "", "tags": ["Third Party Advisory"]}, {"url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2cq-cprg-frvm", "name": "", "refsource": "", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a", "name": "", "refsource": "", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1", "name": "", "refsource": "", "tags": ["Third Party Advisory"]}, {"url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2cq-cprg-frvm", "name": "", "refsource": "", "tags": ["Exploit", "Third Party Advisory"]}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-787"}]}]}}, "impact": {"baseMetricV2": {"cvssV2": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:P/A:P", "baseScore": 6.8, "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL"}, "exploitabilityScore": 8.6, "impactScore": 6.4, "severity": "MEDIUM", "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}, "baseMetricV3": {"exploitabilityScore": 2.2, "impactScore": 5.3, "cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:L/I:L/A:H", "baseScore": 8.1, "baseSeverity": "HIGH", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "HIGH"}}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "negate": false, "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:a:google:tensorflow:*:*:*:*:lite:*:*:*", "matchCriteriaId": "323B716A-E8F7-4CDA-B8FD-A56977D59C02", "cpe_name": [], "versionStartIncluding": "2.2.0", "versionEndExcluding": "2.2.1"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:a:google:tensorflow:*:*:*:*:lite:*:*:*", "matchCriteriaId": "C09502A8-B667-4867-BEBD-40333E98A601", "cpe_name": [], "versionStartIncluding": "2.3.0", "versionEndExcluding": "2.3.1"}]}]}}