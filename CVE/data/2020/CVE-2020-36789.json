{"publishedDate": "2025-04-17T18:15Z", "lastModifiedDate": "2025-04-29T18:55Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2020-36789", "ASSIGNER": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"}, "description": {"description_data": [{"lang": "en", "value": "In the Linux kernel, the following vulnerability has been resolved:\n\ncan: dev: can_get_echo_skb(): prevent call to kfree_skb() in hard IRQ context\n\nIf a driver calls can_get_echo_skb() during a hardware IRQ (which is often, but\nnot always, the case), the 'WARN_ON(in_irq)' in\nnet/core/skbuff.c#skb_release_head_state() might be triggered, under network\ncongestion circumstances, together with the potential risk of a NULL pointer\ndereference.\n\nThe root cause of this issue is the call to kfree_skb() instead of\ndev_kfree_skb_irq() in net/core/dev.c#enqueue_to_backlog().\n\nThis patch prevents the skb to be freed within the call to netif_rx() by\nincrementing its reference count with skb_get(). The skb is finally freed by\none of the in-irq-context safe functions: dev_consume_skb_any() or\ndev_kfree_skb_any(). The \"any\" version is used because some drivers might call\ncan_get_echo_skb() in a normal context.\n\nThe reason for this issue to occur is that initially, in the core network\nstack, loopback skb were not supposed to be received in hardware IRQ context.\nThe CAN stack is an exeption.\n\nThis bug was previously reported back in 2017 in [1] but the proposed patch\nnever got accepted.\n\nWhile [1] directly modifies net/core/dev.c, we try to propose here a\nsmoother modification local to CAN network stack (the assumption\nbehind is that only CAN devices are affected by this issue).\n\n[1] http://lore.kernel.org/r/57a3ffb6-3309-3ad5-5a34-e93c3fe3614d@cetitec.com"}, {"lang": "es", "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: can: dev: can_get_echo_skb(): evitar la llamada a kfree_skb() en el contexto de IRQ duro Si un controlador llama a can_get_echo_skb() durante un IRQ de hardware (que es a menudo, pero no siempre, el caso), el 'WARN_ON(in_irq)' en net/core/skbuff.c#skb_release_head_state() podr\u00eda activarse, en circunstancias de congesti\u00f3n de la red, junto con el riesgo potencial de una desreferencia de puntero NULL. La causa ra\u00edz de este problema es la llamada a kfree_skb() en lugar de dev_kfree_skb_irq() en net/core/dev.c#enqueue_to_backlog(). Este parche evita que el skb se libere dentro de la llamada a netif_rx() incrementando su contador de referencias con skb_get(). El skb se libera finalmente mediante una de las funciones seguras en contexto IRQ: dev_consume_skb_any() o dev_kfree_skb_any(). Se utiliza la versi\u00f3n \"any\" porque algunos controladores podr\u00edan llamar a can_get_echo_skb() en un contexto normal. Este problema se debe a que, inicialmente, en la pila de red principal, no se esperaba que los skb de bucle invertido se recibieran en el contexto IRQ de hardware. La pila CAN es una excepci\u00f3n. Este error se report\u00f3 previamente en 2017 en [1], pero el parche propuesto nunca fue aceptado. Si bien [1] modifica directamente net/core/dev.c, aqu\u00ed intentamos proponer una modificaci\u00f3n m\u00e1s fluida local en la pila de red CAN (suponiendo que solo los dispositivos CAN se ven afectados por este problema). [1] http://lore.kernel.org/r/57a3ffb6-3309-3ad5-5a34-e93c3fe3614d@cetitec.com"}]}, "references": {"reference_data": [{"url": "https://git.kernel.org/stable/c/2283f79b22684d2812e5c76fc2280aae00390365", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/248b71ce92d4f3a574b2537f9838f48e892618f4", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/3a922a85701939624484e7f2fd07d32beed00d25", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/451187b20431924d13fcfecc500d7cd2d9951bac", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/7e4cf2ec0ca236c3e5f904239cec6efe1f3baf22", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/87530b557affe01c764de32dbeb58cdf47234574", "name": "", "refsource": "", "tags": ["Patch"]}, {"url": "https://git.kernel.org/stable/c/ab46748bf98864f9c3f5559060bf8caf9df2b41e", "name": "", "refsource": "", "tags": ["Patch"]}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-476"}]}]}}, "impact": {"baseMetricV3": {"exploitabilityScore": 1.8, "impactScore": 3.6, "cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H", "baseScore": 5.5, "baseSeverity": "MEDIUM", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH"}}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "negate": false, "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "matchCriteriaId": "BCE79E39-47AC-4822-993E-020CB01414EB", "cpe_name": [], "versionStartIncluding": "2.6.31", "versionEndExcluding": "4.4.244"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "matchCriteriaId": "5DA13F99-FB5C-48E2-89F8-771B5DA2F0D1", "cpe_name": [], "versionStartIncluding": "4.5", "versionEndExcluding": "4.9.244"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "matchCriteriaId": "DD9E0DA2-567F-4DF2-9A1E-5D22A91FA245", "cpe_name": [], "versionStartIncluding": "4.10", "versionEndExcluding": "4.14.207"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "matchCriteriaId": "3DABF800-EF14-41DA-B3D6-4B5DBF148443", "cpe_name": [], "versionStartIncluding": "4.15", "versionEndExcluding": "4.19.158"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "matchCriteriaId": "DFFC67F2-DDE1-4CA5-A075-32865562DF37", "cpe_name": [], "versionStartIncluding": "4.20", "versionEndExcluding": "5.4.78"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "matchCriteriaId": "8FC7AE04-F63B-4317-8485-E44A13A4CFCC", "cpe_name": [], "versionStartIncluding": "5.5", "versionEndExcluding": "5.9.9"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:5.10:rc1:*:*:*:*:*:*", "matchCriteriaId": "9DD7EB1D-064C-4DB9-AD34-D8EF78312C17", "cpe_name": []}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:5.10:rc2:*:*:*:*:*:*", "matchCriteriaId": "12505363-342C-4333-98C0-41F031024348", "cpe_name": []}]}]}}