{"publishedDate": "2020-11-25T17:15Z", "lastModifiedDate": "2024-11-21T05:19Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2020-26243", "ASSIGNER": "security-advisories@github.com"}, "description": {"description_data": [{"lang": "en", "value": "Nanopb is a small code-size Protocol Buffers implementation. In Nanopb before versions 0.4.4 and 0.3.9.7, decoding specifically formed message can leak memory if dynamic allocation is enabled and an oneof field contains a static submessage that contains a dynamic field, and the message being decoded contains the submessage multiple times. This is rare in normal messages, but it is a concern when untrusted data is parsed. This is fixed in versions 0.3.9.7 and 0.4.4. The following workarounds are available: 1) Set the option `no_unions` for the oneof field. This will generate fields as separate instead of C union, and avoids triggering the problematic code. 2) Set the type of the submessage field inside oneof to `FT_POINTER`. This way the whole submessage will be dynamically allocated and the problematic code is not executed. 3) Use an arena allocator for nanopb, to make sure all memory can be released afterwards."}, {"lang": "es", "value": "Nanopb es una implementaci\u00f3n de B\u00faferes de Protocolo de c\u00f3digo de tama\u00f1o peque\u00f1o. En Nanopb versiones anteriores a 0.4.4 y 0.3.9.7, la decodificaci\u00f3n de un mensaje formado espec\u00edficamente puede filtrar la memoria si es habilitada la asignaci\u00f3n din\u00e1mica y un campo contiene un submensaje est\u00e1tico que contiene un campo din\u00e1mico, y el mensaje que est\u00e1 siendo decodificado contiene el submensaje varias veces. Esto es raro en los mensajes normales, pero es preocupante cuando son analizados datos no fiables. Esto est\u00e1 corregido en las versiones 0.3.9.7 y 0.4.4. Est\u00e1n disponibles las siguientes soluciones provisionales: 1) Poner la opci\u00f3n \"no_unions\" para el campo uno. Esto generar\u00e1 campos como separados en lugar de la uni\u00f3n C, y evita desencadenar el c\u00f3digo problem\u00e1tico. 2) Ajustar el tipo de campo de submensaje dentro de uno de ellos a \"TP_POINTER\". De esta manera todo el submensaje ser\u00e1 asignado din\u00e1micamente y el c\u00f3digo problem\u00e1tico no ser\u00e1 ejecutado. 3) Usar un asignador de campos para el nanopb, para asegurarse de que toda la memoria pueda ser liberada despu\u00e9s"}]}, "references": {"reference_data": [{"url": "https://github.com/nanopb/nanopb/blob/2b48a361786dfb1f63d229840217a93aae064667/CHANGELOG.txt", "name": "", "refsource": "", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://github.com/nanopb/nanopb/commit/4fe23595732b6f1254cfc11a9b8d6da900b55b0c", "name": "", "refsource": "", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/nanopb/nanopb/issues/615", "name": "", "refsource": "", "tags": ["Exploit", "Patch", "Third Party Advisory"]}, {"url": "https://github.com/nanopb/nanopb/security/advisories/GHSA-85rr-4rh9-hhwh", "name": "", "refsource": "", "tags": ["Third Party Advisory"]}, {"url": "https://github.com/nanopb/nanopb/blob/2b48a361786dfb1f63d229840217a93aae064667/CHANGELOG.txt", "name": "", "refsource": "", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://github.com/nanopb/nanopb/commit/4fe23595732b6f1254cfc11a9b8d6da900b55b0c", "name": "", "refsource": "", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/nanopb/nanopb/issues/615", "name": "", "refsource": "", "tags": ["Exploit", "Patch", "Third Party Advisory"]}, {"url": "https://github.com/nanopb/nanopb/security/advisories/GHSA-85rr-4rh9-hhwh", "name": "", "refsource": "", "tags": ["Third Party Advisory"]}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-20"}, {"lang": "en", "value": "CWE-119"}]}]}}, "impact": {"baseMetricV2": {"cvssV2": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "baseScore": 4.3, "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL"}, "exploitabilityScore": 8.6, "impactScore": 2.9, "severity": "MEDIUM", "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}, "baseMetricV3": {"exploitabilityScore": 3.9, "impactScore": 3.6, "cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "baseScore": 7.5, "baseSeverity": "HIGH", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH"}}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "negate": false, "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:a:nanopb_project:nanopb:*:*:*:*:*:*:*:*", "matchCriteriaId": "E2479C6C-033B-4F28-895E-9ACDEB6956F2", "cpe_name": [], "versionEndExcluding": "0.3.9.7"}, {"vulnerable": true, "cpe23Uri": "cpe:2.3:a:nanopb_project:nanopb:*:*:*:*:*:*:*:*", "matchCriteriaId": "42DF75C8-803B-4F1A-AF78-929126981CBB", "cpe_name": [], "versionStartIncluding": "0.4.0", "versionEndExcluding": "0.4.4"}]}]}}