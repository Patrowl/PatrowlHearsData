{"cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2020-28707", "ASSIGNER": "cve@mitre.org"}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-79"}]}]}, "references": {"reference_data": [{"url": "http://stockdio.com", "name": "http://stockdio.com", "refsource": "", "tags": ["Vendor Advisory"]}, {"url": "http://stockdio.com", "name": "http://stockdio.com", "refsource": "", "tags": ["Vendor Advisory"]}, {"url": "https://jondow.eu/cve-2020-28707-xss-in-stockdio-historical-chart-plugin-for-wordpress-before-version-281/", "name": "https://jondow.eu/cve-2020-28707-xss-in-stockdio-historical-chart-plugin-for-wordpress-before-version-281/", "refsource": "", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://jondow.eu/cve-2020-28707-xss-in-stockdio-historical-chart-plugin-for-wordpress-before-version-281/", "name": "https://jondow.eu/cve-2020-28707-xss-in-stockdio-historical-chart-plugin-for-wordpress-before-version-281/", "refsource": "", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://wordpress.org/plugins/stockdio-historical-chart/#developers", "name": "https://wordpress.org/plugins/stockdio-historical-chart/#developers", "refsource": "", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://wordpress.org/plugins/stockdio-historical-chart/#developers", "name": "https://wordpress.org/plugins/stockdio-historical-chart/#developers", "refsource": "", "tags": ["Release Notes", "Third Party Advisory"]}]}, "description": {"description_data": [{"lang": "en", "value": "The Stockdio Historical Chart plugin before 2.8.1 for WordPress is affected by Cross Site Scripting (XSS) via stockdio_chart_historical-wp.js in wp-content/plugins/stockdio-historical-chart/assets/ because the origin of a postMessage() event is not validated. The stockdio_eventer function listens for any postMessage event. After a message event is sent to the application, this function sets the \"e\" variable as the event and checks that the types of the data and data.method are not undefined (empty) before proceeding to eval the data.method received from the postMessage. However, on a different website. JavaScript code can call window.open for the vulnerable WordPress instance and do a postMessage(msg,'*') for that object."}]}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:a:stockdio:stockdio_historical_chart:*:*:*:*:*:wordpress:*:*", "versionEndExcluding": "2.8.1", "cpe_name": []}]}]}, "impact": {"baseMetricV3": {"cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}, "baseMetricV2": {"cvssV2": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "severity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}}, "publishedDate": "2021-01-19T22:15Z", "lastModifiedDate": "2024-11-21T05:23Z"}