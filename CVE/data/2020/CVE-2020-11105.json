{"publishedDate": "2020-03-30T22:15Z", "lastModifiedDate": "2024-11-21T04:56Z", "cve": {"data_type": "CVE", "data_format": "MITRE", "data_version": "1.0", "CVE_data_meta": {"ID": "CVE-2020-11105", "ASSIGNER": "cve@mitre.org"}, "description": {"description_data": [{"lang": "en", "value": "An issue was discovered in USC iLab cereal through 1.3.0. It employs caching of std::shared_ptr values, using the raw pointer address as a unique identifier. This becomes problematic if an std::shared_ptr variable goes out of scope and is freed, and a new std::shared_ptr is allocated at the same address. Serialization fidelity thereby becomes dependent upon memory layout. In short, serialized std::shared_ptr variables cannot always be expected to serialize back into their original values. This can have any number of consequences, depending on the context within which this manifests."}, {"lang": "es", "value": "Se detect\u00f3 un problema en USC iLab cereal versiones hasta 1.3.0. Emplea el almacenamiento cach\u00e9 de los valores de std::shared_ptr, utilizando la direcci\u00f3n de puntero sin procesar como un identificador \u00fanico. Esto se vuelve problem\u00e1tico si una variable std::shared_ptr sale del alcance y es liberada, y una nueva std::shared_ptr es asignada en la misma direcci\u00f3n. La fidelidad de serializaci\u00f3n se vuelve dependiente del dise\u00f1o de la memoria. En resumen, no siempre puede esperarse que las variables std::shared_ptr serializadas sean serializadas de vuelta a sus valores originales. Esto puede tener muchas consecuencias, dependiendo del contexto dentro del cual se manifieste."}]}, "references": {"reference_data": [{"url": "https://github.com/USCiLab/cereal/issues/636", "name": "", "refsource": "", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://github.com/USCiLab/cereal/issues/636", "name": "", "refsource": "", "tags": ["Exploit", "Third Party Advisory"]}]}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-763"}]}]}}, "impact": {"baseMetricV2": {"cvssV2": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "baseScore": 7.5, "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL"}, "exploitabilityScore": 10.0, "impactScore": 6.4, "severity": "HIGH", "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}, "baseMetricV3": {"exploitabilityScore": 3.9, "impactScore": 5.9, "cvssV3": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "baseScore": 9.8, "baseSeverity": "CRITICAL", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH"}}}, "configurations": {"CVE_data_version": "4.0", "nodes": [{"operator": "OR", "negate": false, "children": [], "cpe_match": [{"vulnerable": true, "cpe23Uri": "cpe:2.3:a:usc:cereal:*:*:*:*:*:*:*:*", "matchCriteriaId": "A6F4B1C0-4CBE-45BE-A5F5-F8E8F6DCF076", "cpe_name": [], "versionEndIncluding": "1.3.0"}]}]}}